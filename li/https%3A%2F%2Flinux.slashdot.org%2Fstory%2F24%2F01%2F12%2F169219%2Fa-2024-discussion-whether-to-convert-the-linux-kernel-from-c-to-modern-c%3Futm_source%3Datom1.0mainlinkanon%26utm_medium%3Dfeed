<!-- html-header type=current begin -->
	
	<!DOCTYPE html>
	
	<html lang="en">
	<head>
	<!-- Render IE9 -->
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

	

	<script id="before-content" type="text/javascript">
(function () {
    if (typeof window.sdmedia !== 'object') {
         window.sdmedia = {};
    }
    if (typeof window.sdmedia.site !== 'object') {
        window.sdmedia.site = {};
    }

    var site = window.sdmedia.site;
    site.rootdir = "//slashdot.org";
}());

var pageload = {
	pagemark: '910421555641139081',
	before_content: (new Date).getTime()
};
function pageload_done( $, console, maybe ){
	pageload.after_readycode	= (new Date).getTime();
	pageload.content_ready_time	= pageload.content_ready - pageload.before_content;
	pageload.script_ready_time	= pageload.after_readycode - pageload.content_ready;
	pageload.ready_time		= pageload.after_readycode - pageload.before_content;
	// Only report 1% of cases.
	maybe || (Math.random()>0.01) || $.ajax({ type: 'POST', data: {
		op: 'page_profile',
		pagemark: pageload.pagemark,
		dom: pageload.content_ready_time,
		js: pageload.script_ready_time
	} });
}
</script>
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
	
		<title>A 2024 Discussion Whether To Convert The Linux Kernel From C To Modern C++ - Slashdot</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	  
		<meta name="description" content="serviscope_minor shares a Phoronix post:  A six year old Linux kernel mailing list discussion has been reignited over the prospects of converting the Linux kernel to supporting modern C++ code. The Linux kernel is predominantly made up of C code with various hand-written Assembly plus the growing wo...">
	    
		<meta name="twitter:card" content="summary">
		<meta name="twitter:site" content="@slashdot">
		<meta name="twitter:domain" content="linux.slashdot.org">
		<meta property="og:url" content="https://linux.slashdot.org/story/24/01/12/169219/a-2024-discussion-whether-to-convert-the-linux-kernel-from-c-to-modern-c?utm_source=rss1.0mainlinkanon&utm_medium=feed">
	    
		<meta property="og:title" content="A 2024 Discussion Whether To Convert The Linux Kernel From C To Modern C++ - Slashdot">
		<meta property="og:description" content="serviscope_minor shares a Phoronix post:  A six year old Linux kernel mailing list discussion has been reignited over the prospects of converting the Linux kernel to supporting modern C++ code. The Linux kernel is predominantly made up of C code with various hand-written Assembly plus the growing wo...">
	  
	
	
		<meta property="og:image" content="https://a.fsdn.com/sd/topics/programming_64.png">
	
		<meta property="fb:admins" content="100000696822412">
		<meta property="fb:page_id" content="267995220856">
	
		<meta name="viewport" content="width=1000, user-scalable=yes, minimum-scale=0, maximum-scale=10.0" />
		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black">
	
		<link rel="canonical" href="https://linux.slashdot.org/story/24/01/12/169219/a-2024-discussion-whether-to-convert-the-linux-kernel-from-c-to-modern-c">
		
		<link rel="alternate" media="only screen and (max-width: 640px)" href="https://m.slashdot.org/story/423669" >
	

		<!--[if IE 8]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie8-classic.ssl.css?113c0e21a080c5f1" ><![endif]-->
		<link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/classic.ssl.css?113c0e21a080c5f1" >
		<!--[if IE 7]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie7-classic.ssl.css?113c0e21a080c5f1" ><![endif]-->
	
	
	



	
	<!--  -->

	
	

	
	<!-- SMACKS: NEW CSS -->
	<link rel="stylesheet" href="//a.fsdn.com/sd/css/app.css?113c0e21a080c5f1">

	<script src="//a.fsdn.com/con/js/sftheme/cmp2.js?2023-10-30"></script>
	<script src="https://slashdot.org/country.js"></script>
	<script>
		window.bizx.cmp.init({cmp_id: 12126, geo: window});
	</script>
	<link rel="stylesheet" href="//a.fsdn.com/con/css/sftheme/sandiego/cmp.css?2020-06-11" type="text/css">

	<script type='text/javascript'>
var _gaq = _gaq || [];
</script>

<script>
window.SD = {};
window.SD.Ads = {};

bizx.cmp.ifConsent('', ['all'], function () {
    var bt = 'https://btloader.com/tag?o=5098683085881344&upapi=true';
    bizx.cmp.embedScript(bt, true);
    window.addEventListener('AcceptableAdsInit', function (e) {
      if(e.detail) {
        console.log('acceptable ads on');
        SD.Ads.acceptable_ads_active = true;
      } else {
        console.log('acceptable ads off');
        SD.Ads.acceptable_ads_active = false;
      }
    });
});
</script>



         
   
   

<script type="text/javascript" id="pbjs_script" data-dom="https://d3tglifpd8whs6.cloudfront.net"  src="https://d3tglifpd8whs6.cloudfront.net/js/prebid/slash-story/slash-story.min.js"></script>
<script type='text/javascript'>
    /*global performance */
    var googletag = window.googletag || {};
    googletag.cmd = googletag.cmd || [];

		window.SD.Ads.slotsById = {};
		window.SD.Ads.idsByPath = {};

		window.SD.Ads.visibleTime = {};
		window.SD.Ads.Helpers = {};

		//window.SD = SD;

    bizx.cmp.ifConsent('', ['all','prebid'], function(){
        window.bizxPrebid.Ads.initPrebid(window.bizxPrebid.adUnits);
    }, function() {
		// no 'prebid' consent (e.g. region without prebid consent string support) but try GPT directly
		bizx.cmp.ifConsent('', ['all', 'google-ads'], function () {
			bizx.cmp.embedScript('https://securepubads.g.doubleclick.net/tag/js/gpt.js');
		});
	});
</script>

<!-- prep GPT ads -->
<script type='text/javascript'>
(function() {
	function page_type (loc) {
		/*
		only four page types:
		- Story
		- Poll
		- Homepage (/ only)
		- Other (but AdOps wants 'Homepage' again)
		*/
		var path = loc.pathname;
		var just_the_root = /^\/?$/.test(path);
		var story_or_poll = /^\/(story(?=\/)|submission(?=\/)|poll(?=\/|Booth|s\b))/i.exec(path);

		var page_type = just_the_root ? 'homepage'
			: story_or_poll ? story_or_poll[1]
				: 'other'

		// exceptions
		if (page_type.toLowerCase() === 'submission')
			page_type = 'story'; // submissions are like stories, right?
		else if (page_type.toLowerCase() === 'other')
			page_type = 'homepage'; // this one might move out of here

		return page_type;
	}

	function page_section(loc) {
		//var greek = ['alpha', 'beta', 'gamma', 'delta'].join('|');
		//var hostwise = '^([a-z]+)(?:-(?:'+greek+'))?\\.(?:slashdot\\.org|\\.xb\\.sf\\.net)$';
		var pathwise = '^/(?:(recent|popular|blog)|stories/([^/]+))';
		var rootwise = '^\/?$';

		//var hostwisely = new RegExp(hostwise,'i').exec(loc.hostname);
		var pathwisely = new RegExp(pathwise, 'i').exec(loc.pathname);
		var rootwisely = new RegExp(rootwise, 'i').exec(loc.pathname);

		var section = (rootwisely && 'homepage')
			|| (pathwisely && (pathwisely[1] || pathwisely[2]))
			|| ''
		;

		return section.replace(/[^_a-z]/ig, '');
	}

	function single_size(size) {
		return '' + size[0] + 'x' + size[1];
	}

	function sz_sz(sz) {
		var str = '';
		var sizes = [];
		if (sz[0] instanceof Array) {
			for (size in sz) {
				sizes.push(single_size(sz[size]));
			}
			return sizes.join(',');
		} else {
			return single_size(sz);
		}
	}

	function unique_tpc_array(array1, array2) {
		var j = array1.concat(array2);
		j.forEach(function (v, i, a) {
			a[i] = v.replace(/[^_a-z]/ig, '');
		});
		return j.filter(function (v, i, a) {
			return v != '' && a.indexOf(v) === i;
		});
	}

	/* LEGEND:
		- 'sz' = "size"
		- 'npt' = "no page type" in ad unit name
	*/
	var tags = {
		'728x90_A': {'sz': [[728, 90], [970, 90], [970, 250], [980, 66]]},
		'728x90_B': {'sz': [728, 90]},
		'728x90_C': {'sz': [728, 90], 'skip': {'homepage': 1}},
		'HubIcon_200x90_A': {'sz': [[200, 90], [220, 90]]},
		'PowerSwitch_980x66_A': {'sz': [980, 66], 'skip': {'homepage': 1}},
		'PollPeel': {'sz': [200, 90], 'skip': {'homepage': 1}},
		//'VideoWidget_300x250': { 'sz': [300, 250], 'npt': 1 },
		'300x250_A': {'sz': [[300, 250], [300, 600], [300, 1050]]},
		'300x250_B': {'sz': [[300, 250], [300, 600]]},
		'300x250_C': {'sz': [[300, 250], [300, 600]]},
		'300x250_D': {'sz': [[300, 250], [300, 600]]},
		'Pulse_300x600_A': {'sz': [300, 600]},
		//'Polls_Detail_300x250_A': { 'sz': [[300, 250], [300, 600]], 'npt': 1 },
		//'Poll_300x250_A': { 'sz': [[300, 250], [300, 600]], 'npt': 1 },
		//'SD_Story_1x1': { 'sz': [1, 1] },
		'1x1': {'sz': [1, 1]}
	};

	//var network_path = '/41014381/Slashdot/';
	var network_path = '/41014381/Slashdot/';
	var tag_name_prefix = 'SD';
	var tag_name_linkage = '_';
	var tag_name_pagetype = page_type(location);
	var tag_topic = page_section(location);
	if (tag_name_pagetype == 'poll') {
		tag_name_pagetype = 'Poll';
	}
	var before_tag_pagetyped = network_path
		+ tag_name_prefix
		+ tag_name_linkage
		+ tag_name_pagetype
		+ tag_name_linkage
	;
	var before_tag_pagetypeless = network_path
		+ tag_name_prefix
		+ tag_name_linkage
		/* + tag_name_pagetype */
		/* + tag_name_linkage */
	;

		//can be safely called
		googletag.cmd.push(function () {

			function remove_sticky_top() {
				setTimeout(function () {
					$('#div-gpt-ad-728x90_a').parent('div').addClass('adwrap-viewed-banner');
					$('#div-gpt-ad-728x90_a').addClass('viewableImpression');
				}, 1000);
			}

			function remove_sticky_railad() {
				setTimeout(function () {
					$('#slashboxes .adwrap-unviewed').addClass('adwrap-viewed-railad');
					$('.railad').addClass('viewableImpression');
				}, 1000);
			}

			function viewable_imp(slot) {
				for (var i in slot) {
					remove_sticky_top();
					remove_sticky_railad();
					if (typeof slot[i] !== 'string') continue;
					switch (slot[i]) {
						//case "/41014381/Slashdot/SD_homepage_728x90_A":
						//case "/41014381/Slashdot/SD_story_728x90_A":
						//case "/41014381/Slashdot/SD_Poll_728x90_A":
						//case "/41014381/Slashdot/SD_homepage_728x90_Ref_A":
						//case "/41014381/Slashdot/SD_story_728x90_Ref_A":
						//case "/41014381/Slashdot/SD_Poll_728x90_Ref_A":
						//remove_sticky_top();
						//break;
						//case "/41014381/Slashdot/SD_homepage_300x250_A":
						//case "/41014381/Slashdot/SD_story_300x250_A":
						//case "/41014381/Slashdot/SD_Poll_300x250_A":
						//case "/41014381/Slashdot/SD_homepage_300x250_Ref_A":
						//case "/41014381/Slashdot/SD_story_300x250_Ref_A":
						//case "/41014381/Slashdot/SD_Poll_300x250_Ref_A":
						//remove_sticky_railad();
						//break;
					}
					//if(slot[i] === "/41014381/Slashdot/SD_homepage_728x90_A") remove_sticky_top();
					//if(slot[i] === "/41014381/Slashdot/SD_homepage_300x250_A") remove_sticky_railad();
				}
			}

			function define_me_a_slot(tag) {
				if (tags[tag].skip && tags[tag].skip[tag_name_pagetype])
					return;
				var sandbox_regex = /\.xb\.sf\.net$/i;
				var full_name = tags[tag].npt  // "no page type"
					? before_tag_pagetypeless + tag
					: before_tag_pagetyped + tag
				;
				var div_id = 'div-gpt-ad-' + tag.toLowerCase();
				// extend jQuery and get URL query params
				jQuery.extend({
					getQueryParameters: function (str) {
						return (str || document.location.search).replace(/(^\?)/, '').split("&").map(function (n) {
							return n = n.split("="), this[n[0]] = n[1], this
						}.bind({}))[0];
					}
				});

				var queryParams = $.getQueryParameters();

				if (queryParams.source === 'autorefresh') {
					full_name = full_name.replace(/(\d+x\d+)/, '$1_Ref');
					//console.log('TAG NAME: ', full_name);
				}

				var slot = googletag.defineSlot(
					full_name,
					tags[tag].sz,
					div_id
				);

				service = slot.addService(googletag.pubads());

				window.SD.Ads.slotsById[div_id] = slot;
				window.SD.Ads.idsByPath[full_name] = div_id;

				service.setTargeting('sz', tags[tag].sz);

				
				var frontend_tpc = tag_topic.split(",");
				var backend_tpc = [ "linux", "programming" ];

				var tpc_final = unique_tpc_array(frontend_tpc, backend_tpc);
				service.setTargeting('tpc', tpc_final);
				if (location.hostname.match(sandbox_regex)) {
					service.setTargeting('test', 'adops');
				}

			}

		for (tag in tags) {
			define_me_a_slot(tag, false);
		}


			googletag.pubads().addEventListener('slotVisibilityChanged', window.SD.Ads.visibilityChangedTracker);


		googletag.pubads().addEventListener('impressionViewable', function(event) {
			viewable_imp(event.slot);
		    });

                googletag.pubads().setTargeting('requestSource', 'GPT');
		googletag.pubads().enableAsyncRendering();
		

		googletag.pubads().collapseEmptyDivs();
		window.bizxPrebid.SAFEFRAMES = true;
		window.SD.Ads.setupAdRefresh();
		bizxPrebid.Ads.pushToGoogle();
		googletag.enableServices();
	});
})();


/* Ad-Refresh code */
window.SD.Ads.visibilityChangedTracker = function(event) {
	var id = event.slot.getSlotElementId();
	if (!window.SD.Ads.visibleTime.hasOwnProperty(id)) {
		window.SD.Ads.visibleTime[id] = {
			visible: false,
			prevVisibleTotal: 0,
			wasVisibleBeforePageBgd: false,
			reloadCount: 0
		};
	}
	var timeinfo = window.SD.Ads.visibleTime[id];
	if (event.inViewPercentage >= 50 && !document.hidden) {
		if (!timeinfo.visible) {
			timeinfo.visible = performance.now();
		}
	} else {
		if (timeinfo.visible) {
			timeinfo.prevVisibleTotal += performance.now() - timeinfo.visible;
			timeinfo.visible = false;
		}
	}
};

window.SD.Ads.setupAdRefresh = function() {
	document.addEventListener('visibilitychange', function () {
		for (var id in window.SD.Ads.visibleTime) {
			if (window.SD.Ads.visibleTime.hasOwnProperty(id)) {
				var timeinfo = window.SD.Ads.visibleTime[id];
				if (document.hidden) {
					timeinfo.wasVisibleBeforePageBgd = !!timeinfo.visible;
					if (timeinfo.visible) {
						timeinfo.prevVisibleTotal += performance.now() - timeinfo.visible;
						timeinfo.visible = false;
					}
				} else if (!document.hidden && timeinfo.wasVisibleBeforePageBgd) {
					timeinfo.visible = performance.now();
				}
			}
		}
	}, false);

	// after 30 sec, start checking every second for reload
	var LIMIT_MS = 30000;
	setTimeout(function () {
		//
		setInterval(function () {
			if (document.hidden) {
				return;
			}
			for (var id in window.SD.Ads.visibleTime) {
				if (window.SD.Ads.visibleTime.hasOwnProperty(id)) {
					var timeinfo = window.SD.Ads.visibleTime[id];
					if (timeinfo.visible &&
						timeinfo.prevVisibleTotal + (performance.now() - timeinfo.visible) >= LIMIT_MS &&
						timeinfo.reloadCount < 50
					) {
						timeinfo.reloadCount++;
						timeinfo.visible = false;
						timeinfo.prevVisibleTotal = 0;
						window.SD.Ads.Helpers.refreshBids([id]);
					}
				}
			}
		}, 1000);
	}, LIMIT_MS);
};

window.SD.Ads.Helpers.refreshBids = function (reloadIds) {
		console.log('AD REFRESH: refreshBids', reloadIds);
		pbjs.que.push(function () {
			for (var i = reloadIds.length-1; i >= 0; i--) {
				var id = reloadIds[i];
				// clear out winner status from earlier auctions
				if (bizxPrebid.Ads.prebidWinners[id]) {
					delete bizxPrebid.Ads.prebidWinners[id];
				}
				// if has complement (hubicon), remove it since they are just house ads and can cause funky layouts if this leaderboard is refreshed to a different size
				var path = window.SD.Ads.slotsById[id].getAdUnitPath();
				/*var complement = gptadComplements[path];
				if (complement) {
					var complement_shortname = complement[0];
					var complement_path = "/41014381/SD/" + complement_shortname;
					var slot = window.SD.Ads.slotsById[window.SD.Ads.idsByPath[complement_path]];
					if (slot) {
						googletag.destroySlots([slot]);
						var $wrappedAd = $(window.SD.Ads.Helpers.getContainerIDFromPath(complement_path));
						$wrappedAd.remove();
						delete gptadComplements[path];
					}
				}*/

			}

			pbjs.requestBids({
				timeout: window.bizxPrebid.PREBID_TIMEOUT,
				adUnitCodes: reloadIds,
				bidsBackHandler: function () {
					var reloadSlots = reloadIds.map(function(id) { return window.SD.Ads.slotsById[id]; });

					// clear out previous sizing attrs, as they may change after refresh
/*
					for (var i = 0; i < reloadSlots.length; i++) {
						var $wrappedAd = $(window.SD.Ads.Helpers.getContainerIDFromPath(reloadSlots[i].getAdUnitPath()));
						var classes = $wrappedAd.attr('class').split(' ');
						for (var j = 0; j < classes.length; j++) {
							if (classes[j].indexOf('sz_') >= 0) {
								$wrappedAd.removeClass(classes[j]);
							}
						}
					}
*/
					pbjs.setTargetingForGPTAsync(reloadIds);
					googletag.pubads().refresh(reloadSlots);
				}
			});
		});
	}
</script>

<!-- CrossPixel -->
<script type="text/javascript">
if (window.is_euro_union === 0) {
    bizx.cmp.ifConsent('', ['all'], function(){
        try{(function(){ var cb = new Date().getTime(); var s = document.createElement("script"); s.defer = true; s.src = "//tag.crsspxl.com/s1.js?d=2397&cb="+cb; var s0 = document.getElementsByTagName('script')[0]; s0.parentNode.insertBefore(s, s0); })();}catch(e){}
    });
}
</script>




<!-- AdBlock Check -->
<script>
var sdAdBlockActive = true;
</script>
<script async src="//a.fsdn.com/sd/js/scripts/adsbanner.js?113c0e21a080c5f1"></script>
</head>

<body class="anon firehose ">

	
	<script src="//a.fsdn.com/sd/all-minified.js?113c0e21a080c5f1" type="text/javascript"></script>
	
	
	<script type="text/javascript">
(function(){
var regexp=/\s*(?:\d+|many)\s+more\s*/i;

	
	var auto_more_count = 1;

	function auto_more(){
		var $more_link = $('#more-experiment a');
		$more_link.each(function(){
			var $lastitem = $('#firehoselist>article.fhitem:visible:last');
			if ( Bounds.intersect(window, $lastitem) ) {
			
			
				!--auto_more_count && (auto_more=undefined);
				// don't allow a call till the next paginate gets built and |more_possible|
				$(document).unbind('scroll', call_auto_more);
			}
		});
	};

	function call_auto_more(){ auto_more && auto_more(); }
	

$('#more-experiment a').
	live('more-possible', function( event ){
		var $more_link=$(this);
		if ( regexp.test($more_link.text()) ) {
		
			$(document).bind('scroll', call_auto_more);
		} else {
			$(document).unbind('scroll', call_auto_more);
		
		}
	});
})();
</script>
	<!--[if lt IE 9]><script src="//a.fsdn.com/sd/html5.js"></script><![endif]-->
	
	
	<!-- index2_variant ||-->
		<script>
	if (window.is_euro_union === 0) {
            bizx.cmp.ifConsent('', ['all'], function () {
                (function (s,o,n,a,r,i,z,e) {s['StackSonarObject']=r;s[r]=s[r]||function(){
                (s[r].q=s[r].q||[]).push(arguments)},s[r].l=1*new Date();i=o.createElement(n),
                z=o.getElementsByTagName(n)[0];i.async=1;i.src=a;z.parentNode.insertBefore(i,z)
                })(window,document,'script','https://www.stack-sonar.com/ping.js','stackSonar');
                stackSonar('stack-connect', '66');
            });
        }
	</script>
        <!-- jobbio !-->

        <script type="text/javascript">
        bizx.cmp.ifConsent('', ['all'], function () {
        var j_script = document.createElement('script')
        j_script.setAttribute('src', 'https://widgets.jobbio.com/partner_fluid_widgets_v1.6.1/display.min.js')
        j_script.setAttribute('id','jobbio-display-script')
        j_script.setAttribute('async','')
        j_script.onload = function handle(){
        if (document.getElementById('bottom-masonry')){
            jobbio_display.widget({
                slug: 'slashdot-jobs',
                container: 'bottom-masonry',
                style: 'masonry',
                count: 6,
                type: 'multiple',
                content: 'jobs',
                searchTerm: '',
            });
        }

        jobbio_display.widget({
            slug: 'slashdot-jobs',
            container: 'horizontal',
            style: 'horizontal',
            count: 4,
            type: 'multiple',
            content: 'jobs',
            searchTerm: '',
        })
        if (document.getElementById('sidebar-j')){
            jobbio_display.widget({
                slug: 'slashdot-jobs',
                container: 'sidebar-j',
                style: 'sidebar',
                count: 6,
                type: 'multiple',
                content: 'jobs',
                searchTerm: '',
            });
        }

        }
        document.head.appendChild(j_script);
        })
        </script>
        <!-- mailchimp newsletter !-->
        <script id="mcjs">
        if (document.domain.match(/^(tech\.)?slashdot\.org$|\.xb\./)) {
            bizx.cmp.ifConsent('', ['all'], function () {
                !function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,"script","https://chimpstatic.com/mcjs-connected/js/users/aab6529d3675bd877963a652d/fc2aefbb539f9ecd8f1ab4cee.js");    
            });
        }
        </script>
		<!-- html-header type=current end --><!-- header type=current begin -->
	
	
	
	<link rel="top"       title="News for nerds, stuff that matters" href="//slashdot.org/" >
<link rel="search"    title="Search Slashdot" href="//linux.slashdot.org/search.pl">
<link rel="alternate" title="Slashdot RSS" href="https://rss.slashdot.org/Slashdot/slashdotLinux" type="application/rss+xml">
	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">

	
		<div id="top_parent"></div>
		<a name="topothepage"></a>
		
		<div class="container">
			<div class="nav-wrap">
				<nav class="nav-primary" role="navigation" aria-label="Global Navigation">
					<h1 class="logo">
	<a href="//slashdot.org"><span>Slashdot</span></a>
</h1>

<ul class="nav-site">
	<li><a href="//slashdot.org"><i class="icon-book" title="Stories"></i><span>Stories</span></a></li>
	<li>
		<ul class="filter-firehose">
			<li class="nav-label">Firehose <i class="icon-angle-right"></i></li>
			<li><a href="//slashdot.org/recent">All</a></li>
			<li><a href="//slashdot.org/popular">Popular</a></li>
		</ul>
	</li>
	<li><a href="//slashdot.org/polls"><i class="icon-chart-bar" title="Polls"></i><span>Polls</span></a></li>

	<!--
	<li><a href="//ask.slashdot.org"><i class="icon-question-circle"></i><span>Ask</span></a></li>
	
	<li><a href="//events.slashdot.org"><i class="icon-calendar"></i><span>Events</span></a></li>
	-->
	<li><a href="https://slashdot.org/software/"><i class="sd-mini"></i> <span>Software</span></a></li>
        <li><a href="//slashdot.org/newsletter"><span>Newsletter</span></a></li>
        <li><a href="//slashdot.org/jobs" rel="nofollow"><span>Jobs</span></a></li>
</ul>
<a href="//slashdot.org/submission" class="btn btn-success">Submit</a>
				</nav>
				<nav class="nav-user" role="navigation" aria-label="user access and account controls">
					<form id="search" class="form-inline nav-search-form" method="get" action="//slashdot.org/index2.pl">
<!-- //linux.slashdot.org/index2.pl" -->
	<div class="form-group">
		<label class="sr-only" for="sitesearch">Search Slashdot</label>
		<div class="input-group">
			<input type="text" id="" class="" name="fhfilter" value="" placeholder="Search">
		</div>
	</div>
	<button type="submit" class="btn icon-search"></button>
</form>
<ul class="user-access">
	
		
			<li >
				<a href="//slashdot.org/my/login"  onclick="show_login_box(); return false;"><i class="icon-login"></i><span> Login</span></a>
				
			</li>
		
	
		
			<li class="nav-label">or</li>
		
	
		
			<li >
				<a href="//slashdot.org/my/newuser"  ><i class="icon-user-add"></i><span> Sign up</span></a>
				
			</li>
		
	
</ul>
				</nav>
			</div>
			<div class="nav-secondary-wrap">
				<nav class="nav-secondary" role="secondary-navigation">
	<ul>
		<li class="nav-label">Topics: </li>
		<li><a href="//devices.slashdot.org">Devices</a></li>
		<li><a href="//build.slashdot.org">Build</a></li>
		<li><a href="//entertainment.slashdot.org">Entertainment</a></li>
		<li><a href="//technology.slashdot.org">Technology</a></li>
		<li><a href="//slashdot.org/?fhfilter=opensource">Open Source</a></li>
		<li><a href="//science.slashdot.org">Science</a></li>
		<li><a href="//yro.slashdot.org">YRO</a></li>
		<!-- <li><a href="//slashdot.org/topics.pl">more...</a></li> -->
	</ul>
</nav>
<nav class="nav-social" role="social navigation">
	<ul>
		<li class="nav-label">Follow us:</li>
		<li><a href="https://rss.slashdot.org/Slashdot/slashdotMain" target="_blank" rel="nofollow"><i class="icon-rss-squared"></i><span class="sr-only">RSS</span></a></li>
		<li><a href="https://www.facebook.com/slashdot" target="_blank" rel="nofollow"><i class="icon-facebook-squared"></i><span class="sr-only">Facebook</span></a></li>
		<li><a href="https://www.linkedin.com/company/slashdot" target="_blank" rel="nofollow"><i class="icon-linkedin-squared"></i><span class="sr-only">LinkedIn</span></a></li>
		<li><a href="https://twitter.com/slashdot" target="_blank" rel="nofollow"><i class="icon-twitter-squared"></i><span class="sr-only">Twitter</span></a></li>
		<li><a href="https://www.youtube.com/channel/UCsW36751Gy-EAbHQwe9WBNw" target="_blank" rel="nofollow"><i class="icon-youtube-squared">
                    <!-- width="1792" height="1792" -->
                    <svg viewBox="0 260 1792 1260" xmlns="http://www.w3.org/2000/svg"><path d="M711 1128l484-250-484-253v503zm185-862q168 0 324.5 4.5t229.5 9.5l73 4q1 0 17 1.5t23 3 23.5 4.5 28.5 8 28 13 31 19.5 29 26.5q6 6 15.5 18.5t29 58.5 26.5 101q8 64 12.5 136.5t5.5 113.5v176q1 145-18 290-7 55-25 99.5t-32 61.5l-14 17q-14 15-29 26.5t-31 19-28 12.5-28.5 8-24 4.5-23 3-16.5 1.5q-251 19-627 19-207-2-359.5-6.5t-200.5-7.5l-49-4-36-4q-36-5-54.5-10t-51-21-56.5-41q-6-6-15.5-18.5t-29-58.5-26.5-101q-8-64-12.5-136.5t-5.5-113.5v-176q-1-145 18-290 7-55 25-99.5t32-61.5l14-17q14-15 29-26.5t31-19.5 28-13 28.5-8 23.5-4.5 23-3 17-1.5q251-18 627-18z"/></svg>
                </i><span class="sr-only">Youtube</span></a></li>
		<li><a href="https://mastodon.cloud/@slashdot" target="_blank" rel="me nofollow"><i class="icon-mastodon-squared">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M433 179.11c0-97.2-63.71-125.7-63.71-125.7-62.52-28.7-228.56-28.4-290.48 0 0 0-63.72 28.5-63.72 125.7 0 115.7-6.6 259.4 105.63 289.1 40.51 10.7 75.32 13 103.33 11.4 50.81-2.8 79.32-18.1 79.32-18.1l-1.7-36.9s-36.31 11.4-77.12 10.1c-40.41-1.4-83-4.4-89.63-54a102.54 102.54 0 0 1-.9-13.9c85.63 20.9 158.65 9.1 178.75 6.7 56.12-6.7 105-41.3 111.23-72.9 9.8-49.8 9-121.5 9-121.5zm-75.12 125.2h-46.63v-114.2c0-49.7-64-51.6-64 6.9v62.5h-46.33V197c0-58.5-64-56.6-64-6.9v114.2H90.19c0-122.1-5.2-147.9 18.41-175 25.9-28.9 79.82-30.8 103.83 6.1l11.6 19.5 11.6-19.5c24.11-37.1 78.12-34.8 103.83-6.1 23.71 27.3 18.4 53 18.4 175z"/></svg>
				</i><span class="sr-only">Mastodon</span></a></li>
		<li><a href="//slashdot.org/newsletter" target="_blank" rel="nofollow"><i class="icon-mail-squared"></i><span class="sr-only">Newsletter</span></a></li>
	</ul>
</nav>
			</div>
		</div>

		<section>
		
			<div class="message-bar" id="firehose-message-tray">
				<span class="icon-quote-left"></span>
				<p>
					
						
						Please <strong><a href="//linux.slashdot.org/login.pl">create an account</a></strong> to participate in the Slashdot moderation system
					
				</p>
			</div>
		
		
			<div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
		
		
			<div class="banner-wrapper">
				<div class="adwrap adwrap-unviewed banner-contain">
					
					<div id='div-gpt-ad-728x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_a');});</script></div>
					<div id='div-gpt-ad-hubicon_200x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-hubicon_200x90_a');});</script></div>
				</div>
			</div>
		
		<a name="main-articles"></a>
	
	<!-- header type=current end --><!-- body begin -->







	

	<style type="text/css">
menu, menu * {
	text-decoration:none;
}

menu[type=context] {
	display:none;
	position:absolute;
	z-index:10000;
}

menu[type=context]:not(.brief) {
	background-color:#dfdfdf;
	margin:0;
	padding:2px 0.5em;
	border-style:solid;
	border-width:1px;
	border-color:#eeeeee #aaaaaa #aaaaaa #eeeeee;
	-moz-border-radius-topright:.7em;
	-webkit-border-top-right-radius: 0.7em 0.7em;
}

menu.full[type=context] > a.slash-hover:first-child {
	-moz-border-radius-topright:.6em;
	-webkit-border-top-right-radius: 0.6em 0.6em;
}



menu.brief[type=context] > a {
	-moz-border-radius:.6em;
	-webkit-border-radius: 0.6em;
	color:#ffffff;
	background-color:#000000;
}

/*
span.briefmenu a.tag:not(.datatype) {
    padding-left:.5em;
}
*/




/* #tag-menu a, #feedback-menu a  { */
menu.tag-menu-admin a {
	display:list-item;
	list-style:none;
	text-align:left;
	font-weight:bold;
	color:black;
	padding:0.1em 0.5em;
	margin:-0.1em -0.5em;
	cursor:pointer;
}


.tags .edit-bar { position:relative; }
article aside .share .addthis_toolbox { display:block; width:60px; float:left; }
article aside.view_mode .share { min-width:120px; padding-top:.5em; }
#firehose.list article header h2 {padding-left: 20px; !important}
.novote .vote { display:none; }

.vote > a, .votedup > a, .voteddown > a {
	display:inline-block;
	height:22px;
	width:22px;
	margin: 2px 10px 0 0;
	color:rgb(255,255,255);
	text-decoration:none;
	line-height:22px;
	text-align:center;
	font-weight:bold;
	font-size:14px;
	border-width:1px;
	border-style:solid;
	border-color:rgba(0,0,0,0.5);
}

.vote > a, .votedup > a, .voteddown > a {color:rgb(0,0,0);}

article.fhitem-submission h2 .vote > a, article.fhitem-submission h2 .votedup > a, article.fhitem-submission h2 .voteddown > a { border-color:rgba(0,0,0,0.15); }
.vote .up, .vote .down, .votedup .up, .votedup .down, .voteddown .up, .voteddown .down { border-radius: 4px; -moz-border-radius: 4px; -webkit-border-radius: 4px; /* text-shadow:0 0 2px #000000; }*/}
article:not(.fhitem-story) .vote .up,article:not(.fhitem-story) .vote .down,article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .votedup .down,article:not(.fhitem-story) .voteddown .up,article:not(.fhitem-story) .voteddown .down { /*text-shadow:none !important; */}
.voteddown .down, .votedup .up { margin-right: 10px; text-indent:2px; line-height:24px; }
article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .voteddown .down {background: rgb(174,174,174);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(174,174,174)), to(rgb(193,193,193)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(193,193,193), rgb(174,174,174) 100%);color:rgb(0,0,0);}
article.fhitem-story .votedup .up,article.fhitem-story .voteddown .down {background: rgb(0,66,66);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(0,53,53)), to(rgb(0,102,102)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(0,102,102), rgb(0,53,53) 100%);}




#tag-menu span.var-tag {
font-weight:normal;
color:#444444;
}

menu.reasons-menu a {
padding:0 .25em 0 .25em;
font-size:80%;
-moz-border-radius:.5em;
-webkit-border-radius:.5em;
cursor:pointer;
}

menu.reasons-menu a:hover {
background:rgb(153,153,153);
background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102);
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102)));
color:#fff;
text-decoration:none;
font-weignt:normal;
}

article.fhitem-story menu.reasons-menu a:hover {
background:#002323 !important;
background:-moz-linear-gradient(100% 100% 90deg, #002323, #005353 70%) repeat scroll 0 0 #002323 !important;
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#005353), to(#002323)) !important;
}


menu.reasons-menu {
	display:none;
	margin:0;
	padding:0;
}

div.fhitem h3 menu.reasons-menu {
margin:0.25em 0 0;
}

div.fhitem h3 menu.reasons-menu a.tag {
font-size:.8em;
}

#tag-menu a.slash-hover,
#feedback-menu a.slash-hover,

.tag-display span.tag:hover,
.tag-display span.tag.trigger {
	color:white;
	background-color:rgb(0, 85, 85);
}

#tag-menu a.slash-hover span.var-tag {
	color:#eee;
}

.tag-entry.default {
        color:#ccc;
}

.brief .nix {
	margin-top:-1.35em;
	margin-left:0px;
	margin-top:-1.15em;
	text-decoration:none;
	line-height:1.35em;
	padding:0 2px;
	-moz-border-radius:.6em 0 0 .6em;
	-webkit-border-radius:.6em 0 0 .6em;
	-o-border-radius:.6em 0 0 .6em;
	border-radius:.6em 0 0 .6em;
    color:#fff !important;
    background:transparent !important;
}

.brief .nix:hover {
    background:rgb(153,153,153) !important;
    background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102) !important;
    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102))) !important;
}

</style>

<menu id="nix-reasons" style="display:none">
	<a class="tag">binspam</a><a class="tag">dupe</a><a class="tag">notthebest</a><a class="tag">offtopic</a><a class="tag">slownewsday</a><a class="tag">stale</a><a class="tag">stupid</a>
</menu>
<menu id="nod-reasons" style="display:none">
	<a class="tag">fresh</a><a class="tag">funny</a><a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">maybe</a>
</menu>
<menu id="comment-nix-reasons" style="display:none">
	<a class="tag">offtopic</a><a class="tag">flamebait</a><a class="tag">troll</a><a class="tag">redundant</a><a class="tag">overrated</a>
</menu>
<menu id="comment-nod-reasons" style="display:none">
	<a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">informative</a><a class="tag">funny</a><a class="tag">underrated</a>
</menu>

<menu id="tag-nod-reasons" style="display:none">
	<a class="tag">descriptive</a>
</menu>
<menu id="feedback-menu" class="tag-menu-admin" type="context">
	<a class="tag">typo</a><a class="tag">dupe</a><a class="tag">error</a>
</menu>
<menu id="tag-menu" class="tag-menu-admin none" type="context">

<!--	<a data-op="!" class="nix">!<span class="var-tag hide"></span></a>-->

</menu>

<script type="text/javascript">
$(function(){
var $CURRENT_MENU, $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/, IE7=/^7\.0/, TAG_PREFIX=/^\/tag\//;

function get_tag_name( $tag ){
	return ($tag.attr('href') || '').replace(TAG_PREFIX, '') || $tag.text().toLowerCase();
}

function trigger_menu( e, selector, $menu, menu_content ){
	var $target=$(original_target(e, selector)), in_use=$target.is('.trigger');
	if ( $CURRENT_MENU ) {
		$CURRENT_MENU.menu('cancel', e);
		$CURRENT_MENU = null;
	}

	if ( !in_use ) {
		menu_content && $menu.stop(true, true).hide().html(menu_content);
		($CURRENT_MENU=$menu).menu('context', e);
	}
	return !in_use;
}

function open_menu( trigger, $menu ){
	var $trigger=$(trigger), $fhitem=$trigger.closest('.fhitem');
	$fhitem.length && user_intent('interest', $fhitem[0]);

	$menu.appendTo(document.body).css({ opacity:0 }).show();

	var 	right	= $fhitem.offset().left + $fhitem.width(),
		global	= $trigger.offset(),
		local	= $menu.offsetParent().offset();

	// Ugly IE position hack required:
	$.browser.msie && IE7.test($.browser.version) && (local.top = 0);

	// pin the menu (horizontally) on-screen
	global.left = Math.min(global.left, right-$menu.width());

	$trigger.addClass('trigger');
	$menu.css({
		position:	'absolute',
		top:		global.top - local.top + $trigger.height(),
		left:		global.left - local.left,
		opacity:	1
	});
}

function close_menu( trigger, $menu ){
	$menu.hide();
	$(trigger).removeClass('trigger');
	($CURRENT_MENU===$menu) && ($CURRENT_MENU=false);
}

/* T2 tag context-menu */
var $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/;


    var user_is_admin = 0;



$('a[rel=tag]').live('mousedown',function(ea){
    window.open(this.href);
    return false;
})

$('.tag-bar .disagree').live('mousedown',function(ee){
	var fhitem = $(original_target(ee)).closest('.fhitem')[0],
		command = ('!' + $(original_target(ee)).attr("data-tag")).replace(NOTNOT, '');
    try { Tags.submit(fhitem, command); } catch ( err ) {  }
    return false;
})



$('a[rel=tag]').
	live('mousedown', function( e ){
        
            return true;
        

	}).
	live('click', function( e ){
		if ( !logged_in ) {
			var	target	= original_target(e),
				tag	= $(target).text();
			addfhfilter(tag);
		}
		e.preventDefault();
		return false;
	});

$TAG_MENU.menu({
	cssNamespace: 'slash',
	liveTriggers: true,
	clickDuration: 300,

	start: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			context	= firehose_settings && firehose_settings.viewtitle;

		// Insert the tagname into the menu items where needed.
		$TAG_MENU.find('span.var-tag').text(tag);
		$TAG_MENU.find('a.nix').attr('title','not ' + tag);


			// non-admins may only delete their own tags
		$TAG_MENU.find('a[data-op="-"]').toggle($tag.is('.my'));
	

		// *tagname* in *viewtitle*
		$TAG_MENU.find('a[data-op="="]').toggle(!!context);
		context && $TAG_MENU.find('span.var-view').text(context);

		open_menu($tag, $TAG_MENU);
	},

	select: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			op	= $(ui.event.target).attr('data-op'),
			fhitem,
			command;

		// Global for positioning other things.
		$related_trigger = $tag;

		switch ( op ) {
			case '=':
				addfhfilter(tag);
				break;

			default:
				fhitem = $tag.closest('.fhitem')[0];
				command = (op + tag).replace(NOTNOT, '');
				try { Tags.submit(fhitem, command); } catch ( err ) {  }
				break;
		}
	},

	stop: function( e, ui ){ close_menu(ui.trigger, $TAG_MENU); }
});




/* T2 feedback context-menu */



/* T2 datatype context-menu (admin-only) */






});
</script>

	

<!-- SMACKS: BEGIN STORY CONTENT -->
<div class="container">
	<!--SMACKS: BEGING CENTER COLUMN -->
	<div class="main-wrap has-rail-right">
		<div class="main-content">
			<div class="grid_24 a2 ">
			</div>
			<div id="firehose" class="nothumbs">
			<div id="firehoselist" class="fhroot fleft  grid_24">
				<div id="announcement">
  <div id="announcementText" style="display: none;"> <a href="https://slashdot.org/newsletter" rel="nofollow"><strong>Sign up for the Slashdot newsletter!</strong></a> OR <a href="https://jobs.slashdot.org/?source=boiler_plate&utm_source=boiler_plate&utm_medium=content&utm_campaign=bp_referral" rel="nofollow">check out the new Slashdot job board to browse remote jobs or jobs in your area</a><br><br></strong>Do you develop on GitHub? You can keep using GitHub but automatically <a href="https://sourceforge.net/p/forge/documentation/GitHub%20Importer/" rel="nofollow"><strong>sync your GitHub releases to SourceForge</a></strong> quickly and easily with <strong><a href="https://sourceforge.net/p/import_project/github/" rel="nofollow">this tool</a></strong> so your projects have a backup location, and get your project in front of SourceForge's nearly 30 million monthly users. It takes less than a minute. Get new users downloading your project releases today!</span><br></div>
  <a href="" class="btn-close" title="don't show me this again" onclick="closeAnnouncement(); return false;">&times;</a>
</div>


<script type="text/javascript">

if (!$.cookie('hide_sitenotice_36')) {
	$('#announcement').fadeIn(300);
}

function closeAnnouncement() {
	$('#announcement').fadeOut(300);
	$.cookie('hide_sitenotice_36', 'true', { path: '/', domain: 'slashdot.org', expires: 1 });
}
</script>
				<article id="firehose-172729399" data-fhid="172729399" data-fhtype="story" class="fhitem fhitem-story article usermode thumbs grid_24">
		<span class="sd-info-block" style="display: none">
			<span class="sd-key-firehose-id">172729399</span>
			<span class="type">story</span>
			
		</span>







	
	

<header>
	
		<span class="topic" id="topic-172729399">
			<a href="//linux.slashdot.org/index2.pl?fhfilter=programming" onclick="return addfhfilter('programming');">
			
				<img src="//a.fsdn.com/sd/topics/programming_64.png" width="64" height="64" alt="Programming" title="Programming">
			
		</a>
		
	
		
		
		
		

		
		<a href="//linux.slashdot.org/index2.pl?fhfilter=linux" onclick="return addfhfilter('linux');">
			
				<img src="//a.fsdn.com/sd/topics/linux_64.png" width="64" height="64" alt="Linux" title="Linux">
			
		</a>
		</span>
	

	<h2 class="story">
		

		

		
		

		

		

		

		<span id="title-172729399" class="story-title"> <a   href="//linux.slashdot.org/story/24/01/12/169219/a-2024-discussion-whether-to-convert-the-linux-kernel-from-c-to-modern-c">A 2024 Discussion Whether To Convert The Linux Kernel From C To Modern C++</a> <span class=" no extlnk"><a class="story-sourcelnk" href="https://www.phoronix.com/news/CPP-Linux-Kernel-2024-Discuss"  title="External link - https://www.phoronix.com/news/CPP-Linux-Kernel-2024-Discuss" target="_blank"> (phoronix.com) </a></span></span>

		
		
		<!--<span class="comments commentcnt-172729399" >28</span>-->
		

		
		<!-- comment bubble -->
		
			<span class="comment-bubble"><a href="//linux.slashdot.org/story/24/01/12/169219/a-2024-discussion-whether-to-convert-the-linux-kernel-from-c-to-modern-c#comments" title="">28</a></span>
		
	</h2>
	<div class="details" id="details-172729399">
		<span class="story-details">
		<span class="story-views">
			<span class="sodify" onclick="firehose_set_options('color', 'red')" title="Filter Firehose to entries rated red or better"></span><span class="icon-beaker pop1 " alt="Popularity" title="Filter Firehose to entries rated red or better" onclick="firehose_set_options('color', 'red')"><span></span></span> 
		</span>
		</span>
		<span class="story-byline">
	
				
			Posted
				by 
		
		
			
				  msmash
			
		
		

		
		
		<time id="fhtime-172729399" datetime="on Friday January 12, 2024 @11:40AM">on Friday January 12, 2024 @11:40AM</time>
		
		
			 from the <span class="dept-text">pros-and-cons</span> dept.
		
		</span>
	</div>
</header>

<div class="body" id="fhbody-172729399">
	
		
	

	
		
		<div id="text-172729399" class="p">
			
		 	
				<a href="/~serviscope_minor">serviscope_minor</a> <a href="https://www.phoronix.com/news/CPP-Linux-Kernel-2024-Discuss">shares a Phoronix post</a>: <i> A six year old Linux kernel mailing list discussion has been reignited over the prospects of converting the Linux kernel to supporting modern C++ code. The Linux kernel is predominantly made up of C code with various hand-written Assembly plus the growing work around supporting Rust within the Linux kernel. While it's not clear yet if there's sufficient weight to make it a reality, a Linux kernel mailing list discussion has been restarted over potentially seeing the Linux kernel C code converted to C++ in the future.<br> <br>

Back on 1 April 2018 was a set of <a href="https://lore.kernel.org/lkml/152261521484.30503.16131389653845029164.stgit@warthog.procyon.org.uk/">45 patches</a> by Red Hat engineer David Howells to begin converting the kernel to C++. This would allow the mainline kernel to make use of inline template functions, inline overloaded functions, class inheritance, and other features not currently supported by the Linux kernel with its C code. A bit hard to make serious discussions that day and ultimately the patches resided on the Linux kernel mailing list for six years without much discussion.</i> <a href="/~serviscope_minor">serviscope_minor</a> adds: It is notable that the <a href="https://lore.kernel.org/lkml/3465e0c6-f5b2-4c42-95eb-29361481f805@zytor.com/">current discussion</a> is somewhat different from the <a href="https://lkml.org/lkml/2004/1/20/20">infamous discussions</a> in the past.<br>
		 	
		</div>

		

		

		
			
		
	</div>
	<aside class="grid_24 view_mode">
		
			<div class="units-12 story-detail-tags">
				<span id="sharethis-172729399" class="">
					
						

						

					
				</span>

				<div class="story-tags">
					<div class="tright tw">
						
							<span class="tright tags">
								
									<menu type="toolbar" class="edit-bar">
		<span id="tagbar-172729399" class="tag-bar none">
			
		</span>
		
		<!--
			<a class="edit-toggle" href="/my/login/" onclick="show_login_box();return false;">
				<span class="icon-tag btn collapse"></span>
			</a>
			-->
		
		
		<div class="tag-menu">
			<input class="tag-entry default" type="text" value="apply tags">
		</div>
		

		
		

	</menu>
								
							</span>
						
					</div>
				</div>
			</div>

			
				
				
				
			 	
					<section class="grid_24" id="newa2footerv2">
						<div class="grid_6 pr">
							<h3><a title="Previous story" href="//apple.slashdot.org/story/24/01/12/165230/apple-knew-airdrop-users-could-be-identified-and-tracked-as-early-as-2019?sdsrc=prev">&larr;</a></h3>
						</div>
						<div class="grid_12 rl">
							<h3>You may like to read:</h3>
						</div>
						<div class="grid_6 ns">
							<h3><a title="Next story" href="//slashdot.org/submission">&rarr;</a></h3>
						</div>
						<div class="grid_6">
							<span class="c">
								<a href="//apple.slashdot.org/story/24/01/12/165230/apple-knew-airdrop-users-could-be-identified-and-tracked-as-early-as-2019?sdsrc=prev">Apple Knew AirDrop Users Could Be Identified and Tracked as Early as 2019 </a>
							</span>
						</div>
						<div class="grid_12">
							<span class="c">
								
									
									
									
									

																				<h2><a href="//linux.slashdot.org/story/23/08/12/1835204/should-there-be-an-official-version-of-linux?sdsrc=popbyskid">Should There Be an 'Official' Version of Linux?</a><br></h2>
																				<h2><a href="//linux.slashdot.org/story/23/02/18/2250239/ask-slashdot-where-can-you-buy-a-desktop-pc-that-makes-linux-easy-to-install?sdsrc=popbyskid">Ask Slashdot: Where Can You Buy a Desktop PC That Makes Linux Easy to Install?</a><br></h2>
																				<h2><a href="//linux.slashdot.org/story/23/07/17/0159246/is-wayland-becoming-the-favored-way-to-get-a-gui-on-linux?sdsrc=popbyskid">Is Wayland Becoming the Favored Way to Get a GUI on Linux?</a><br></h2>
																				<h2><a href="//linux.slashdot.org/story/23/11/06/0153203/how-red-hat-divided-the-open-source-community?sdsrc=popbyskid">How Red Hat Divided the Open Source Community</a><br></h2>
																				<h2><a href="//linux.slashdot.org/story/23/02/11/0559223/a-developer-is-reimplementing-gnus-core-utilities-in-rust?sdsrc=popbyskid">A Developer is Reimplementing GNU's Core Utilities in Rust</a><br></h2>
									
								
								
									<h3 class="js_disp_only hide"><a class="jshandle_related" data-goto-url="//linux.slashdot.org/submission/17311505/a-2024-discussion-whether-to-convert-the-linux-kernel-from-c-to-modern-c?sdsrc=rel" href="#">Submission: A 2024 Discussion Whether To Convert The Linux Kernel From C To Modern C++</a></h3><script type="text/javascript">
		(function($){
			$('.js_disp_only').show();
			$('a.jshandle_related').on('click', '', function(e) {
				e.preventDefault();
				var url = $(this).data('goto-url');
				window.location = url
			});
		})($j);
	</script>
								
							</span>
						</div>
						<div class="grid_6">
							<span class="c">
								
									This is the most recent story. Help us pick the next by <a href="//slashdot.org/recent" title="Recent submissions">voting on submissions</a>, or <a href="//slashdot.org/submission">submit your own</a>.
								
							</span>
						</div>
					</section>
				
			
		
	</aside>
	



	</article>
			</div>
			</div>
		</div>
	</div>
	<!-- SMACKS: BEGIN RIGHT RAIL -->
	<aside id="slashboxes" class="rail-right">
		
                    <div id="slashboxesin" class="yui-b">
                            
                            
                            
                    </div>
		    <div class="railad adwrap-unviewed">
<div id='div-gpt-ad-300x250_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-300x250_a');});</script></div>
</div>
		
	</aside>
		<!-- SMACKS: END RIGHT RAIL -->
</div>
<!-- END STORY CONTENT -->

<!-- THIS IS THE LOCATION FOR THE NEW STORY_B CODE -->
<div class="adwrap">
<div id='div-gpt-ad-728x90_b'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_b');});</script></div>
</div>
<script type="text/javascript">
if (window.is_euro_union === 0) {
    if (sdAdBlockActive) {
        bizx.cmp.ifConsent('', ['all'], function () {
            $.ajax({
                url: '/ajax.pl?op=nel',
                type: 'POST',
                success: function(html){
                    if(html){
                        $('#firehoselist article').eq(0).after(html);
                    }
                }
            });
        });
    }
}
</script>
<!--------------------------->


<!-- SMACKS: BEGIN COMMENTS CONTAINER -->
<div class="container">
	<!-- SMACKS: BEGIN COMMENTS SECTION -->
	<div class="main-wrap">
        <div id='horizontal' class='jobbioapp' style="width:initial;margin-right:320px;"></div>
		<div class="main-content">
			<div id="comments" class="a2commentwrap">
			<div>
					<a name="comments"></a>
<div id="comments" class="container">
	<div class="main-wrap">
		<div class="main-content">
			<section class="d2incommentspl">
				<div class="commentwrap" id="commentwrap">
					
						<div class="commentBox">
							<div class="title hide">
								<h4>
									
										<span class="escape-link"><a href="//linux.slashdot.org/story/24/01/12/169219/a-2024-discussion-whether-to-convert-the-linux-kernel-from-c-to-modern-c" title="Back to Article - A 2024 Discussion Whether To Convert The Linux Kernel From C To Modern C++">A 2024 Discussion Whether To Convert The Linux Kernel From C To Modern C++</a></span>
									
									<span class="commentBoxLinks"><a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_d"></span> More</a>



	| <span class="ind"></span><a href="//linux.slashdot.org/comments.pl?sid=23191137&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Reply</a>


	<a class="login"  href="//linux.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a></span>
								</h4>
							</div>
						</div>
					

					<section class="grid_24" id="d2header"><div>
						
							<h2 class="commentspl test"><a title="Back to Article - A 2024 Discussion Whether To Convert The Linux Kernel From C To Modern C++" href="//linux.slashdot.org/story/24/01/12/169219/a-2024-discussion-whether-to-convert-the-linux-kernel-from-c-to-modern-c">A 2024 Discussion Whether To Convert The Linux Kernel From C To Modern C++</a></h2>
						
						<nav class="grid_24">
							<div class="grid_14 widthauto">
							
						 		<span class="ind"></span><a class="btn first" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Post</a>
							
							<!-- <a href="//linux.slashdot.org/search.pl?op=comments&amp;sid=23191137" class="btn">Search <span class="totalcommentcnt">28</span> Comments</a> -->
							
								
									<a href="#" onclick="D2.ajaxFetchComments(0,1,'','',-1); return false" class="btn" id="d2loadall">Load All Comments</a>
								
							
							
								</div>
								<div class="grid_10 d1or2">
							

							
								<div id="d2out" class="horizontal rooted grid_15">
									<div id="d2act" class="hide">
										<div class="loki" id="gods">
											<script type="text/javascript">
												 $(function(){
													 D2.slider = new D2.Slider(
														 D2.user_threshold(),
														 D2.user_highlightthresh(),
														 'x'
													 );
												 });
											</script>
											<div id="bones" class="grid_12">
												<div class="ccw-count-container grid_24">
													<span id="ccw-full-count-text" class="grid_8 ccw-count-text tcenter"><span></span><span id="ccw-full-phrase">&nbsp;Full</span></span>
													<span id="ccw-abbr-count-text" class="grid_8 ccw-count-text"><span></span><span id="ccw-abbr-phrase">&nbsp;Abbreviated</span></span>
													<span id="ccw-hide-count-text" class="grid_8 ccw-count-text tleft"><span></span><span id="ccw-hide-phrase">&nbsp;Hidden</span></span>
												</div>
												<div id="ccw">
													<div id="ccw-body" class="ccw-core">
														<div id="ccw-panel-container" class="ccw-core">
															<div id="ccw-full-panel" class="ccw-panel">
																/Sea<div class="ccw-panel-border"></div>
																<div id="ccw-full-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
															<div id="ccw-abbr-panel" class="ccw-panel">
																<div class="ccw-panel-border"></div>
																<div id="ccw-abbr-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
															<div id="ccw-hide-panel" class="ccw-panel">
																<div id="ccw-hide-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
														</div>
														<div id="ccw-control" class="ccw-core">
															<div id="ccw-centering-rail" class="ccw-core">
																<div id="ccw-hide-bar-pos" class="ccw-core-pos">
																	<div id="ccw-hide-bar" class="ccw-bar">
																		<div id="ccw-hide-bar-tab" class="ccw-bar-tab"></div>
																		<div class="ccwa"></div>
																		<div class="ccwb"></div>
																		<div id="ccw-hide-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(HIDE_BAR, +1)"></div>
																		<div id="ccw-hide-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(HIDE_BAR, -1)"></div>
																	</div>
																</div>
																<div id="ccw-abbr-bar-pos" class="ccw-core-pos">
																	<div id="ccw-abbr-bar" class="ccw-bar">
																		<div id="ccw-abbr-bar-tab" class="ccw-bar-tab"></div>
																		<div class="ccwa"></div>
																		<div class="ccwb"></div>
																		<div id="ccw-abbr-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(ABBR_BAR, +1)"></div>
																		<div id="ccw-abbr-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(ABBR_BAR, -1)"></div>
																	</div>
																</div>
															</div>
														</div>
													</div>
													<div class="ccw-score-label grid_24">
														<div class="grid_3"><span class="sc">Score:</span></div>
														<div class="grid_3">5<span class="lg"></span></div>
														<div class="grid_3">4<span class="lg"></span></div>
														<div class="grid_3">3<span class="lg"></span></div>
														<div class="grid_3">2<span class="lg"></span></div>
														<div class="grid_3">1<span class="lg"></span></div>
														<div class="grid_3">0<span class="lg"></span></div>
														<div class="grid_3">-1<span class="lg"></span></div>
													</div>
												</div>
											</div>
											<div class="commentControlFooter">
												<a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_c"></span> More</a>



	| <span class="ind"></span><a href="//linux.slashdot.org/comments.pl?sid=23191137&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Reply</a>


	<a class="login"  href="//linux.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a><div id="login_cover" class="hide" onclick="hide_login_box()"></div>
<div id="login_box" class="hide">
	<div id="login_box_content">
		<div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="//linux.slashdot.org/comments.pl?sid=23191137">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
		<div class="actions">
			<a class="ico close" href="#" onclick="hide_login_box(); return false"><span>Close</span></a>
		</div>
	</div>
</div>
<script type="text/javascript">logged_in = 0</script>
											</div>
											<div id="commentControlBoxStatus" class="hide"></div>
										</div>
									</div>
								</div>
							
							
							<a href="//linux.slashdot.org/search.pl?op=comments&amp;sid=23191137" class="ui-icon search_comments">Search <span class="totalcommentcnt">28</span> Comments</a>
							
								<a class="pref ui-icon-w" href="//linux.slashdot.org/users.pl" onclick="show_login_box(); $('#modal_box').addClass('login'); return false;">Log In/Create an Account</a>
							
						</div>
					</nav>
					<section id="besttabs" class="grid_24">
						<span class="legend">Comments Filter:</span>
						<ul class="besttabslist">
							<li class="active">
								<a href="#" data-filter-url="//linux.slashdot.org/story/24/01/12/169219/a-2024-discussion-whether-to-convert-the-linux-kernel-from-c-to-modern-c#comments">All</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//linux.slashdot.org/story/24/01/12/169219/a-2024-discussion-whether-to-convert-the-linux-kernel-from-c-to-modern-c/insightful-comments#comments">Insightful</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//linux.slashdot.org/story/24/01/12/169219/a-2024-discussion-whether-to-convert-the-linux-kernel-from-c-to-modern-c/informative-comments#comments">Informative</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//linux.slashdot.org/story/24/01/12/169219/a-2024-discussion-whether-to-convert-the-linux-kernel-from-c-to-modern-c/interesting-comments#comments">Interesting</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//linux.slashdot.org/story/24/01/12/169219/a-2024-discussion-whether-to-convert-the-linux-kernel-from-c-to-modern-c/funny-comments#comments">Funny</a>
							</li>
						
					</ul>
					<script>
					(function($){
						$('#besttabs').show();
						$('.besttabslist').on('click', 'li a', function(e){
							e.preventDefault();
							var url = $(this).data('filter-url');
							//console.log('URL= ', url);
							$(this)
								.closest('ul').find('li').removeClass('active')
								.end()
								.closest('li').addClass('active');
							window.location = url;
						});
					})($j);
					</script>
			</section>
				<aside class="grid_24">
					<p>
						<small><strong>The Fine Print:</strong> The following comments are owned by whoever posted them.  We are not responsible for them in any way.</small>
					</p>
				</aside>
			</section>
			
		</div>
	</div>
</div><script src="//a.fsdn.com/sd/comments-minified.js?113c0e21a080c5f1" type="text/javascript"></script>


<script type="text/javascript">
<!--
D2.d2_keybindings_disable()[191] = 1;
D2.boxStatus(1);
D2.comments({ 64153157: { uid: 8769977, pid: 0, read: 0, points: 2, kids: [ 64153201 ], opid: 0 }, 64153177: { uid: 2695839, pid: 64153115, subject: "Re:Maybe Rust would be a Much Better Choice", read: 0, points: 2, kids: [  ], opid: 64153115 }, 64153185: { uid: 32958, pid: 64153155, subject: "Re:\"notable\"", read: 0, points: 2, kids: [  ], opid: 64153155 }, 64153243: { uid: 664417, pid: 64153149, subject: "Re:modula-2", read: 0, points: 2, kids: [  ], opid: 64153149 }, 64153171: { uid: 6158720, pid: 64153145, subject: "Re:Code that works well...", read: 0, points: 2, kids: [  ], opid: 64153145 }, 64153191: { uid: 2516288, pid: 0, read: 0, points: 2, kids: [ 64153227, 64153233, 64153245 ], opid: 0 }, 64153165: { uid: 664417, pid: 64153115, subject: "Re:Maybe Rust would be a Much Better Choice", read: 0, points: 2, kids: [  ], opid: 64153115 }, 64153161: { uid: 664417, pid: 64153115, subject: "Re:Maybe Rust would be a Much Better Choice", read: 0, points: 2, kids: [  ], opid: 64153115 }, 64153145: { uid: 1423381, pid: 0, read: 0, points: 4, kids: [ 64153171, 64153209 ], opid: 0 }, 64153197: { uid: 20301, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64153263: { uid: 914043, pid: 64153123, subject: "Re:Not Rust?", read: 0, points: 2, kids: [  ], opid: 64153123 }, 64153241: { uid: 1262242, pid: 64153115, subject: "Re:Maybe Rust would be a Much Better Choice", read: 0, points: 2, kids: [  ], opid: 64153115 }, 64153209: { uid: 664417, pid: 64153145, subject: "Re:Code that works well...", read: 0, points: 2, kids: [  ], opid: 64153145 }, 64153149: { uid: 124937, pid: 0, read: 0, points: 2, kids: [ 64153243 ], opid: 0 }, 64153227: { uid: 664417, pid: 64153191, subject: "Re:Object oriented code is write once", read: 0, points: 2, kids: [  ], opid: 64153191 }, 64153155: { uid: 711126, pid: 0, read: 0, points: 2, kids: [ 64153185, 64153265 ], opid: 0 }, 64153115: { uid: 127135, pid: 0, read: 0, points: 2, kids: [ 64153161, 64153165, 64153177, 64153241 ], opid: 0 }, 64153251: { uid: 227051, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64153121: { uid: 88907, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64153179: { uid: 664417, pid: 64153123, subject: "Re:Not Rust?", read: 0, points: 2, kids: [ 64153257 ], opid: 64153123 }, 64153123: { uid: 95088, pid: 0, read: 0, points: 1, kids: [ 64153179, 64153263 ], opid: 0 }, 64153255: { uid: 666, pid: 64153117, subject: "Re:In case you think C++ is too bloated for the ke", read: 0, points: 0, kids: [  ], opid: 64153117 }, 64153265: { uid: 32958, pid: 64153155, subject: "Re:\"notable\"", read: 0, points: 2, kids: [  ], opid: 64153155 }, 64153233: { uid: 7796472, pid: 64153191, read: 0, points: 1, kids: [  ], opid: 64153191 }, 64153201: { uid: 95548, pid: 64153157, subject: "Re:\"Hand-written Assembly\"", read: 0, points: 2, kids: [  ], opid: 64153157 }, 64153245: { uid: 914043, pid: 64153191, subject: "Re:Object oriented code is write once", read: 0, points: 2, kids: [  ], opid: 64153191 }, 64153257: { uid: 95088, pid: 64153179, subject: "Re:Not Rust?", read: 0, points: 1, kids: [  ], opid: 64153179 }, 64153117: { uid: 160668, pid: 0, read: 0, points: 2, kids: [ 64153255 ], opid: 0 } });

D2.thresh_totals({6:{6:{1:28,3:0,2:0}},3:{6:{1:27,3:0,2:1},4:{1:27,3:1,2:0},3:{1:27,3:1,2:0},5:{1:27,3:1,2:0}},2:{6:{1:4,3:0,2:24},4:{1:4,3:1,2:23},3:{1:4,3:10,2:14},2:{1:4,3:24,2:0},5:{1:4,3:1,2:23}},1:{6:{1:1,3:0,2:27},4:{1:1,3:1,2:26},1:{1:1,3:27,2:0},3:{1:1,3:10,2:17},2:{1:1,3:25,2:2},5:{1:1,3:1,2:26}},4:{6:{1:27,3:0,2:1},4:{1:27,3:1,2:0},5:{1:27,3:1,2:0}},0:{6:{1:0,3:0,2:28},4:{1:0,3:1,2:27},1:{1:0,3:27,2:1},3:{1:0,3:10,2:18},0:{1:0,3:28,2:0},2:{1:0,3:25,2:3},5:{1:0,3:1,2:27}},"-1":{6:{1:0,3:0,2:28},3:{1:0,3:10,2:18},2:{1:0,3:25,2:3},1:{1:0,3:27,2:1},4:{1:0,3:1,2:27},0:{1:0,3:28,2:0},"-1":{1:0,3:28,2:0},5:{1:0,3:1,2:27}},5:{6:{1:28,3:0,2:0},5:{1:28,3:0,2:0}}});

D2.root_comment(0);
D2.root_comments([64153115,64153117,64153121,64153123,64153145,64153149,64153155,64153157,64153191,64153197,64153251]);
D2.root_comments_hash({64153149:1,64153155:1,64153251:1,64153121:1,64153117:1,64153157:1,64153191:1,64153197:1,64153145:1,64153115:1,64153123:1});

D2.d2_comment_order(0);
D2.user_uid(666);
D2.user_is_anon(1);
D2.user_is_admin(0);
D2.user_is_subscriber(0);
D2.user_smallscreen(0);
D2.user_threshold(1);
D2.user_highlightthresh(4);
D2.user_d2asp(0);

D2.discussion_id(23191137);

D2.d2_seen('64153115,2,4,2,22,4,6,2,4,4,6,6,2,6,6,6,4,8,18,6,8,2,2,6,4,2,6,2');
D2.more_comments_num(0);


//-->
</script>




	
	
	
	
		<ul id="commentlisting" class="d2">
			<li id="tree_64153115" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153115" class="commentstatus"></div>
<div id="comment_64153115" class="cw">
	<div id="comment_top_64153115" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153115" name="comment_link_64153115" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153115" onclick="return D2.setFocusComment(64153115)" >Maybe Rust would be a Much Better Choice</a>


		 	<span id="comment_score_64153115" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153115); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~david.emery">david.emery</a>  <span class="uid"><a href="//slashdot.org/~david.emery">( 127135 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153115"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153115"><p>The problems with C++ are pretty well known.  If the community is going to do wholesale change, moving to a language that offers much more support for formal verification, better type-checking, and overall better security, seems to be a better -return on investment-.</p><p>That being said, I generally don't like the idea of 'recoding working software', the likelihood of introducing new bugs outweighs the putative arguments for "easier to maintain."</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153115">

</div>
</div>

<div id="replyto_64153115"></div>

<ul id="group_64153115">
	<li id="hiddens_64153115" class="hide"></li>
</ul>

<ul id="commtree_64153115"><li id="tree_64153161" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153161" class="commentstatus"></div>
<div id="comment_64153161" class="cw">
	<div id="comment_top_64153161" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153161" name="comment_link_64153161" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153161" onclick="return D2.setFocusComment(64153161)" >Re:</a>


		 	<span id="comment_score_64153161" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153161); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~serviscope_minor">serviscope_minor</a>  <span class="uid"><a href="//slashdot.org/~serviscope_minor">( 664417 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153161"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153161"><p><span class="substr"> </span> <em>The problems with C++ are pretty well known. If the community is going to do wholesale change, moving to a language that offers much more support for formal verification, better type-checking, and overall better security, seems to be a better -return on investment-.</em> </p><p> <em>That being said, I generally don't like the idea of 'recoding working software', the likelihood of introducing new bugs outweighs the putative arguments for "easier to maintain."<br> </em> </p><p>In most cases, I'd agree, but not in this one. The main reason is it</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153161">

</div>
</div>

<div id="replyto_64153161"></div>

<ul id="group_64153161">
	<li id="hiddens_64153161" class="hide"></li>
</ul>

</li><li id="tree_64153165" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153165" class="commentstatus"></div>
<div id="comment_64153165" class="cw">
	<div id="comment_top_64153165" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153165" name="comment_link_64153165" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153165" onclick="return D2.setFocusComment(64153165)" >Re:</a>


		 	<span id="comment_score_64153165" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153165); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~serviscope_minor">serviscope_minor</a>  <span class="uid"><a href="//slashdot.org/~serviscope_minor">( 664417 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153165"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153165"><p>OK double replying, but if you have the time:</p><p><a href="https://www.youtube.com/watch?v=0_UttFDnV3k" title="youtube.com">https://www.youtube.com/watch?...</a> [youtube.com]</p><p>It's an excellent video from Matt Godbolt (of compiler explorer fame) where he takes some very hacky C code from 25 years ago and piecemeal upgrades it to C++, in order to resurrect the project.</p><p>Another example is GCC which has switched from C to C++ in the typically conservative GCC fashion.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153165">

</div>
</div>

<div id="replyto_64153165"></div>

<ul id="group_64153165">
	<li id="hiddens_64153165" class="hide"></li>
</ul>

</li><li id="tree_64153177" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153177" class="commentstatus"></div>
<div id="comment_64153177" class="cw">
	<div id="comment_top_64153177" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153177" name="comment_link_64153177" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153177" onclick="return D2.setFocusComment(64153177)" >Re:</a>


		 	<span id="comment_score_64153177" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153177); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~wakeboarder">wakeboarder</a>  <span class="uid"><a href="//slashdot.org/~wakeboarder">( 2695839 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153177"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153177">Get all the devs to switch over to rust and let me know it goes.</div>
	</div>

	<div class="commentSub" id="comment_sub_64153177">

</div>
</div>

<div id="replyto_64153177"></div>

<ul id="group_64153177">
	<li id="hiddens_64153177" class="hide"></li>
</ul>

</li><li id="tree_64153241" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153241" class="commentstatus"></div>
<div id="comment_64153241" class="cw">
	<div id="comment_top_64153241" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153241" name="comment_link_64153241" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153241" onclick="return D2.setFocusComment(64153241)" >Re:</a>


		 	<span id="comment_score_64153241" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153241); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~loonycyborg">loonycyborg</a>  <span class="uid"><a href="//slashdot.org/~loonycyborg">( 1262242 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153241"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153241">There's no guarantee that it will be actually easier to maintain.</div>
	</div>

	<div class="commentSub" id="comment_sub_64153241">

</div>
</div>

<div id="replyto_64153241"></div>

<ul id="group_64153241">
	<li id="hiddens_64153241" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64153117" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153117" class="commentstatus"></div>
<div id="comment_64153117" class="cw">
	<div id="comment_top_64153117" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153117" name="comment_link_64153117" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153117" onclick="return D2.setFocusComment(64153117)" >In case you think C++ is too bloated for the kerne</a>


		 	<span id="comment_score_64153117" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153117); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~caseih">caseih</a>  <span class="uid"><a href="//slashdot.org/~caseih">( 160668 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153117"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153117"><p>This was a fascinating talk by Jason Turner a few years ago on the features of C++17 that generate very efficient code, but bring a lot of power and expressiveness to the programmer.  In the talk he creates a tiny game for a Commodore 64 using modern c++17 including templates.  Quite eye-opening about how powerful modern compilers are, and how good C++ has become.  It's a lot simpler than it used to be, and it's quite efficient.  In fact in the demo talk, there was zero overhead to all of the language featu<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153117">

</div>
</div>

<div id="replyto_64153117"></div>

<ul id="group_64153117">
	<li id="hiddens_64153117" class="hide"></li>
</ul>

<ul id="commtree_64153117"><li id="tree_64153255" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64153255" class="commentstatus"></div>
<div id="comment_64153255" class="cw">
</div>

<div id="replyto_64153255"></div>

<ul id="group_64153255">
	<li id="hiddens_64153255" class="hide"></li>
</ul>

</li><li id="hidestring_64153117"><noscript><b class='more'><span class="ind"></span><a href="//linux.slashdot.org/comments.pl?sid=23191137&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64153117">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64153121" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153121" class="commentstatus"></div>
<div id="comment_64153121" class="cw">
	<div id="comment_top_64153121" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153121" name="comment_link_64153121" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153121" onclick="return D2.setFocusComment(64153121)" >C++ is crap</a>


		 	<span id="comment_score_64153121" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153121); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153121"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153121"><p>It was crap, is crap and will remain crap. The problem is that the language design and execution model is as stupid as you can get. It cannot be fixed without throwing the language away and starting over.</p><p>And the second problem is that not too many people even can do C++ competently. Want to limit kernel contributions? This (and Rust) is the way to do that!</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153121">

</div>
</div>

<div id="replyto_64153121"></div>

<ul id="group_64153121">
	<li id="hiddens_64153121" class="hide"></li>
</ul>

</li><li id="tree_64153123" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153123" class="commentstatus"></div>
<div id="comment_64153123" class="cw">
	<div id="comment_top_64153123" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153123" name="comment_link_64153123" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153123" onclick="return D2.setFocusComment(64153123)" >Not Rust?</a>


		 	<span id="comment_score_64153123" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153123); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Tablizer">Tablizer</a>  <span class="uid"><a href="//slashdot.org/~Tablizer">( 95088 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153123"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153123"><p>I'm not an OS expert, but I thought there was a push toward Rust, not C++, as Rust is allegedly more modern.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153123">

</div>
</div>

<div id="replyto_64153123"></div>

<ul id="group_64153123">
	<li id="hiddens_64153123" class="hide"></li>
</ul>

<ul id="commtree_64153123"><li id="tree_64153179" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153179" class="commentstatus"></div>
<div id="comment_64153179" class="cw">
	<div id="comment_top_64153179" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153179" name="comment_link_64153179" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153179" onclick="return D2.setFocusComment(64153179)" >Re:</a>


		 	<span id="comment_score_64153179" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153179); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~serviscope_minor">serviscope_minor</a>  <span class="uid"><a href="//slashdot.org/~serviscope_minor">( 664417 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153179"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153179"><p>Rust is more modern, for sure (by definition), and brings some really neat things to the table.</p><p>With that said, you need a rewrite to get the kernel in Rust, whereas for C++ it's a small patch set and a recompile. You won't get all the benefits of Rust if it switches to C++, on the other hand the latter is vastly easier than the former, since it can happen piecemeal without any grand rewrite or giant patches.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153179">

</div>
</div>

<div id="replyto_64153179"></div>

<ul id="group_64153179">
	<li id="hiddens_64153179" class="hide"></li>
</ul>

<ul id="commtree_64153179"><li id="tree_64153257" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153257" class="commentstatus"></div>
<div id="comment_64153257" class="cw">
	<div id="comment_top_64153257" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153257" name="comment_link_64153257" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153257" onclick="return D2.setFocusComment(64153257)" >Re:</a>


		 	<span id="comment_score_64153257" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153257); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Tablizer">Tablizer</a>  <span class="uid"><a href="//slashdot.org/~Tablizer">( 95088 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153257"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153257"><p>Okay, I see, so C++ is a better-fitting super-set of C (more backward compatible), compared to Rust.</p><p>I wonder if there are any other notable languages that are largely backward compatible with C. Sometimes one can get backward compatibly on "normal" use of a language/tool, but it won't handle obscure or edge cases. If that's the case, then reworking existing Linux C could be relatively minor, unless it relies heavily on the edge cases.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153257">

</div>
</div>

<div id="replyto_64153257"></div>

<ul id="group_64153257">
	<li id="hiddens_64153257" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64153263" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153263" class="commentstatus"></div>
<div id="comment_64153263" class="cw">
	<div id="comment_top_64153263" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153263" name="comment_link_64153263" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153263" onclick="return D2.setFocusComment(64153263)" >Re:</a>


		 	<span id="comment_score_64153263" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153263); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~jythie">jythie</a>  <span class="uid"><a href="//slashdot.org/~jythie">( 914043 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153263"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153263">There is a push yes, but that push is mostly coming from Rust evangelists, who have a vested interest in their solution becoming the dominant one and thus putting them at the top of the ecosystem.  It is less about kernel devs trying to solve a problem and Rust devs trying to be a solution.</div>
	</div>

	<div class="commentSub" id="comment_sub_64153263">

</div>
</div>

<div id="replyto_64153263"></div>

<ul id="group_64153263">
	<li id="hiddens_64153263" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64153145" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64153145" class="commentstatus"></div>
<div id="comment_64153145" class="cw">
	<div id="comment_top_64153145" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153145" name="comment_link_64153145" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153145" onclick="return D2.setFocusComment(64153145)" >Code that works well...</a>


		 	<span id="comment_score_64153145" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153145); return false"><span class=opt>Score:</span>4</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~MpVpRb">MpVpRb</a>  <span class="uid"><a href="//slashdot.org/~MpVpRb">( 1423381 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153145">		
		on Friday January 12, 2024 @11:57AM (<span class="ind"></span><a href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153145">#64153145</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153145"><p>... should not be "converted", unless you want to start another debugging cycle<br>The only time old code should be touched is if it has problems</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153145">
<span class="ind"></span><a id="reply_link_64153145" class="btn link" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64153145" onclick="D2.replyTo(64153145); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Code that works well...%20by%20MpVpRb%20%40slashdot%20https://linux.slashdot.org/comments.pl?sid=23191137&cid=64153145" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://linux.slashdot.org/comments.pl?sid=23191137&cid=64153145" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://linux.slashdot.org/comments.pl?sid=23191137&cid=64153145" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64153145" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64153145" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64153145"></div>

<ul id="group_64153145">
	<li id="hiddens_64153145" class="hide"></li>
</ul>

<ul id="commtree_64153145"><li id="tree_64153171" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153171" class="commentstatus"></div>
<div id="comment_64153171" class="cw">
	<div id="comment_top_64153171" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153171" name="comment_link_64153171" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153171" onclick="return D2.setFocusComment(64153171)" >Re:</a>


		 	<span id="comment_score_64153171" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153171); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~rlwinm">rlwinm</a>  <span class="uid"><a href="//slashdot.org/~rlwinm">( 6158720 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153171"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153171">I wish more people understood this. You can always tell the folks who don't see a project through its entire lifecycle: They are always just wanting to toss new technologies at it for fun or resume padding rather than any real technical need. The hard bugs will always be hard and the choice of language won't help that. For those who ask "what about the easy bugs?" (to me things like buffer overflows are easy, race conditions are hard) Well, that's where as any project matures you get coding conventions and</div>
	</div>

	<div class="commentSub" id="comment_sub_64153171">

</div>
</div>

<div id="replyto_64153171"></div>

<ul id="group_64153171">
	<li id="hiddens_64153171" class="hide"></li>
</ul>

</li><li id="tree_64153209" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153209" class="commentstatus"></div>
<div id="comment_64153209" class="cw">
	<div id="comment_top_64153209" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153209" name="comment_link_64153209" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153209" onclick="return D2.setFocusComment(64153209)" >Re:</a>


		 	<span id="comment_score_64153209" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153209); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~serviscope_minor">serviscope_minor</a>  <span class="uid"><a href="//slashdot.org/~serviscope_minor">( 664417 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153209"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153209"><p><em>... should not be "converted", unless you want to start another debugging cycle</em></p><p>What do you think the conversion entails? It's going from a rather kernel specific dialect of GNU C to GNU C++. Much of the conversion is changing "class" to something that's not a keyword in C++, and a few other related changes.</p><p>While there are a few places where ISO C and ISO C++ differ in what is UB, this isn't the case for GCC.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153209">

</div>
</div>

<div id="replyto_64153209"></div>

<ul id="group_64153209">
	<li id="hiddens_64153209" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64153149" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153149" class="commentstatus"></div>
<div id="comment_64153149" class="cw">
	<div id="comment_top_64153149" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153149" name="comment_link_64153149" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153149" onclick="return D2.setFocusComment(64153149)" >modula-2</a>


		 	<span id="comment_score_64153149" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153149); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~OrangeTide">OrangeTide</a>  <span class="uid"><a href="//slashdot.org/~OrangeTide">( 124937 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153149"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153149"><p>The gm2 compiler is coming along nicely, why not use to that if we're talking about switching the Linux kernel over to a new language. Or why not support 100 different languages at once to maximize our software freedom. I mean other than this being a ton of work with no immediate short term benefit and only a modest theoretical long term benefit.</p><p>C is difficult to dislodge because it's not too bad. Just bad enough to upset people but not so bad that there is a crisis that forces a change.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153149">

</div>
</div>

<div id="replyto_64153149"></div>

<ul id="group_64153149">
	<li id="hiddens_64153149" class="hide"></li>
</ul>

<ul id="commtree_64153149"><li id="tree_64153243" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153243" class="commentstatus"></div>
<div id="comment_64153243" class="cw">
	<div id="comment_top_64153243" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153243" name="comment_link_64153243" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153243" onclick="return D2.setFocusComment(64153243)" >Re:</a>


		 	<span id="comment_score_64153243" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153243); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~serviscope_minor">serviscope_minor</a>  <span class="uid"><a href="//slashdot.org/~serviscope_minor">( 664417 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153243"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153243"><p><em>The gm2 compiler is coming along nicely, why not use to that if we're talking about switching the Linux kernel over to a new language.</em></p><p>How much work is it to switch the entire kernel over to Modula-2? We know what the answer is for C++, because the patch set is in that mailing list thread, and it's not very much.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153243">

</div>
</div>

<div id="replyto_64153243"></div>

<ul id="group_64153243">
	<li id="hiddens_64153243" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64153155" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153155" class="commentstatus"></div>
<div id="comment_64153155" class="cw">
	<div id="comment_top_64153155" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153155" name="comment_link_64153155" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153155" onclick="return D2.setFocusComment(64153155)" >"notable"</a>


		 	<span id="comment_score_64153155" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153155); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~dfghjk">dfghjk</a>  <span class="uid"><a href="//slashdot.org/~dfghjk">( 711126 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153155"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153155"><p>"It is notable that the current discussion is somewhat different from the infamous discussions in the past."</p><p>But the arguments are not.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153155">

</div>
</div>

<div id="replyto_64153155"></div>

<ul id="group_64153155">
	<li id="hiddens_64153155" class="hide"></li>
</ul>

<ul id="commtree_64153155"><li id="tree_64153185" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153185" class="commentstatus"></div>
<div id="comment_64153185" class="cw">
	<div id="comment_top_64153185" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153185" name="comment_link_64153185" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153185" onclick="return D2.setFocusComment(64153185)" >Re:</a>


		 	<span id="comment_score_64153185" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153185); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Vlad_the_Inhaler">Vlad_the_Inhaler</a>  <span class="uid"><a href="//slashdot.org/~Vlad_the_Inhaler">( 32958 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153185"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153185"><p>That "infamous" link appears to be Slashdotted, that's the first time I've seen that effect for a large number of years.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153185">

</div>
</div>

<div id="replyto_64153185"></div>

<ul id="group_64153185">
	<li id="hiddens_64153185" class="hide"></li>
</ul>

</li><li id="tree_64153265" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153265" class="commentstatus"></div>
<div id="comment_64153265" class="cw">
	<div id="comment_top_64153265" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153265" name="comment_link_64153265" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153265" onclick="return D2.setFocusComment(64153265)" >Re:</a>


		 	<span id="comment_score_64153265" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153265); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Vlad_the_Inhaler">Vlad_the_Inhaler</a>  <span class="uid"><a href="//slashdot.org/~Vlad_the_Inhaler">( 32958 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153265"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153265"><p>Ok - now I have read it, glorious.</p><blockquote><div><p>In fact, in Linux we did try C++ once already, back in 1992.</p><p>It sucks. Trust me - writing kernel code in C++ is a BLOODY STUPID IDEA.</p><p>The fact is, C++ compilers are not trustworthy. They were even worse in 1992, but some fundamental facts haven't changed:</p><p>
<span class="substr"> </span> - the whole C++ exception handling thing is fundamentally broken. It's _especially_ broken for kernels.<br>
 - any compiler or language that likes to hide things like memory allocations behind your back just isn't a</p></div></blockquote></div>
	</div>

	<div class="commentSub" id="comment_sub_64153265">

</div>
</div>

<div id="replyto_64153265"></div>

<ul id="group_64153265">
	<li id="hiddens_64153265" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64153157" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153157" class="commentstatus"></div>
<div id="comment_64153157" class="cw">
	<div id="comment_top_64153157" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153157" name="comment_link_64153157" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153157" onclick="return D2.setFocusComment(64153157)" >"Hand-written Assembly"</a>


		 	<span id="comment_score_64153157" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153157); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Valgrus+Thunderaxe">Valgrus Thunderaxe</a>  <span class="uid"><a href="//slashdot.org/~Valgrus+Thunderaxe">( 8769977 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153157"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153157">As opposed to the hand-written C?</div>
	</div>

	<div class="commentSub" id="comment_sub_64153157">

</div>
</div>

<div id="replyto_64153157"></div>

<ul id="group_64153157">
	<li id="hiddens_64153157" class="hide"></li>
</ul>

<ul id="commtree_64153157"><li id="tree_64153201" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153201" class="commentstatus"></div>
<div id="comment_64153201" class="cw">
	<div id="comment_top_64153201" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153201" name="comment_link_64153201" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153201" onclick="return D2.setFocusComment(64153201)" >Re:</a>


		 	<span id="comment_score_64153201" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153201); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~backslashdot">backslashdot</a>  <span class="uid"><a href="//slashdot.org/~backslashdot">( 95548 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153201"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153201"><p>No as opposed to asking chatGPT "code me a kernel as though I was amped up on Red Bull and lived on a diet of Cheetos."</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153201">

</div>
</div>

<div id="replyto_64153201"></div>

<ul id="group_64153201">
	<li id="hiddens_64153201" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64153191" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153191" class="commentstatus"></div>
<div id="comment_64153191" class="cw">
	<div id="comment_top_64153191" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153191" name="comment_link_64153191" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153191" onclick="return D2.setFocusComment(64153191)" >Object oriented code is write once</a>


		 	<span id="comment_score_64153191" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153191); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~FeelGood314">FeelGood314</a>  <span class="uid"><a href="//slashdot.org/~FeelGood314">( 2516288 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153191"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153191">And read never.  C++ is great for writing code and getting something working fast.  Well written and well documented code can be reused.  Modifying or tracking bugs down in object oriented code is a nightmare.  In a procedural language you see in the code everything that is going to happen.  You can manually walk through the code.  Even horribly written undocumented lowest cost contractor code can be reverse engineered and figured out.  Second C is 31 key words that you need to know.  Everyone who knows emb</div>
	</div>

	<div class="commentSub" id="comment_sub_64153191">

</div>
</div>

<div id="replyto_64153191"></div>

<ul id="group_64153191">
	<li id="hiddens_64153191" class="hide"></li>
</ul>

<ul id="commtree_64153191"><li id="tree_64153227" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153227" class="commentstatus"></div>
<div id="comment_64153227" class="cw">
	<div id="comment_top_64153227" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153227" name="comment_link_64153227" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153227" onclick="return D2.setFocusComment(64153227)" >Re:</a>


		 	<span id="comment_score_64153227" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153227); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~serviscope_minor">serviscope_minor</a>  <span class="uid"><a href="//slashdot.org/~serviscope_minor">( 664417 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153227"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153227"><p><span class="substr"> </span> <em>And read never. C++ is great for writing code and getting something working fast.</em> </p><p>I recommend you read up about ops tables in the kernel, for example in the VFS layer.</p><p>It is literally a virtual function dispatch table. And the implementation is that every derived class (a struct) has a const ops* pointer to the ops table. This is exactly how the C++ compiler implements exactly this under the hood.</p><p>How is writing "virtual some_func();" worse than manually coding up an ops table?</p><p>The kernel already uses OO where</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153227">

</div>
</div>

<div id="replyto_64153227"></div>

<ul id="group_64153227">
	<li id="hiddens_64153227" class="hide"></li>
</ul>

</li><li id="tree_64153233" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153233" class="commentstatus"></div>
<div id="comment_64153233" class="cw">
	<div id="comment_top_64153233" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153233" name="comment_link_64153233" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153233" onclick="return D2.setFocusComment(64153233)" >Re: Object oriented code is write once</a>


		 	<span id="comment_score_64153233" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153233); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~dowhileor">dowhileor</a>  <span class="uid"><a href="//slashdot.org/~dowhileor">( 7796472 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153233"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153233"><p>C++ is a platform to get applications working asap. You optimize the language, compiler to approve shiny new heap gymnastics even before the public knows they exist since the app/web deveveloper communities DEMAND it. So build an entire kernel around those fundamentals and lets watch malware get really interesting.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153233">

</div>
</div>

<div id="replyto_64153233"></div>

<ul id="group_64153233">
	<li id="hiddens_64153233" class="hide"></li>
</ul>

</li><li id="tree_64153245" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153245" class="commentstatus"></div>
<div id="comment_64153245" class="cw">
	<div id="comment_top_64153245" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153245" name="comment_link_64153245" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153245" onclick="return D2.setFocusComment(64153245)" >Re:</a>


		 	<span id="comment_score_64153245" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153245); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~jythie">jythie</a>  <span class="uid"><a href="//slashdot.org/~jythie">( 914043 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153245"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153245">This.<br> <br>While I like using C++ for a lot of things, it's ability to change what things 'mean' makes it a nightmare for large projects that interact with hardware.  Is that a 'plus' sign?  Well, is it REALLY an addition, or is there an overloaded function that makes it do something 'sensible'?   What type is this?  Well, it might be a simple type, or it might inherent from something that inherits from something that brings along unexpected functionality that the compiler 'helpfully' inserts.<br> <br>For low level stuf</div>
	</div>

	<div class="commentSub" id="comment_sub_64153245">

</div>
</div>

<div id="replyto_64153245"></div>

<ul id="group_64153245">
	<li id="hiddens_64153245" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64153197" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153197" class="commentstatus"></div>
<div id="comment_64153197" class="cw">
	<div id="comment_top_64153197" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153197" name="comment_link_64153197" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153197" onclick="return D2.setFocusComment(64153197)" >WHFO</a>


		 	<span id="comment_score_64153197" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153197); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~nsaspook">nsaspook</a>  <span class="uid"><a href="//slashdot.org/~nsaspook">( 20301 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153197"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153197"><p>When Hell Freezes Over.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153197">

</div>
</div>

<div id="replyto_64153197"></div>

<ul id="group_64153197">
	<li id="hiddens_64153197" class="hide"></li>
</ul>

</li><li id="tree_64153251" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64153251" class="commentstatus"></div>
<div id="comment_64153251" class="cw">
	<div id="comment_top_64153251" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64153251" name="comment_link_64153251" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;cid=64153251" onclick="return D2.setFocusComment(64153251)" >No need to port Linux to C++ to make it Modern</a>


		 	<span id="comment_score_64153251" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64153251); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~williamyf">williamyf</a>  <span class="uid"><a href="//slashdot.org/~williamyf">( 227051 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64153251"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64153251"><p>Just port Linux fom the current ANSI C 11 standard (producen in, well, 2011) to the more current ANSI C 17, and then to ANSI C 23, Instead of moving it to ANSI C++20, with all the potential problems that might entail, and then to C++23</p><p>No, Keep Linux in C, as god intended, just bring it closer to current ANSI C Standards at a rapid clip, that should be more than enough to keep it "Modern"</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64153251">

</div>
</div>

<div id="replyto_64153251"></div>

<ul id="group_64153251">
	<li id="hiddens_64153251" class="hide"></li>
</ul>

</li>
			<li id="roothiddens" class="hide"></li>
		</ul>
	
	
	
	

<noscript><p><b>There may be more comments in this discussion. Without JavaScript enabled, you might want to <a href="//linux.slashdot.org/users.pl?op=editcomm">turn on Classic Discussion System</a> in your preferences instead.</b></p></noscript>
<div id="discussion_buttons" class="clearfix">






</div>


<div class="newcmnt"><div id="replyto_0"></div></div>


	<script type="text/javascript">
<!--
		D2.currents()['hidden']   = 1;
		D2.currents()['full']     = 1;
		D2.currents()['oneline']  = 26;
		// D2.currents_total(28);

		D2.abbrev_comments({64153191:512,64153171:511,64153161:3,64153227:3,64153265:336,64153245:528,64153117:515});
		D2.noshow_comments([64153255]);
		D2.pieces_comments([64153115,64153161,64153165,64153177,64153241,64153117,64153121,64153123,64153179,64153257,64153263,64153171,64153209,64153149,64153243,64153155,64153185,64153265,64153157,64153201,64153191,64153227,64153233,64153245,64153197,64153251]);
		D2.init_hiddens([64153117]);

		D2.finishLoading();


		if (D2.thresh_totals()[6][6][1] == 0) {
			D2.replyTo(0, 1);
		}


//-->
	</script>


</div>



	
	
		<div id="clickgen" class="grid_24 b">
    <section class="grid_16 f">
        <div>
			<h4 class="nobg">
			    <a href="" class="selected btmrel" onClick="getRelatedStoriesForStory(423669);return false">Related Links</a>
			    <span class="tops fright">Top of the: <a href="" class="btmday" onClick="getTopStories(1);return false">day</a>, <a class="btmweek" href="" onClick="getTopStories(7); return false">week</a>, <a href="" onClick="getTopStories(30);return false" class="btmmonth">month</a>.</span>
			</h4>
			<ul class="nobullets bmrelatedlist">


	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>283<span class="hide"> comments</span></span></span><a href="//linux.slashdot.org/story/23/08/12/1835204/should-there-be-an-official-version-of-linux?sdsrc=popbyskidbtmprev">Should There Be an 'Official' Version of Linux?</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>233<span class="hide"> comments</span></span></span><a href="//linux.slashdot.org/story/23/02/18/2250239/ask-slashdot-where-can-you-buy-a-desktop-pc-that-makes-linux-easy-to-install?sdsrc=popbyskidbtmprev">Ask Slashdot: Where Can You Buy a Desktop PC That Makes Linux Easy to Install?</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>210<span class="hide"> comments</span></span></span><a href="//linux.slashdot.org/story/23/07/17/0159246/is-wayland-becoming-the-favored-way-to-get-a-gui-on-linux?sdsrc=popbyskidbtmprev">Is Wayland Becoming the Favored Way to Get a GUI on Linux?</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>191<span class="hide"> comments</span></span></span><a href="//linux.slashdot.org/story/23/11/06/0153203/how-red-hat-divided-the-open-source-community?sdsrc=popbyskidbtmprev">How Red Hat Divided the Open Source Community</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>186<span class="hide"> comments</span></span></span><a href="//linux.slashdot.org/story/23/02/11/0559223/a-developer-is-reimplementing-gnus-core-utilities-in-rust?sdsrc=popbyskidbtmprev">A Developer is Reimplementing GNU's Core Utilities in Rust</a>
	</li>


</ul>
        </div>
    </section>
    <aside class="grid_8 st">
		<section class="grid_24 f">
			<div>
				<h5 class="tlnav"><a href="//linux.slashdot.org/firehose.pl?op=view&amp;id=?sdsrc=nextbtmnext">next</a></h5>
				<div class="grid_24">
	    
	<br>This is the most recent story. Help us pick the next by <a href="//slashdot.org/recent" title="Recent submissions">voting on submissions</a>, or <a href="//slashdot.org/submission">submit your own</a>.
	
				</div>
			</div>
		</section>
		<section class="grid_24">
			<div>
				<h5 class="tlnav"><a href="//apple.slashdot.org/story/24/01/12/165230/apple-knew-airdrop-users-could-be-identified-and-tracked-as-early-as-2019?sdsrc=prevbtmprev">previous</a></h5>
				<div class="grid_24">
	    
            	 <span class="grid_7 tcenter"><img src="//a.fsdn.com/sd/topics/privacy_64.png" width="64" height="64" alt="Privacy"></span>
	    
					<p class="grid_12"><a href="//apple.slashdot.org/story/24/01/12/165230/apple-knew-airdrop-users-could-be-identified-and-tracked-as-early-as-2019?sdsrc=prevbtmprev">Apple Knew AirDrop Users Could Be Identified and Tracked as Early as 2019</a></p>

					<span class="grid_5 tcenter comments"><span class="cmntcnt_large fleft"><span class="slant"></span><span>9<span class="hide"> comments</span></span></span></span>
				</div>
			</div>
		</section>
	</aside>
</div>
	

</section>
			</div>
		</div>
<div id="bottom-masonry" class="jobbioapp"></div>
		<div class="row top-space">


			<div class="grid_24">
				<!-- 728px ad -->

				<div class="adwrap">
<div id='div-gpt-ad-728x90_c'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_c');});</script></div>
</div>
				<!-- end 728px ad -->
				<!-- Slashdot Deals 6 Best Sellers -->
					<div class="row deals-footer">
						<div class="units-8 indent-2 deals-wrapper">
						  <div class="deals-header"><h1>Slashdot Top Deals</h1></div>
						  <div id="deals-output">
							<script id="deals-template" type="text/x-handlebars-template">
							  {{#each deal}}
								<div class="deal">
								  <a href="{{urlPath permalink}}?&utm_source=slashdot.org&utm_medium=dealfeed-footerfeed&utm_campaign={{slug}}" target="_blank">
								  	<img src="{{main_image}}" alt="" />
								  </a>
								  <p class="title"><a href="{{urlPath permalink}}?&utm_source=slashdot.org&utm_medium=dealfeed-footerfeed&utm_campaign={{slug}}" target="_blank">{{title}}</a></p>
								  <p class="deal-price">{{centConversion price_in_cents}}</p>
								</div>
							  {{/each}}
							</script>
						  </div>
						</div>
					</div>
					<script>
						if ( sdAdBlockActive && window.is_euro_union === 0) {
                                                    bizx.cmp.ifConsent('', ['all'], function () {
							$.ajaxSetup({
								cache: true
							});
							$.getScript( "//a.fsdn.com/sd/js/scripts/min/deals-min.js", function(){
								runDealsWidget();
							});
                                                    });
						}
					</script>

					<!-- End Slashdot Deals 6 Best Sellers -->
				</div>
			</div>
		</div>
	</div>
	<!-- SMACKS: END COMMENTS SECTION -->
</div>
<!-- SMACKS: END COMMENTS CONTAINER -->


	

<script type="text/javascript">

$(function(){
$('#firehose-filter').
	focus(function(event){
		gFocusedText = this;
	}).
	blur(function(event){
		if ( gFocusedText === this ) {
			gFocusedText = null;
		}
	});


apply_updates_when(		'at-end', true);
});
</script>

<!-- body end --><!-- footer type=current begin -->

	
	</section>
	
	


	<footer id="fhft" class="grid_24 nf aoc">
		<div id="logo_nf" class="fleft">
			<a href="//slashdot.org"><span>Slashdot</span></a>
		</div>
		<nav role="firehose footer">
			
				
				
				
				

				
						<span class="ind"></span><a class="btn first" href="//linux.slashdot.org/comments.pl?sid=23191137&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Post</a>
				
				<a class="btn hide" id="footer_moderate_button">Moderate</a>
				<a class="btn hide" id="footer_moderatorhelp_button">Moderator Help</a>
				<a class="btn hide" id="footer_delete_button" title="Checked comments will be deleted.">Delete</a>
				<script>
					(function($){
						var old_moderate_btn = $("#discussion_moderate_button");
						if (old_moderate_btn.length) {
							var moderate_btn = $("#footer_moderate_button");
							moderate_btn.click(
								function(){old_moderate_btn.click()}
							);
							moderate_btn.removeClass('hide');
						}

						var old_moderatorhelp_btn = $("#discussion_moderatorhelp_button");
						if (old_moderatorhelp_btn.length) {
							var moderatorhelp_btn = $("#footer_moderatorhelp_button");
							moderatorhelp_btn.click(
								function(){old_moderatorhelp_btn.click()}
							);
							moderatorhelp_btn.attr(
								'href', old_moderatorhelp_btn.attr('href')
							);
							moderatorhelp_btn.removeClass('hide');
						}

						var old_delete_btn = $("#discussion_delete_button");
						if (old_delete_btn.length) {
							var delete_btn = $("#footer_delete_button");
							delete_btn.click(
								function(){old_delete_btn.click()}
							);
							delete_btn.removeClass('hide');
						}

						$('#discussion_buttons').addClass('hide');
					})(Slash.jQuery); // (function($){
				</script>
				<ul class="fleft">
					
						<li class="fleft selected">
							<span class="nbutton btn hide link reset" id="more_comments_button">
								<a href="#" onclick="D2.ajaxFetchComments(0,1); return false">
									<span id="more_comments_num_a" class="hide">Get more comments</span>
								</a>
							</span>
						</li>
					
					
						<li class="fleft">
							<span class="loadedcommentcnt">28</span> of <span class="totalcommentcnt">28</span> loaded
						</li>
					
				</ul>
				
					<script type="text/javascript">D2.finishLoading()</script>
				
			

			
			<ul class="fright submitstory">
					<li class="fright">
						<a href="/submit">Submit<span class="opt"> Story</span></a>
					</li>
			</ul>
		</nav>
		


	</footer>
	<section class="bq">
		<blockquote class="msg grid_24" cite="https://slashdot.org">
			<p>Never trust anyone who says money is no object.</p>
			<span class="slant"></span>
		</blockquote>
	</section>
	<footer id="ft" class="grid_24">
		<nav class="grid_10" role="footer">
			<ul>
				<li><a href="//slashdot.org/faq">FAQ</a></li>
				<li><a href="//slashdot.org/archive.pl">Story Archive</a></li>
				<li><a href="//slashdot.org/hof.shtml">Hall of Fame</a></li>
				<li><a href="https://slashdotmedia.com/advertising-and-marketing-services/" rel="nofollow">Advertising</a></li>
				<li><a href="https://slashdotmedia.com/terms-of-use/" rel="nofollow">Terms</a></li>
				<li><a href="https://slashdotmedia.com/privacy-statement/" rel="nofollow">Privacy Statement</a></li>
				<li><a href="//slashdot.org/faq/slashmeta.shtml">About</a></li>
				<li><a href="mailto:feedback@slashdot.org">Feedback</a></li>
				<li><a href="#" onclick="set_mobile_pref('mobile',1);return false;">Mobile View</a></li>
				<li><a href="//slashdot.org/blog">Blog</a></li>
				<li><a href="#" id="opt-out-link"></a></li>
				<li><button class="btn opt-out" id="opt-out-button" style="display:none">
					<img src="//a.fsdn.com/sd/ccpa-optout.png" alt="Icon">
					Do Not Sell My Personal Information</button></li>

			</ul>
		</nav>
		<br>
		
		<div class="grid_14 tright tm"><span class="nobr">Copyright &copy; 2024 Slashdot Media. All Rights Reserved.</span></div>

	<div class="modal-custom overlay-custom" id="ccpa-modal" style="max-width:100%">
		<div class="modal-content modal-content-ccpa">
	    	<span class="close" id="modal-close">&times;</span>
			<div class="modal-header" id="ccpa-modal-content-destination"></div>
		</div>
	</div>

	</footer>
	
	<div class="overlay"></div>
<div class="modal-box">
    <a href="#" id="close-modal">Close</a>
    <article class="modal-content">
    </article>
    <footer>
</div>




<div id="modal_cover" class="hide" onclick="hide_modal_box(); return false;"></div>
<div id="modal_box" class="hide">
      <div id="modal_box_content"></div>
      <header class="n">
                  <span class="fadeout"></span>
                  <span class="fadeoutfade"></span>
		  <span class="pf"><a class="ico close" onclick="hide_modal_box(); return false;" href="#"><span>Close</span></a></span>
		  <h3 class="pf"><div id="logo"><a href="//slashdot.org">Slashdot</a></div><span id="preference_title"></span></h3>
      </header>
</div>
	
	<!-- CCM Tag -->
<script type="text/javascript">
bizx.cmp.ifConsent('', ['all','bombora'], function() {
        /*global _ml:true, window */
        _ml = window._ml || {};
        _ml.eid = '771';

        var s = document.getElementsByTagName('script')[0], cd = new Date(), mltag = document.createElement('script');
        mltag.type = 'text/javascript'; mltag.async = true;
        mltag.src = '//ml314.com/tag.aspx?' + cd.getDate() + cd.getMonth() + cd.getFullYear();
        s.parentNode.insertBefore(mltag, s);
});
</script>
<!-- End CCM Tag -->

<script type="text/javascript">
window.google_analytics_uacct = "UA-199823890-2";

var _gaq = _gaq || [];





  _gaq.push(['_setAccount', 'UA-199823890-2']);
  _gaq.push(['_setDomainName', '.slashdot.org']);

	
		_gaq.push(['_addIgnoredRef', 'slashdot.org']);
	


  _gaq.push(['_setCustomVar', 1, 'User Type',  'Anon', 3]);		
	
	_gaq.push(['_setCustomVar', 2, 'Page','article2', 3]);

	



// track beta behavior for user
var betamatches = document.cookie.match(/betagroup=(-?\d+)/);

if(betamatches && betamatches[1]) {
  if(betamatches[1] == -1) {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','opt-out', 3]);
  } else {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','unredirected', 3]);
  }
}



  _gaq.push(['_trackPageview']);
  _gaq.push(['_trackPageLoadTime']);


if (window.is_euro_union === 0) {
bizx.cmp.ifConsent('', ['all'], function () {
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
});
}
</script>

<!-- CCM GA Push -->
<script>
    if (typeof _ml !== 'undefined' && _ml.us) {
        if (_ml.us.tp && _ml.us.tp.length > 0) {
            ga('set', 'dimension2', _ml.us.tp[0]);
        }
        if (_ml.us.pc && _ml.us.pc.length > 0) {
            ga('set', 'dimension7', _ml.us.pc[0]);
        }
        ga('set', 'dimension3', _ml.us.ind);
        ga('set', 'dimension4', _ml.us.cr);
        ga('set', 'dimension5', _ml.us.cs);
        ga('set', 'dimension6', _ml.us.dm);
        ga('set', 'dimension8', _ml.us.sn);
    }
</script>

<!-- Sticky Ads -->
<script type="text/javascript">
var topBannerViewed = false;
function initSticky(){
	if (SD.Ads.acceptable_ads_active) {
		return;
	}
		
	if($('#div-gpt-ad-728x90_a').length > 0 && $('#div-gpt-ad-300x250_a').length > 0 && window.outerWidth >= 1070 && !sdAdBlockActive){
	    $(window).scroll(function(){
		var y = $(document).scrollTop();
		var z =  y + window.outerHeight;
		var navOffset = 0;
		var offset = [
		    $('.nav-wrap').outerHeight(true),
		    $('.nav-secondary-wrap').outerHeight(true)
		];
		for(row in offset){
		    if(offset[row]) navOffset = navOffset + parseInt(offset[row]);
		}
		$('.adwrap-unviewed').each(function(){
		    var cls = 'adwrap-sticky';
		    var toggleCls = 'adwrap';
				//$('.banner-wrapper').css('height', $('.banner-contain').outerHeight());
		    if($(this).hasClass('railad')) {
			if(topBannerViewed){
			    var topPixels = $(this).offset().top;
			    navOffset += $('.adwrap').outerHeight();
			    if(y >= topPixels && y >= navOffset){
				$('#slashboxes').css('top', 0).css('position','sticky').css('right',13);
			    } else {
				$('#slashboxes').removeAttr('style');
			    }
			}
			return;
		    }
		    var topPixels = $(this).offset().top;
		if(y >= topPixels && y >= navOffset){
			$(this).addClass(cls);
			$(this).removeClass('adwrap');
					if(cls == 'adwrap-sticky') { //top banner
			    topBannerViewed = false;
						$('#slashboxes').css('top',$(this).outerHeight() || 0).css('position','sticky').css('right',13);
					}
		if(topBannerViewed) {
			    //console.log('hereeee');
						$('#slashboxes').css('top', 0).css('position','sticky').css('right',13);
					}
		    }else{
									//console.log('topBannerViewed', topBannerViewed);
			$(this).removeClass(cls);
			$(this).addClass(toggleCls);
			$('#slashboxes').removeAttr('style');
		    }
		});
			if($('.adwrap-viewed-banner').length > 0){
			  //console.log('ads topBanner displayed');
				topBannerViewed = true;
				$('.adwrap-viewed-banner').removeClass('adwrap-unviewed').removeClass('adwrap-sticky').addClass('adwrap');
			}
	    if($('.adwrap-viewed-railad').length > 0){
							//console.log('ads sidebar displayed');
		    $('.adwrap-viewed-railad').removeClass('adwrap-unviewed').removeClass('adwrap-railad-sticky');
				$('#slashboxes').removeAttr('style');
			}
	    });
	}
}
bizx.cmp.ifConsent('', ['all', 'google-ads'], function () {
	if (!sdAdBlockActive) {
		initSticky();
	}
	if (SD.Ads.acceptable_ads_active) {
		// similar to remove* code above in initSticky
		$('.adwrap-unviewed').removeClass('adwrap-unviewed').removeClass('adwrap-sticky').addClass('adwrap').removeClass('adwrap-railad-sticky');
		$('#slashboxes').removeAttr('style');
	}
});
</script>

<!-- Piwik -->
<script type="text/javascript">
  var _paq = _paq || [];
  _paq.push(["setCookieDomain", "*.slashdot.org"]);
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
function initPiwikAndNels() {
  (function() {
    var u="//analytics.slashdotmedia.com/";
    _paq.push(['setTrackerUrl', u+'sd.php']);
    _paq.push(['setSiteId', 40]);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'sd.js'; s.parentNode.insertBefore(g,s);
  })();

    if(window.location.pathname == '/'){
        var nelId = (location.search.split('nel_id=')[1] || '').split('&')[0];
        var url = '/ajax.pl?op=nel';
        if(nelId){
            url += '&nel_id='+nelId;
        }
        $.ajax({
            url: url,
            type: 'POST',
            success: function(html){
                $('#firehoselist article').eq(1).after(html);
            }
        });
    }
    //announcement NEL
    if(document.getElementById('announcementText')){
      $('#announcementText').hide();
      var hlUrl = '/ajax.pl?op=hl_nel';
      if(nelId){
        hlUrl += '&nel_id='+nelId;
      }
      $.ajax({
        url: hlUrl,
        type: 'POST',
        success: function(html){
          if(html.length < 10){
            $('#announcementText').show();
            return;
          }
          $('#announcementText').html(html).show();
        },
        error: function () {
          $('#announcementText').show();
        }
      });
    }
}
bizx.cmp.ifConsent('', ['storage', 'measurement'], initPiwikAndNels);
</script>


<script type="text/javascript">
_linkedin_data_partner_id = "113712";
</script><script type="text/javascript">
if (window.is_euro_union === 0) {
bizx.cmp.ifConsent('', ['all'], function (){
    (function(){var s = document.getElementsByTagName("script")[0];
    var b = document.createElement("script");
    b.type = "text/javascript";b.async = true;
    b.src = "https://snap.licdn.com/li.lms-analytics/insight.min.js";
    s.parentNode.insertBefore(b, s);})();
    });
}
</script>
<noscript>
<img height="1" width="1" style="display:none;" alt="" src="https://dc.ads.linkedin.com/collect/?pid=113712&fmt=gif" />
</noscript>

<!-- Datonics -->
<script type="text/javascript">
if (window.is_euro_union === 0) {
    bizx.cmp.ifConsent('', ['all'], function () {
        bizx.cmp.embedScript("//ads.pro-market.net/ads/scripts/site-143573.js", true);
    });
}
</script>
	<script id="after-content" type="text/javascript">
(function( $, fn, console ){
	$ && fn && $(function(){ fn($, console); });
})(window.jQuery, window.pageload_done, window.console);
</script>
	
	<script type='text/javascript'>
	if(!document.location.href.match(/source=autorefresh/)) {
		document.write('<img src="//slashdot.org/images/js.gif?896">');
	}
</script>
<noscript>
	<img src="//slashdot.org/images/njs.gif?685">
</noscript>
	<div class="busy genericspinner hide"><span>Working...</span></div>

	    <script>
            var regular_opt_out_link = true;

            if (bizx.cmp.show_do_not_sell()) {
                regular_opt_out_link = false;
                 document.getElementById('opt-out-button').setAttribute('style', 'display:inline');
            }

            if (window.is_euro_union === 1) {
                regular_opt_out_link = false;
                var elem = '<a href="#" title="Privacy Choices" onclick="bizx.cmp.promptConsent(); return false;">Privacy Choices</a>';
                document.getElementById('opt-out-link').innerHTML = elem;
            }

            if (regular_opt_out_link == true) {
                var elem = '<a href="https://slashdotmedia.com/opt-out-choices" title="Opt Out" rel="nofollow">Opt Out</a>';
                document.getElementById('opt-out-link').innerHTML = elem;
            }
            var cmp_modal = document.getElementById('ccpa-modal');
            var btn = document.getElementById('opt-out-button');
            var span = document.getElementById('modal-close');

            btn.onclick = function() {
            	cmp_modal.style.display = 'block';
            };

            span.onclick = function() {
            	cmp_modal.style.display = 'none';
            };

         </script>

	<script>
		if(typeof(Storage)!=="undefined"){
			window.scrollTo(0,sessionStorage.scrollPos);
				$(window).scroll(function () {
				//You've scrolled this much:
				sessionStorage.scrollPos = $(window).scrollTop();
			});
		}
		$(function(){
			$('a').click(function(){
				delete sessionStorage.scrollPos;
			})
		});
		// window.onbeforeunload = function () {
		// 	console.log('bakc button clicked');
		// 	delete sessionStorage.scrollPos;
		// }
		window.onpopstate=function() {
			delete sessionStorage.scrollPos;
		}
	</script>
	

	
		<!-- 1x1 story page -->
		<div id='div-gpt-ad-1x1'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-1x1');});</script></div>
	

	</body>
	</html>


	<!-- footer type=current end -->