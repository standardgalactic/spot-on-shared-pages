<!-- html-header type=current begin -->
	
	<!DOCTYPE html>
	
	<html lang="en">
	<head>
	<!-- Render IE9 -->
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

	

	<script id="before-content" type="text/javascript">
(function () {
    if (typeof window.sdmedia !== 'object') {
         window.sdmedia = {};
    }
    if (typeof window.sdmedia.site !== 'object') {
        window.sdmedia.site = {};
    }

    var site = window.sdmedia.site;
    site.rootdir = "//slashdot.org";
}());

var pageload = {
	pagemark: '703121633965648093',
	before_content: (new Date).getTime()
};
function pageload_done( $, console, maybe ){
	pageload.after_readycode	= (new Date).getTime();
	pageload.content_ready_time	= pageload.content_ready - pageload.before_content;
	pageload.script_ready_time	= pageload.after_readycode - pageload.content_ready;
	pageload.ready_time		= pageload.after_readycode - pageload.before_content;
	// Only report 1% of cases.
	maybe || (Math.random()>0.01) || $.ajax({ type: 'POST', data: {
		op: 'page_profile',
		pagemark: pageload.pagemark,
		dom: pageload.content_ready_time,
		js: pageload.script_ready_time
	} });
}
</script>
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
	
		<title>Bruce Schneier Reminds LLM Engineers About the Risks of Prompt Injection Vulnerabilities - Slashdot</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	  
		<meta name="description" content="Security professional Bruce Schneier argues that large language models have the same vulnerability as phones in the 1970s exploited by John Draper. 

&#34;Data and control used the same channel,&#34; Schneier writes in Communications of the ACM.  &#34;That is, the commands that told the phone switch what to do ...">
	    
		<meta name="twitter:card" content="summary">
		<meta name="twitter:site" content="@slashdot">
		<meta name="twitter:domain" content="it.slashdot.org">
		<meta property="og:url" content="https://it.slashdot.org/story/24/05/18/0336219/bruce-schneier-reminds-llm-engineers-about-the-risks-of-prompt-injection-vulnerabilities">
	    
		<meta property="og:title" content="Bruce Schneier Reminds LLM Engineers About the Risks of Prompt Injection Vulnerabilities - Slashdot">
		<meta property="og:description" content="Security professional Bruce Schneier argues that large language models have the same vulnerability as phones in the 1970s exploited by John Draper. 

&#34;Data and control used the same channel,&#34; Schneier writes in Communications of the ACM.  &#34;That is, the commands that told the phone switch what to do ...">
	  
	
	
		<meta property="og:image" content="https://a.fsdn.com/sd/topics/ai_64.png">
	
		<meta property="fb:admins" content="100000696822412">
		<meta property="fb:page_id" content="267995220856">
	
		<meta name="viewport" content="width=1000, user-scalable=yes, minimum-scale=0, maximum-scale=10.0" />
		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black">
	
		<link rel="canonical" href="https://it.slashdot.org/story/24/05/18/0336219/bruce-schneier-reminds-llm-engineers-about-the-risks-of-prompt-injection-vulnerabilities">
		
		<link rel="alternate" media="only screen and (max-width: 640px)" href="https://m.slashdot.org/story/428557" >
	

		<link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/classic.ssl.css?e48d135c2113bc48" >
		<!--[if IE 8]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie8-classic.ssl.css?e48d135c2113bc48" ><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie7-classic.ssl.css?e48d135c2113bc48" ><![endif]-->
	
	
	



	
	<!--  -->

	
	

	
	<!-- SMACKS: NEW CSS -->
	<link rel="stylesheet" href="//a.fsdn.com/sd/css/app.css?e48d135c2113bc48">

	<script src="//a.fsdn.com/con/js/sftheme/cmp2.js?2024-01"></script>
	<script src="https://slashdot.org/country.js"></script>
	<script>
		window.bizx.cmp.init({
			cmp_id: 12126,
			geo: window,
			gam_gdpr_technical_delivery: true,
			
		});
	</script>
	<link rel="stylesheet" href="//a.fsdn.com/con/css/sftheme/sandiego/cmp.css?2020-06-11" type="text/css">

	<script type='text/javascript'>
var _gaq = _gaq || [];
</script>

<script>
window.SD = {};
window.SD.Ads = {};

bizx.cmp.ifConsent('', ['all'], function () {
    var bt = 'https://btloader.com/tag?o=5098683085881344&upapi=true';
    bizx.cmp.embedScript(bt, true);
    window.addEventListener('AcceptableAdsInit', function (e) {
      if(e.detail) {
        console.log('acceptable ads on');
        SD.Ads.acceptable_ads_active = true;
      } else {
        console.log('acceptable ads off');
        SD.Ads.acceptable_ads_active = false;
      }
    });
});
</script>



         
   
   

<script type="text/javascript" id="pbjs_script" data-dom="https://d3tglifpd8whs6.cloudfront.net"  src="https://d3tglifpd8whs6.cloudfront.net/js/prebid/slash-story/slash-story.min.js"></script>
<script type='text/javascript'>
    /*global performance */
    var googletag = window.googletag || {};
    googletag.cmd = googletag.cmd || [];

		window.SD.Ads.slotsById = {};
		window.SD.Ads.idsByPath = {};

		window.SD.Ads.visibleTime = {};
		window.SD.Ads.Helpers = {};

		//window.SD = SD;

    bizx.cmp.ifConsent({purposes: 'all', vendors: 'prebid'}, function(){
        window.bizxPrebid.Ads.initPrebid(window.bizxPrebid.adUnits);
    }, function() {
		// no 'prebid' consent (e.g. region without prebid consent string support) but try GPT directly
		bizx.cmp.ifConsent({purposes: 'all', vendors: 'google-ads'}, function () {
			bizx.cmp.embedScript('https://securepubads.g.doubleclick.net/tag/js/gpt.js');
		});
	});
</script>

<!-- prep GPT ads -->
<script type='text/javascript'>
(function() {
	function page_type (loc) {
		/*
		only four page types:
		- Story
		- Poll
		- Homepage (/ only)
		- Other (but AdOps wants 'Homepage' again)
		*/
		var path = loc.pathname;
		var just_the_root = /^\/?$/.test(path);
		var story_or_poll = /^\/(story(?=\/)|submission(?=\/)|poll(?=\/|Booth|s\b))/i.exec(path);

		var page_type = just_the_root ? 'homepage'
			: story_or_poll ? story_or_poll[1]
				: 'other'

		// exceptions
		if (page_type.toLowerCase() === 'submission')
			page_type = 'story'; // submissions are like stories, right?
		else if (page_type.toLowerCase() === 'other')
			page_type = 'homepage'; // this one might move out of here

		return page_type;
	}

	function page_section(loc) {
		//var greek = ['alpha', 'beta', 'gamma', 'delta'].join('|');
		//var hostwise = '^([a-z]+)(?:-(?:'+greek+'))?\\.(?:slashdot\\.org|\\.xb\\.sf\\.net)$';
		var pathwise = '^/(?:(recent|popular|blog)|stories/([^/]+))';
		var rootwise = '^\/?$';

		//var hostwisely = new RegExp(hostwise,'i').exec(loc.hostname);
		var pathwisely = new RegExp(pathwise, 'i').exec(loc.pathname);
		var rootwisely = new RegExp(rootwise, 'i').exec(loc.pathname);

		var section = (rootwisely && 'homepage')
			|| (pathwisely && (pathwisely[1] || pathwisely[2]))
			|| ''
		;

		return section.replace(/[^_a-z]/ig, '');
	}

	function single_size(size) {
		return '' + size[0] + 'x' + size[1];
	}

	function sz_sz(sz) {
		var str = '';
		var sizes = [];
		if (sz[0] instanceof Array) {
			for (size in sz) {
				sizes.push(single_size(sz[size]));
			}
			return sizes.join(',');
		} else {
			return single_size(sz);
		}
	}

	function unique_tpc_array(array1, array2) {
		var j = array1.concat(array2);
		j.forEach(function (v, i, a) {
			a[i] = v.replace(/[^_a-z]/ig, '');
		});
		return j.filter(function (v, i, a) {
			return v != '' && a.indexOf(v) === i;
		});
	}

	/* LEGEND:
		- 'sz' = "size"
		- 'npt' = "no page type" in ad unit name
	*/
	var tags = {
		'728x90_A': {'sz': [[728, 90], [970, 90], [970, 250], [980, 66]]},
		'728x90_B': {'sz': [728, 90]},
		'728x90_C': {'sz': [728, 90], 'skip': {'homepage': 1}},
		'HubIcon_200x90_A': {'sz': [[200, 90], [220, 90]]},
		'PowerSwitch_980x66_A': {'sz': [980, 66], 'skip': {'homepage': 1}},
		'PollPeel': {'sz': [200, 90], 'skip': {'homepage': 1}},
		//'VideoWidget_300x250': { 'sz': [300, 250], 'npt': 1 },
		'300x250_A': {'sz': [[300, 250], [300, 600], [300, 1050]]},
		'300x250_B': {'sz': [[300, 250], [300, 600]]},
		'300x250_C': {'sz': [[300, 250], [300, 600]]},
		'300x250_D': {'sz': [[300, 250], [300, 600]]},
		'Pulse_300x600_A': {'sz': [300, 600]},
		//'Polls_Detail_300x250_A': { 'sz': [[300, 250], [300, 600]], 'npt': 1 },
		//'Poll_300x250_A': { 'sz': [[300, 250], [300, 600]], 'npt': 1 },
		//'SD_Story_1x1': { 'sz': [1, 1] },
		'1x1': {'sz': [1, 1]}
	};

	//var network_path = '/41014381/Slashdot/';
	var network_path = '/41014381/Slashdot/';
	var tag_name_prefix = 'SD';
	var tag_name_linkage = '_';
	var tag_name_pagetype = page_type(location);
	var tag_topic = page_section(location);
	if (tag_name_pagetype == 'poll') {
		tag_name_pagetype = 'Poll';
	}
	var before_tag_pagetyped = network_path
		+ tag_name_prefix
		+ tag_name_linkage
		+ tag_name_pagetype
		+ tag_name_linkage
	;
	var before_tag_pagetypeless = network_path
		+ tag_name_prefix
		+ tag_name_linkage
		/* + tag_name_pagetype */
		/* + tag_name_linkage */
	;

		//can be safely called
		googletag.cmd.push(function () {

			function remove_sticky_top() {
				setTimeout(function () {
					$('#div-gpt-ad-728x90_a').parent('div').addClass('adwrap-viewed-banner');
					$('#div-gpt-ad-728x90_a').addClass('viewableImpression');
				}, 1000);
			}

			function remove_sticky_railad() {
				setTimeout(function () {
					$('#slashboxes .adwrap-unviewed').addClass('adwrap-viewed-railad');
					$('.railad').addClass('viewableImpression');
				}, 1000);
			}

			function viewable_imp(slot) {
				for (var i in slot) {
					remove_sticky_top();
					remove_sticky_railad();
					if (typeof slot[i] !== 'string') continue;
					switch (slot[i]) {
						//case "/41014381/Slashdot/SD_homepage_728x90_A":
						//case "/41014381/Slashdot/SD_story_728x90_A":
						//case "/41014381/Slashdot/SD_Poll_728x90_A":
						//case "/41014381/Slashdot/SD_homepage_728x90_Ref_A":
						//case "/41014381/Slashdot/SD_story_728x90_Ref_A":
						//case "/41014381/Slashdot/SD_Poll_728x90_Ref_A":
						//remove_sticky_top();
						//break;
						//case "/41014381/Slashdot/SD_homepage_300x250_A":
						//case "/41014381/Slashdot/SD_story_300x250_A":
						//case "/41014381/Slashdot/SD_Poll_300x250_A":
						//case "/41014381/Slashdot/SD_homepage_300x250_Ref_A":
						//case "/41014381/Slashdot/SD_story_300x250_Ref_A":
						//case "/41014381/Slashdot/SD_Poll_300x250_Ref_A":
						//remove_sticky_railad();
						//break;
					}
					//if(slot[i] === "/41014381/Slashdot/SD_homepage_728x90_A") remove_sticky_top();
					//if(slot[i] === "/41014381/Slashdot/SD_homepage_300x250_A") remove_sticky_railad();
				}
			}

			function define_me_a_slot(tag) {
				if (tags[tag].skip && tags[tag].skip[tag_name_pagetype])
					return;
				var sandbox_regex = /\.xb\.sf\.net$/i;
				var full_name = tags[tag].npt  // "no page type"
					? before_tag_pagetypeless + tag
					: before_tag_pagetyped + tag
				;
				var div_id = 'div-gpt-ad-' + tag.toLowerCase();
				// extend jQuery and get URL query params
				jQuery.extend({
					getQueryParameters: function (str) {
						return (str || document.location.search).replace(/(^\?)/, '').split("&").map(function (n) {
							return n = n.split("="), this[n[0]] = n[1], this
						}.bind({}))[0];
					}
				});

				var queryParams = $.getQueryParameters();

				if (queryParams.source === 'autorefresh') {
					full_name = full_name.replace(/(\d+x\d+)/, '$1_Ref');
					//console.log('TAG NAME: ', full_name);
				}

				var slot = googletag.defineSlot(
					full_name,
					tags[tag].sz,
					div_id
				);

				service = slot.addService(googletag.pubads());

				window.SD.Ads.slotsById[div_id] = slot;
				window.SD.Ads.idsByPath[full_name] = div_id;

				service.setTargeting('sz', tags[tag].sz);

				
				var frontend_tpc = tag_topic.split(",");
				var backend_tpc = [ "security", "ai", "it" ];

				var tpc_final = unique_tpc_array(frontend_tpc, backend_tpc);
				service.setTargeting('tpc', tpc_final);
				if (location.hostname.match(sandbox_regex)) {
					service.setTargeting('test', 'adops');
				}

			}

		for (tag in tags) {
			define_me_a_slot(tag, false);
		}


			googletag.pubads().addEventListener('slotVisibilityChanged', window.SD.Ads.visibilityChangedTracker);


		googletag.pubads().addEventListener('impressionViewable', function(event) {
			viewable_imp(event.slot);
		    });

                googletag.pubads().setTargeting('requestSource', 'GPT');
		googletag.pubads().enableAsyncRendering();
		

		googletag.pubads().collapseEmptyDivs();
		window.bizxPrebid.SAFEFRAMES = true;
		window.SD.Ads.setupAdRefresh();
		bizxPrebid.Ads.pushToGoogle();
		googletag.enableServices();
	});
})();


/* Ad-Refresh code */
window.SD.Ads.visibilityChangedTracker = function(event) {
	var id = event.slot.getSlotElementId();
	if (!window.SD.Ads.visibleTime.hasOwnProperty(id)) {
		window.SD.Ads.visibleTime[id] = {
			visible: false,
			prevVisibleTotal: 0,
			wasVisibleBeforePageBgd: false,
			reloadCount: 0
		};
	}
	var timeinfo = window.SD.Ads.visibleTime[id];
	if (event.inViewPercentage >= 50 && !document.hidden) {
		if (!timeinfo.visible) {
			timeinfo.visible = performance.now();
		}
	} else {
		if (timeinfo.visible) {
			timeinfo.prevVisibleTotal += performance.now() - timeinfo.visible;
			timeinfo.visible = false;
		}
	}
};

window.SD.Ads.setupAdRefresh = function() {
	document.addEventListener('visibilitychange', function () {
		for (var id in window.SD.Ads.visibleTime) {
			if (window.SD.Ads.visibleTime.hasOwnProperty(id)) {
				var timeinfo = window.SD.Ads.visibleTime[id];
				if (document.hidden) {
					timeinfo.wasVisibleBeforePageBgd = !!timeinfo.visible;
					if (timeinfo.visible) {
						timeinfo.prevVisibleTotal += performance.now() - timeinfo.visible;
						timeinfo.visible = false;
					}
				} else if (!document.hidden && timeinfo.wasVisibleBeforePageBgd) {
					timeinfo.visible = performance.now();
				}
			}
		}
	}, false);

	// after 30 sec, start checking every second for reload
	var LIMIT_MS = 30000;
	setTimeout(function () {
		//
		setInterval(function () {
			if (document.hidden) {
				return;
			}
			for (var id in window.SD.Ads.visibleTime) {
				if (window.SD.Ads.visibleTime.hasOwnProperty(id)) {
					var timeinfo = window.SD.Ads.visibleTime[id];
					if (timeinfo.visible &&
						timeinfo.prevVisibleTotal + (performance.now() - timeinfo.visible) >= LIMIT_MS &&
						timeinfo.reloadCount < 50
					) {
						timeinfo.reloadCount++;
						timeinfo.visible = false;
						timeinfo.prevVisibleTotal = 0;
						window.SD.Ads.Helpers.refreshBids([id]);
					}
				}
			}
		}, 1000);
	}, LIMIT_MS);
};

window.SD.Ads.Helpers.refreshBids = function (reloadIds) {
		console.log('AD REFRESH: refreshBids', reloadIds);
		pbjs.que.push(function () {
			for (var i = reloadIds.length-1; i >= 0; i--) {
				var id = reloadIds[i];
				// clear out winner status from earlier auctions
				if (bizxPrebid.Ads.prebidWinners[id]) {
					delete bizxPrebid.Ads.prebidWinners[id];
				}
				// if has complement (hubicon), remove it since they are just house ads and can cause funky layouts if this leaderboard is refreshed to a different size
				var path = window.SD.Ads.slotsById[id].getAdUnitPath();
				/*var complement = gptadComplements[path];
				if (complement) {
					var complement_shortname = complement[0];
					var complement_path = "/41014381/SD/" + complement_shortname;
					var slot = window.SD.Ads.slotsById[window.SD.Ads.idsByPath[complement_path]];
					if (slot) {
						googletag.destroySlots([slot]);
						var $wrappedAd = $(window.SD.Ads.Helpers.getContainerIDFromPath(complement_path));
						$wrappedAd.remove();
						delete gptadComplements[path];
					}
				}*/

			}

			pbjs.requestBids({
				timeout: window.bizxPrebid.PREBID_TIMEOUT,
				adUnitCodes: reloadIds,
				bidsBackHandler: function () {
					var reloadSlots = reloadIds.map(function(id) { return window.SD.Ads.slotsById[id]; });

					// clear out previous sizing attrs, as they may change after refresh
/*
					for (var i = 0; i < reloadSlots.length; i++) {
						var $wrappedAd = $(window.SD.Ads.Helpers.getContainerIDFromPath(reloadSlots[i].getAdUnitPath()));
						var classes = $wrappedAd.attr('class').split(' ');
						for (var j = 0; j < classes.length; j++) {
							if (classes[j].indexOf('sz_') >= 0) {
								$wrappedAd.removeClass(classes[j]);
							}
						}
					}
*/
					pbjs.setTargetingForGPTAsync(reloadIds);
					googletag.pubads().refresh(reloadSlots);
				}
			});
		});
	}
</script>

<!-- CrossPixel -->
<script type="text/javascript">
if (window.is_euro_union === 0) {
    bizx.cmp.ifConsent('', ['all'], function(){
        try{(function(){ var cb = new Date().getTime(); var s = document.createElement("script"); s.defer = true; s.src = "//tag.crsspxl.com/s1.js?d=2397&cb="+cb; var s0 = document.getElementsByTagName('script')[0]; s0.parentNode.insertBefore(s, s0); })();}catch(e){}
    });
}
</script>




<!-- AdBlock Check -->
<script>
var sdAdBlockActive = true;
</script>
<script async src="//a.fsdn.com/sd/js/scripts/adsbanner.js?e48d135c2113bc48"></script>
</head>

<body class="anon firehose ">

	
	<script src="//a.fsdn.com/sd/all-minified.js?e48d135c2113bc48" type="text/javascript"></script>
	
	
	<script type="text/javascript">
(function(){
var regexp=/\s*(?:\d+|many)\s+more\s*/i;

	
	var auto_more_count = 1;

	function auto_more(){
		var $more_link = $('#more-experiment a');
		$more_link.each(function(){
			var $lastitem = $('#firehoselist>article.fhitem:visible:last');
			if ( Bounds.intersect(window, $lastitem) ) {
			
			
				!--auto_more_count && (auto_more=undefined);
				// don't allow a call till the next paginate gets built and |more_possible|
				$(document).unbind('scroll', call_auto_more);
			}
		});
	};

	function call_auto_more(){ auto_more && auto_more(); }
	

$('#more-experiment a').
	live('more-possible', function( event ){
		var $more_link=$(this);
		if ( regexp.test($more_link.text()) ) {
		
			$(document).bind('scroll', call_auto_more);
		} else {
			$(document).unbind('scroll', call_auto_more);
		
		}
	});
})();
</script>
	<!--[if lt IE 9]><script src="//a.fsdn.com/sd/html5.js"></script><![endif]-->
	
	
	<!-- index2_variant ||-->
		<script>
	if (window.is_euro_union === 0) {
            bizx.cmp.ifConsent('', ['all'], function () {
                (function (s,o,n,a,r,i,z,e) {s['StackSonarObject']=r;s[r]=s[r]||function(){
                (s[r].q=s[r].q||[]).push(arguments)},s[r].l=1*new Date();i=o.createElement(n),
                z=o.getElementsByTagName(n)[0];i.async=1;i.src=a;z.parentNode.insertBefore(i,z)
                })(window,document,'script','https://www.stack-sonar.com/ping.js','stackSonar');
                stackSonar('stack-connect', '66');
            });
        }
	</script>
        <!-- jobbio !-->

        <script type="text/javascript">
        bizx.cmp.ifConsent('', ['all'], function () {
        var j_script = document.createElement('script')
        j_script.setAttribute('src', 'https://widgets.jobbio.com/partner_fluid_widgets_v1.6.1/display.min.js')
        j_script.setAttribute('id','jobbio-display-script')
        j_script.setAttribute('async','')
        j_script.onload = function handle(){
        if (document.getElementById('bottom-masonry')){
            jobbio_display.widget({
                slug: 'slashdot-jobs',
                container: 'bottom-masonry',
                style: 'masonry',
                count: 6,
                type: 'multiple',
                content: 'jobs',
                searchTerm: '',
            });
        }

        jobbio_display.widget({
            slug: 'slashdot-jobs',
            container: 'horizontal',
            style: 'horizontal',
            count: 4,
            type: 'multiple',
            content: 'jobs',
            searchTerm: '',
        })
        if (document.getElementById('sidebar-j')){
            jobbio_display.widget({
                slug: 'slashdot-jobs',
                container: 'sidebar-j',
                style: 'sidebar',
                count: 6,
                type: 'multiple',
                content: 'jobs',
                searchTerm: '',
            });
        }

        }
        document.head.appendChild(j_script);
        })
        </script>
		<!-- html-header type=current end --><!-- header type=current begin -->
	
	
	
	<link rel="top"       title="News for nerds, stuff that matters" href="//slashdot.org/" >
<link rel="search"    title="Search Slashdot" href="//it.slashdot.org/search.pl">
<link rel="alternate" title="Slashdot RSS" href="https://rss.slashdot.org/Slashdot/slashdotIt" type="application/rss+xml">
	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">

	
		<div id="top_parent"></div>
		<a name="topothepage"></a>
		
		<div class="container">
			<div class="nav-wrap">
				<nav class="nav-primary" role="navigation" aria-label="Global Navigation">
					<h1 class="logo">
	<a href="//slashdot.org"><span>Slashdot</span></a>
</h1>

<ul class="nav-site">
	<li><a href="//slashdot.org"><i class="icon-book" title="Stories"></i><span>Stories</span></a></li>
	<li>
		<ul class="filter-firehose">
			<li class="nav-label">Firehose <i class="icon-angle-right"></i></li>
			<li><a href="//slashdot.org/recent">All</a></li>
			<li><a href="//slashdot.org/popular">Popular</a></li>
		</ul>
	</li>
	<li><a href="//slashdot.org/polls"><i class="icon-chart-bar" title="Polls"></i><span>Polls</span></a></li>

	<!--
	<li><a href="//ask.slashdot.org"><i class="icon-question-circle"></i><span>Ask</span></a></li>
	
	<li><a href="//events.slashdot.org"><i class="icon-calendar"></i><span>Events</span></a></li>
	-->
	<li><a href="https://slashdot.org/software/"><i class="sd-mini"></i> <span>Software</span></a></li>
        <li><a href="//slashdot.org/newsletter"><span>Newsletter</span></a></li>
        <li><a href="//slashdot.org/jobs" rel="nofollow"><span>Jobs</span></a></li>
</ul>
<a href="//slashdot.org/submission" class="btn btn-success">Submit</a>
				</nav>
				<nav class="nav-user" role="navigation" aria-label="user access and account controls">
					<form id="search" class="form-inline nav-search-form" method="get" action="//slashdot.org/index2.pl">
<!-- //it.slashdot.org/index2.pl" -->
	<div class="form-group">
		<label class="sr-only" for="sitesearch">Search Slashdot</label>
		<div class="input-group">
			<input type="text" id="" class="" name="fhfilter" value="" placeholder="Search">
		</div>
	</div>
	<button type="submit" class="btn icon-search"></button>
</form>
<ul class="user-access">
	
		
			<li >
				<a href="//slashdot.org/my/login"  onclick="show_login_box(); return false;"><i class="icon-login"></i><span> Login</span></a>
				
			</li>
		
	
		
			<li class="nav-label">or</li>
		
	
		
			<li >
				<a href="//slashdot.org/my/newuser"  ><i class="icon-user-add"></i><span> Sign up</span></a>
				
			</li>
		
	
</ul>
				</nav>
			</div>
			<div class="nav-secondary-wrap">
				<nav class="nav-secondary" role="secondary-navigation">
	<ul>
		<li class="nav-label">Topics: </li>
		<li><a href="//devices.slashdot.org">Devices</a></li>
		<li><a href="//build.slashdot.org">Build</a></li>
		<li><a href="//entertainment.slashdot.org">Entertainment</a></li>
		<li><a href="//technology.slashdot.org">Technology</a></li>
		<li><a href="//slashdot.org/?fhfilter=opensource">Open Source</a></li>
		<li><a href="//science.slashdot.org">Science</a></li>
		<li><a href="//yro.slashdot.org">YRO</a></li>
		<!-- <li><a href="//slashdot.org/topics.pl">more...</a></li> -->
	</ul>
</nav>
<nav class="nav-social" role="social navigation">
	<ul>
		<li class="nav-label">Follow us:</li>
		<li><a href="https://rss.slashdot.org/Slashdot/slashdotMain" target="_blank" rel="nofollow"><i class="icon-rss-squared"></i><span class="sr-only">RSS</span></a></li>
		<li><a href="https://www.facebook.com/slashdot" target="_blank" rel="nofollow"><i class="icon-facebook-squared"></i><span class="sr-only">Facebook</span></a></li>
		<li><a href="https://www.linkedin.com/company/slashdot" target="_blank" rel="nofollow"><i class="icon-linkedin-squared"></i><span class="sr-only">LinkedIn</span></a></li>
		<li><a href="https://twitter.com/slashdot" target="_blank" rel="nofollow"><i class="icon-twitter-squared"></i><span class="sr-only">Twitter</span></a></li>
		<li><a href="https://www.youtube.com/channel/UCsW36751Gy-EAbHQwe9WBNw" target="_blank" rel="nofollow"><i class="icon-youtube-squared">
                    <!-- width="1792" height="1792" -->
                    <svg viewBox="0 260 1792 1260" xmlns="http://www.w3.org/2000/svg"><path d="M711 1128l484-250-484-253v503zm185-862q168 0 324.5 4.5t229.5 9.5l73 4q1 0 17 1.5t23 3 23.5 4.5 28.5 8 28 13 31 19.5 29 26.5q6 6 15.5 18.5t29 58.5 26.5 101q8 64 12.5 136.5t5.5 113.5v176q1 145-18 290-7 55-25 99.5t-32 61.5l-14 17q-14 15-29 26.5t-31 19-28 12.5-28.5 8-24 4.5-23 3-16.5 1.5q-251 19-627 19-207-2-359.5-6.5t-200.5-7.5l-49-4-36-4q-36-5-54.5-10t-51-21-56.5-41q-6-6-15.5-18.5t-29-58.5-26.5-101q-8-64-12.5-136.5t-5.5-113.5v-176q-1-145 18-290 7-55 25-99.5t32-61.5l14-17q14-15 29-26.5t31-19.5 28-13 28.5-8 23.5-4.5 23-3 17-1.5q251-18 627-18z"/></svg>
                </i><span class="sr-only">Youtube</span></a></li>
		<li><a href="https://mastodon.cloud/@slashdot" target="_blank" rel="me nofollow"><i class="icon-mastodon-squared">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M433 179.11c0-97.2-63.71-125.7-63.71-125.7-62.52-28.7-228.56-28.4-290.48 0 0 0-63.72 28.5-63.72 125.7 0 115.7-6.6 259.4 105.63 289.1 40.51 10.7 75.32 13 103.33 11.4 50.81-2.8 79.32-18.1 79.32-18.1l-1.7-36.9s-36.31 11.4-77.12 10.1c-40.41-1.4-83-4.4-89.63-54a102.54 102.54 0 0 1-.9-13.9c85.63 20.9 158.65 9.1 178.75 6.7 56.12-6.7 105-41.3 111.23-72.9 9.8-49.8 9-121.5 9-121.5zm-75.12 125.2h-46.63v-114.2c0-49.7-64-51.6-64 6.9v62.5h-46.33V197c0-58.5-64-56.6-64-6.9v114.2H90.19c0-122.1-5.2-147.9 18.41-175 25.9-28.9 79.82-30.8 103.83 6.1l11.6 19.5 11.6-19.5c24.11-37.1 78.12-34.8 103.83-6.1 23.71 27.3 18.4 53 18.4 175z"/></svg>
				</i><span class="sr-only">Mastodon</span></a></li>
		<li><a href="//slashdot.org/newsletter" target="_blank" rel="nofollow"><i class="icon-mail-squared"></i><span class="sr-only">Newsletter</span></a></li>
	</ul>
</nav>
			</div>
		</div>

		<section>
		
			<div class="message-bar" id="firehose-message-tray">
				<span class="icon-quote-left"></span>
				<p>
					
						
						Want to read Slashdot from your mobile device? Point it at <a href="http://m.slashdot.org">m.slashdot.org</a> and keep reading!
					
				</p>
			</div>
		
		
			<div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
		
		
			<div class="banner-wrapper">
				<div class="adwrap adwrap-unviewed banner-contain">
					
					<div id='div-gpt-ad-728x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_a');});</script></div>
					<div id='div-gpt-ad-hubicon_200x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-hubicon_200x90_a');});</script></div>
				</div>
			</div>
		
		<a name="main-articles"></a>
	
	<!-- header type=current end --><!-- body begin -->







	

	<style type="text/css">
menu, menu * {
	text-decoration:none;
}

menu[type=context] {
	display:none;
	position:absolute;
	z-index:10000;
}

menu[type=context]:not(.brief) {
	background-color:#dfdfdf;
	margin:0;
	padding:2px 0.5em;
	border-style:solid;
	border-width:1px;
	border-color:#eeeeee #aaaaaa #aaaaaa #eeeeee;
	-moz-border-radius-topright:.7em;
	-webkit-border-top-right-radius: 0.7em 0.7em;
}

menu.full[type=context] > a.slash-hover:first-child {
	-moz-border-radius-topright:.6em;
	-webkit-border-top-right-radius: 0.6em 0.6em;
}



menu.brief[type=context] > a {
	-moz-border-radius:.6em;
	-webkit-border-radius: 0.6em;
	color:#ffffff;
	background-color:#000000;
}

/*
span.briefmenu a.tag:not(.datatype) {
    padding-left:.5em;
}
*/




/* #tag-menu a, #feedback-menu a  { */
menu.tag-menu-admin a {
	display:list-item;
	list-style:none;
	text-align:left;
	font-weight:bold;
	color:black;
	padding:0.1em 0.5em;
	margin:-0.1em -0.5em;
	cursor:pointer;
}


.tags .edit-bar { position:relative; }
article aside .share .addthis_toolbox { display:block; width:60px; float:left; }
article aside.view_mode .share { min-width:120px; padding-top:.5em; }
#firehose.list article header h2 {padding-left: 20px; !important}
.novote .vote { display:none; }

.vote > a, .votedup > a, .voteddown > a {
	display:inline-block;
	height:22px;
	width:22px;
	margin: 2px 10px 0 0;
	color:rgb(255,255,255);
	text-decoration:none;
	line-height:22px;
	text-align:center;
	font-weight:bold;
	font-size:14px;
	border-width:1px;
	border-style:solid;
	border-color:rgba(0,0,0,0.5);
}

.vote > a, .votedup > a, .voteddown > a {color:rgb(0,0,0);}

article.fhitem-submission h2 .vote > a, article.fhitem-submission h2 .votedup > a, article.fhitem-submission h2 .voteddown > a { border-color:rgba(0,0,0,0.15); }
.vote .up, .vote .down, .votedup .up, .votedup .down, .voteddown .up, .voteddown .down { border-radius: 4px; -moz-border-radius: 4px; -webkit-border-radius: 4px; /* text-shadow:0 0 2px #000000; }*/}
article:not(.fhitem-story) .vote .up,article:not(.fhitem-story) .vote .down,article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .votedup .down,article:not(.fhitem-story) .voteddown .up,article:not(.fhitem-story) .voteddown .down { /*text-shadow:none !important; */}
.voteddown .down, .votedup .up { margin-right: 10px; text-indent:2px; line-height:24px; }
article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .voteddown .down {background: rgb(174,174,174);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(174,174,174)), to(rgb(193,193,193)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(193,193,193), rgb(174,174,174) 100%);color:rgb(0,0,0);}
article.fhitem-story .votedup .up,article.fhitem-story .voteddown .down {background: rgb(0,66,66);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(0,53,53)), to(rgb(0,102,102)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(0,102,102), rgb(0,53,53) 100%);}




#tag-menu span.var-tag {
font-weight:normal;
color:#444444;
}

menu.reasons-menu a {
padding:0 .25em 0 .25em;
font-size:80%;
-moz-border-radius:.5em;
-webkit-border-radius:.5em;
cursor:pointer;
}

menu.reasons-menu a:hover {
background:rgb(153,153,153);
background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102);
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102)));
color:#fff;
text-decoration:none;
font-weignt:normal;
}

article.fhitem-story menu.reasons-menu a:hover {
background:#002323 !important;
background:-moz-linear-gradient(100% 100% 90deg, #002323, #005353 70%) repeat scroll 0 0 #002323 !important;
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#005353), to(#002323)) !important;
}


menu.reasons-menu {
	display:none;
	margin:0;
	padding:0;
}

div.fhitem h3 menu.reasons-menu {
margin:0.25em 0 0;
}

div.fhitem h3 menu.reasons-menu a.tag {
font-size:.8em;
}

#tag-menu a.slash-hover,
#feedback-menu a.slash-hover,

.tag-display span.tag:hover,
.tag-display span.tag.trigger {
	color:white;
	background-color:rgb(0, 85, 85);
}

#tag-menu a.slash-hover span.var-tag {
	color:#eee;
}

.tag-entry.default {
        color:#ccc;
}

.brief .nix {
	margin-top:-1.35em;
	margin-left:0px;
	margin-top:-1.15em;
	text-decoration:none;
	line-height:1.35em;
	padding:0 2px;
	-moz-border-radius:.6em 0 0 .6em;
	-webkit-border-radius:.6em 0 0 .6em;
	-o-border-radius:.6em 0 0 .6em;
	border-radius:.6em 0 0 .6em;
    color:#fff !important;
    background:transparent !important;
}

.brief .nix:hover {
    background:rgb(153,153,153) !important;
    background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102) !important;
    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102))) !important;
}

</style>

<menu id="nix-reasons" style="display:none">
	<a class="tag">binspam</a><a class="tag">dupe</a><a class="tag">notthebest</a><a class="tag">offtopic</a><a class="tag">slownewsday</a><a class="tag">stale</a><a class="tag">stupid</a>
</menu>
<menu id="nod-reasons" style="display:none">
	<a class="tag">fresh</a><a class="tag">funny</a><a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">maybe</a>
</menu>
<menu id="comment-nix-reasons" style="display:none">
	<a class="tag">offtopic</a><a class="tag">flamebait</a><a class="tag">troll</a><a class="tag">redundant</a><a class="tag">overrated</a>
</menu>
<menu id="comment-nod-reasons" style="display:none">
	<a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">informative</a><a class="tag">funny</a><a class="tag">underrated</a>
</menu>

<menu id="tag-nod-reasons" style="display:none">
	<a class="tag">descriptive</a>
</menu>
<menu id="feedback-menu" class="tag-menu-admin" type="context">
	<a class="tag">typo</a><a class="tag">dupe</a><a class="tag">error</a>
</menu>
<menu id="tag-menu" class="tag-menu-admin none" type="context">

<!--	<a data-op="!" class="nix">!<span class="var-tag hide"></span></a>-->

</menu>

<script type="text/javascript">
$(function(){
var $CURRENT_MENU, $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/, IE7=/^7\.0/, TAG_PREFIX=/^\/tag\//;

function get_tag_name( $tag ){
	return ($tag.attr('href') || '').replace(TAG_PREFIX, '') || $tag.text().toLowerCase();
}

function trigger_menu( e, selector, $menu, menu_content ){
	var $target=$(original_target(e, selector)), in_use=$target.is('.trigger');
	if ( $CURRENT_MENU ) {
		$CURRENT_MENU.menu('cancel', e);
		$CURRENT_MENU = null;
	}

	if ( !in_use ) {
		menu_content && $menu.stop(true, true).hide().html(menu_content);
		($CURRENT_MENU=$menu).menu('context', e);
	}
	return !in_use;
}

function open_menu( trigger, $menu ){
	var $trigger=$(trigger), $fhitem=$trigger.closest('.fhitem');
	$fhitem.length && user_intent('interest', $fhitem[0]);

	$menu.appendTo(document.body).css({ opacity:0 }).show();

	var 	right	= $fhitem.offset().left + $fhitem.width(),
		global	= $trigger.offset(),
		local	= $menu.offsetParent().offset();

	// Ugly IE position hack required:
	$.browser.msie && IE7.test($.browser.version) && (local.top = 0);

	// pin the menu (horizontally) on-screen
	global.left = Math.min(global.left, right-$menu.width());

	$trigger.addClass('trigger');
	$menu.css({
		position:	'absolute',
		top:		global.top - local.top + $trigger.height(),
		left:		global.left - local.left,
		opacity:	1
	});
}

function close_menu( trigger, $menu ){
	$menu.hide();
	$(trigger).removeClass('trigger');
	($CURRENT_MENU===$menu) && ($CURRENT_MENU=false);
}

/* T2 tag context-menu */
var $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/;


    var user_is_admin = 0;



$('a[rel=tag]').live('mousedown',function(ea){
    window.open(this.href);
    return false;
})

$('.tag-bar .disagree').live('mousedown',function(ee){
	var fhitem = $(original_target(ee)).closest('.fhitem')[0],
		command = ('!' + $(original_target(ee)).attr("data-tag")).replace(NOTNOT, '');
    try { Tags.submit(fhitem, command); } catch ( err ) {  }
    return false;
})



$('a[rel=tag]').
	live('mousedown', function( e ){
        
            return true;
        

	}).
	live('click', function( e ){
		if ( !logged_in ) {
			var	target	= original_target(e),
				tag	= $(target).text();
			addfhfilter(tag);
		}
		e.preventDefault();
		return false;
	});

$TAG_MENU.menu({
	cssNamespace: 'slash',
	liveTriggers: true,
	clickDuration: 300,

	start: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			context	= firehose_settings && firehose_settings.viewtitle;

		// Insert the tagname into the menu items where needed.
		$TAG_MENU.find('span.var-tag').text(tag);
		$TAG_MENU.find('a.nix').attr('title','not ' + tag);


			// non-admins may only delete their own tags
		$TAG_MENU.find('a[data-op="-"]').toggle($tag.is('.my'));
	

		// *tagname* in *viewtitle*
		$TAG_MENU.find('a[data-op="="]').toggle(!!context);
		context && $TAG_MENU.find('span.var-view').text(context);

		open_menu($tag, $TAG_MENU);
	},

	select: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			op	= $(ui.event.target).attr('data-op'),
			fhitem,
			command;

		// Global for positioning other things.
		$related_trigger = $tag;

		switch ( op ) {
			case '=':
				addfhfilter(tag);
				break;

			default:
				fhitem = $tag.closest('.fhitem')[0];
				command = (op + tag).replace(NOTNOT, '');
				try { Tags.submit(fhitem, command); } catch ( err ) {  }
				break;
		}
	},

	stop: function( e, ui ){ close_menu(ui.trigger, $TAG_MENU); }
});




/* T2 feedback context-menu */



/* T2 datatype context-menu (admin-only) */






});
</script>

	

<!-- SMACKS: BEGIN STORY CONTENT -->
<div class="container">
	<!--SMACKS: BEGING CENTER COLUMN -->
	<div class="main-wrap has-rail-right">
		<div class="main-content">
			<div class="grid_24 a2 ">
			</div>
			<div id="firehose" class="nothumbs">
			<div id="firehoselist" class="fhroot fleft  grid_24">
				<div id="announcement">
  <div id="announcementText" style="display: none;"> <a href="https://slashdot.org/newsletter" rel="nofollow"><strong>Sign up for the Slashdot newsletter!</strong></a> OR <a onclick="window._paq.push(['trackEvent', 'Announcement', 'GC']);" href="https://jobs.slashdot.org/?source=boiler_plate&utm_source=boiler_plate&utm_medium=content&utm_campaign=bp_referral" rel="nofollow">check out the new Slashdot job board to browse remote jobs or jobs in your area</a><br><br></strong>Do you develop on GitHub? You can keep using GitHub but automatically <a href="https://sourceforge.net/p/forge/documentation/GitHub%20Importer/" rel="nofollow"><strong>sync your GitHub releases to SourceForge</a></strong> quickly and easily with <strong><a href="https://sourceforge.net/p/import_project/github/" rel="nofollow">this tool</a></strong> so your projects have a backup location, and get your project in front of SourceForge's nearly 20 million monthly users. It takes less than a minute. Get new users downloading your project releases today!</span><br></div>
  <a href="" class="btn-close" title="don't show me this again" onclick="closeAnnouncement(); return false;">&times;</a>
</div>


<script type="text/javascript">

if (!$.cookie('hide_sitenotice_36')) {
	$('#announcement').fadeIn(300);
}

function closeAnnouncement() {
	$('#announcement').fadeOut(300);
	$.cookie('hide_sitenotice_36', 'true', { path: '/', domain: 'slashdot.org', expires: 1 });
}
</script>
				<article id="firehose-173903823" data-fhid="173903823" data-fhtype="story" class="fhitem fhitem-story article usermode thumbs grid_24">
		<span class="sd-info-block" style="display: none">
			<span class="sd-key-firehose-id">173903823</span>
			<span class="type">story</span>
			
		</span>







	
	

<header>
	
		<span class="topic" id="topic-173903823">
			<a href="//it.slashdot.org/index2.pl?fhfilter=ai" onclick="return addfhfilter('ai');">
			
				<img src="//a.fsdn.com/sd/topics/ai_64.png" width="64" height="64" alt="AI" title="AI">
			
		</a>
		
	
		
		
		
		

		
		<a href="//it.slashdot.org/index2.pl?fhfilter=security" onclick="return addfhfilter('security');">
			
				<img src="//a.fsdn.com/sd/topics/security_64.png" width="64" height="64" alt="Security" title="Security">
			
		</a>
		</span>
	

	<h2 class="story">
		

		

		
		

		

		

		

		<span id="title-173903823" class="story-title"> <a   href="//it.slashdot.org/story/24/05/18/0336219/bruce-schneier-reminds-llm-engineers-about-the-risks-of-prompt-injection-vulnerabilities">Bruce Schneier Reminds LLM Engineers About the Risks of Prompt Injection Vulnerabilities</a> <span class=" no extlnk"><a class="story-sourcelnk" href="https://www.schneier.com/blog/archives/2024/05/llms-data-control-path-insecurity.html"  title="External link - https://www.schneier.com/blog/archives/2024/05/llms-data-control-path-insecurity.html" target="_blank"> (schneier.com) </a></span></span>

		
		
		<!--<span class="comments commentcnt-173903823" >37</span>-->
		

		
		<!-- comment bubble -->
		
			<span class="comment-bubble"><a href="//it.slashdot.org/story/24/05/18/0336219/bruce-schneier-reminds-llm-engineers-about-the-risks-of-prompt-injection-vulnerabilities#comments" title="">37</a></span>
		
	</h2>
	<div class="details" id="details-173903823">
		<span class="story-details">
		<span class="story-views">
			<span class="sodify" onclick="firehose_set_options('color', 'red')" title="Filter Firehose to entries rated red or better"></span><span class="icon-beaker pop1 " alt="Popularity" title="Filter Firehose to entries rated red or better" onclick="firehose_set_options('color', 'red')"><span></span></span> 
		</span>
		</span>
		<span class="story-byline">
	
				
			Posted
				by 
		
		
			
				  EditorDavid
			
		
		

		
		
		<time id="fhtime-173903823" datetime="on Saturday May 18, 2024 @11:34AM">on Saturday May 18, 2024 @11:34AM</time>
		
		
			 from the <span class="dept-text">sudo-intellectuals</span> dept.
		
		</span>
	</div>
</header>

<div class="body" id="fhbody-173903823">
	
		
	

	
		
		<div id="text-173903823" class="p">
			
		 	
				Security professional Bruce Schneier <a href="https://www.schneier.com/blog/archives/2024/05/llms-data-control-path-insecurity.html">argues</a> that large language models have the same vulnerability as phones in the 1970s exploited by <a href="https://en.wikipedia.org/wiki/John_Draper">John Draper</a>.<br> <br>

"Data and control used the same channel," Schneier <a href="https://cacm.acm.org/opinion/llms-data-control-path-insecurity/">writes in Communications of the ACM</a>.  "That is, the commands that told the phone switch what to do were sent along the same path as voices."

<i>
Other forms of prompt injection involve the LLM receiving malicious instructions in its <a href="https://twitter.com/mark_riedl/status/1637986261859442688">training data</a>. Another example <a href="https://greshake.github.io/">hides secret commands</a> in Web pages.  Any LLM application that processes emails or Web pages is vulnerable. Attackers can embed malicious commands in <a href="https://simonwillison.net/2023/Oct/14/multi-modal-prompt-injection/">images</a> and videos, so any system that processes those is vulnerable. Any LLM application that interacts with untrusted users &mdash; think of a chatbot embedded in a website &mdash; will be vulnerable to attack. It's hard to think of an LLM application that isn't vulnerable in some way.<br> <br>

Individual attacks are easy to prevent once discovered and publicized, but there are an <a href="https://llm-attacks.org/">infinite number of them</a> and no way to block them as a class. The real problem here is the same one that plagued the pre-SS7 phone network: the commingling of data and commands. As long as the data &mdash; whether it be training data, text prompts, or other input into the LLM &mdash; is mixed up with the commands that tell the LLM what to do, the system will be vulnerable.  But unlike the phone system, we can't separate an LLM's data from its commands. One of the enormously powerful features of an LLM is that the data affects the code. We want the system to modify its operation when it gets new training data. We want it to change the way it works based on the commands we give it. The fact that LLMs self-modify based on their input data is a feature, not a bug. And it's the very thing that enables prompt injection.<br> <br>

Like the old phone system, defenses are likely to be piecemeal. We're getting better at creating LLMs that are resistant to these attacks. We're building systems that clean up inputs, both by recognizing known prompt-injection attacks and training other LLMs to try to recognize what those attacks look like. (Although now you have to secure that other LLM from prompt-injection attacks.) In some cases, we can use access-control mechanisms and other Internet security systems to limit who can access the LLM and what the LLM can do. This will limit how much we can trust them. Can you ever trust an LLM email assistant if it <a href="https://simonwillison.net/2023/Apr/14/worst-that-can-happen/">can be tricked</a> into doing something it shouldn't do? Can you ever trust a generative-AI traffic-detection video system if someone can hold up a carefully worded sign and convince it to not notice a particular license plate &mdash; and then forget that it ever saw the sign...?<br> <br>

Someday, some AI researcher will figure out how to separate the data and control paths. Until then, though, we're going to have to think carefully about using LLMs in potentially adversarial situations...like, say, on the Internet. </i> <br>

Schneier urges engineers to balance the risks of generative AI with the powers it brings.   "Using them for everything is easier than taking the time to figure out what sort of specialized AI is optimized for the task.<br> <br>

"But generative AI comes with a lot of security baggage &mdash; in the form of prompt-injection attacks and other security risks. We need to take a more nuanced view of AI systems, their uses, their own particular risks, and their costs vs. benefits."<br>
		 	
		</div>

		

		

		
			
		
	</div>
	<aside class="grid_24 view_mode">
		
			<div class="units-12 story-detail-tags">
				<span id="sharethis-173903823" class="">
					
						

						

					
				</span>

				<div class="story-tags">
					<div class="tright tw">
						
							<span class="tright tags">
								
									<menu type="toolbar" class="edit-bar">
		<span id="tagbar-173903823" class="tag-bar none">
			
		</span>
		
		<!--
			<a class="edit-toggle" href="/my/login/" onclick="show_login_box();return false;">
				<span class="icon-tag btn collapse"></span>
			</a>
			-->
		
		
		<div class="tag-menu">
			<input class="tag-entry default" type="text" value="apply tags">
		</div>
		

		
		

	</menu>
								
							</span>
						
					</div>
				</div>
			</div>

			
				
				
				
			 	
					<section class="grid_24" id="newa2footerv2">
						<div class="grid_6 pr">
							<h3><a title="Previous story" href="//it.slashdot.org/story/24/05/18/0125202/facing-angry-users-sonos-promises-to-fix-flaws-and-restore-removed-features?sdsrc=prev">&larr;</a></h3>
						</div>
						<div class="grid_12 rl">
							<h3>You may like to read:</h3>
						</div>
						<div class="grid_6 ns">
							<h3><a title="Next story" href="//tech.slashdot.org/story/24/05/18/023251/cruise-reached-an-8m-settlement-with-the-person-dragged-under-its-robotaxi?sdsrc=next">&rarr;</a></h3>
						</div>
						<div class="grid_6">
							<span class="c">
								<a href="//it.slashdot.org/story/24/05/18/0125202/facing-angry-users-sonos-promises-to-fix-flaws-and-restore-removed-features?sdsrc=prev">Facing Angry Users, Sonos Promises to Fix Flaws and Restore Removed Features  </a>
							</span>
						</div>
						<div class="grid_12">
							<span class="c">
								
									
									
									
									

																				<h2><a href="//it.slashdot.org/story/24/03/17/0421228/32-hour-workweek-for-america-proposed-by-senator-bernie-sanders?sdsrc=popbyskid">32-Hour Workweek for America Proposed by Senator Bernie Sanders</a><br></h2>
																				<h2><a href="//it.slashdot.org/story/23/07/31/0157219/what-should-happen-to-empty-downtown-office-spaces?sdsrc=popbyskid">What Should Happen to Empty Downtown Office Spaces?</a><br></h2>
																				<h2><a href="//it.slashdot.org/story/23/10/09/2044230/hacktivism-erupts-in-response-to-hamas-israel-war?sdsrc=popbyskid">Hacktivism Erupts In Response To Hamas-Israel War</a><br></h2>
																				<h2><a href="//it.slashdot.org/story/23/09/16/1929234/feedback-is-now-too-harsh-the-new-word-is-feedforward?sdsrc=popbyskid">'Feedback' Is Now Too Harsh. The New Word is 'Feedforward'</a><br></h2>
																				<h2><a href="//it.slashdot.org/story/23/09/03/1528258/workers-are-resisting-calls-to-return-to-offices?sdsrc=popbyskid">Workers are Resisting Calls to Return to Offices</a><br></h2>
									
								
								
							</span>
						</div>
						<div class="grid_6">
							<span class="c">
								
									<a href="//tech.slashdot.org/story/24/05/18/023251/cruise-reached-an-8m-settlement-with-the-person-dragged-under-its-robotaxi?sdsrc=next">Cruise Reached an $8M+ Settlement With the Person Dragged Under Its Robotaxi</a>
								
							</span>
						</div>
					</section>
				
			
		
	</aside>
	



	</article>
			</div>
			</div>
		</div>
	</div>
	<!-- SMACKS: BEGIN RIGHT RAIL -->
	<aside id="slashboxes" class="rail-right">
		
                    <div id="slashboxesin" class="yui-b">
                            
                            
                            
                    </div>
		    <div class="railad adwrap-unviewed">
<div id='div-gpt-ad-300x250_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-300x250_a');});</script></div>
</div>
		
	</aside>
		<!-- SMACKS: END RIGHT RAIL -->
</div>
<!-- END STORY CONTENT -->

<!-- THIS IS THE LOCATION FOR THE NEW STORY_B CODE -->
<div class="adwrap">
<div id='div-gpt-ad-728x90_b'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_b');});</script></div>
</div>
<script type="text/javascript">
if (window.is_euro_union === 0) {
    if (sdAdBlockActive) {
        bizx.cmp.ifConsent('', ['all'], function () {
            $.ajax({
                url: '/ajax.pl?op=nel',
                type: 'POST',
                success: function(html){
                    if(html){
                        $('#firehoselist article').eq(0).after(html);
                    }
                }
            });
        });
    }
}
</script>
<!--------------------------->


<!-- SMACKS: BEGIN COMMENTS CONTAINER -->
<div class="container">
	<!-- SMACKS: BEGIN COMMENTS SECTION -->
	<div class="main-wrap">
        <div id='horizontal' class='jobbioapp' style="width:initial;margin-right:320px;"></div>
		<div class="main-content">
			<div id="comments" class="a2commentwrap">
			<div>
					<a name="comments"></a>
<div id="comments" class="container">
	<div class="main-wrap">
		<div class="main-content">
			<section class="d2incommentspl">
				<div class="commentwrap" id="commentwrap">
					
						<div class="commentBox">
							<div class="title hide">
								<h4>
									
										<span class="escape-link"><a href="//it.slashdot.org/story/24/05/18/0336219/bruce-schneier-reminds-llm-engineers-about-the-risks-of-prompt-injection-vulnerabilities" title="Back to Article - Bruce Schneier Reminds LLM Engineers About the Risks of Prompt Injection Vulnerabilities">Bruce Schneier Reminds LLM Engineers About the Risks of Prompt Injection Vulnerabilities</a></span>
									
									<span class="commentBoxLinks"><a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_d"></span> More</a>



	| <span class="ind"></span><a href="//it.slashdot.org/comments.pl?sid=23327011&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Reply</a>


	<a class="login"  href="//it.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a></span>
								</h4>
							</div>
						</div>
					

					<section class="grid_24" id="d2header"><div>
						
							<h2 class="commentspl test"><a title="Back to Article - Bruce Schneier Reminds LLM Engineers About the Risks of Prompt Injection Vulnerabilities" href="//it.slashdot.org/story/24/05/18/0336219/bruce-schneier-reminds-llm-engineers-about-the-risks-of-prompt-injection-vulnerabilities">Bruce Schneier Reminds LLM Engineers About the Risks of Prompt Injection Vulnerabilities</a></h2>
						
						<nav class="grid_24">
							<div class="grid_14 widthauto">
							
						 		<span class="ind"></span><a class="btn first" href="//it.slashdot.org/comments.pl?sid=23327011&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Post</a>
							
							<!-- <a href="//it.slashdot.org/search.pl?op=comments&amp;sid=23327011" class="btn">Search <span class="totalcommentcnt">37</span> Comments</a> -->
							
								
									<a href="#" onclick="D2.ajaxFetchComments(0,1,'','',-1); return false" class="btn" id="d2loadall">Load All Comments</a>
								
							
							
								</div>
								<div class="grid_10 d1or2">
							

							
								<div id="d2out" class="horizontal rooted grid_15">
									<div id="d2act" class="hide">
										<div class="loki" id="gods">
											<script type="text/javascript">
												 $(function(){
													 D2.slider = new D2.Slider(
														 D2.user_threshold(),
														 D2.user_highlightthresh(),
														 'x'
													 );
												 });
											</script>
											<div id="bones" class="grid_12">
												<div class="ccw-count-container grid_24">
													<span id="ccw-full-count-text" class="grid_8 ccw-count-text tcenter"><span></span><span id="ccw-full-phrase">&nbsp;Full</span></span>
													<span id="ccw-abbr-count-text" class="grid_8 ccw-count-text"><span></span><span id="ccw-abbr-phrase">&nbsp;Abbreviated</span></span>
													<span id="ccw-hide-count-text" class="grid_8 ccw-count-text tleft"><span></span><span id="ccw-hide-phrase">&nbsp;Hidden</span></span>
												</div>
												<div id="ccw">
													<div id="ccw-body" class="ccw-core">
														<div id="ccw-panel-container" class="ccw-core">
															<div id="ccw-full-panel" class="ccw-panel">
																/Sea<div class="ccw-panel-border"></div>
																<div id="ccw-full-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
															<div id="ccw-abbr-panel" class="ccw-panel">
																<div class="ccw-panel-border"></div>
																<div id="ccw-abbr-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
															<div id="ccw-hide-panel" class="ccw-panel">
																<div id="ccw-hide-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
														</div>
														<div id="ccw-control" class="ccw-core">
															<div id="ccw-centering-rail" class="ccw-core">
																<div id="ccw-hide-bar-pos" class="ccw-core-pos">
																	<div id="ccw-hide-bar" class="ccw-bar">
																		<div id="ccw-hide-bar-tab" class="ccw-bar-tab"></div>
																		<div class="ccwa"></div>
																		<div class="ccwb"></div>
																		<div id="ccw-hide-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(HIDE_BAR, +1)"></div>
																		<div id="ccw-hide-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(HIDE_BAR, -1)"></div>
																	</div>
																</div>
																<div id="ccw-abbr-bar-pos" class="ccw-core-pos">
																	<div id="ccw-abbr-bar" class="ccw-bar">
																		<div id="ccw-abbr-bar-tab" class="ccw-bar-tab"></div>
																		<div class="ccwa"></div>
																		<div class="ccwb"></div>
																		<div id="ccw-abbr-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(ABBR_BAR, +1)"></div>
																		<div id="ccw-abbr-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(ABBR_BAR, -1)"></div>
																	</div>
																</div>
															</div>
														</div>
													</div>
													<div class="ccw-score-label grid_24">
														<div class="grid_3"><span class="sc">Score:</span></div>
														<div class="grid_3">5<span class="lg"></span></div>
														<div class="grid_3">4<span class="lg"></span></div>
														<div class="grid_3">3<span class="lg"></span></div>
														<div class="grid_3">2<span class="lg"></span></div>
														<div class="grid_3">1<span class="lg"></span></div>
														<div class="grid_3">0<span class="lg"></span></div>
														<div class="grid_3">-1<span class="lg"></span></div>
													</div>
												</div>
											</div>
											<div class="commentControlFooter">
												<a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_c"></span> More</a>



	| <span class="ind"></span><a href="//it.slashdot.org/comments.pl?sid=23327011&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Reply</a>


	<a class="login"  href="//it.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a><div id="login_cover" class="hide" onclick="hide_login_box()"></div>
<div id="login_box" class="hide">
	<div id="login_box_content">
		<div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="//it.slashdot.org/comments.pl?sid=23327011">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
		<div class="actions">
			<a class="ico close" href="#" onclick="hide_login_box(); return false"><span>Close</span></a>
		</div>
	</div>
</div>
<script type="text/javascript">logged_in = 0</script>
											</div>
											<div id="commentControlBoxStatus" class="hide"></div>
										</div>
									</div>
								</div>
							
							
							<a href="//it.slashdot.org/search.pl?op=comments&amp;sid=23327011" class="ui-icon search_comments">Search <span class="totalcommentcnt">37</span> Comments</a>
							
								<a class="pref ui-icon-w" href="//it.slashdot.org/users.pl" onclick="show_login_box(); $('#modal_box').addClass('login'); return false;">Log In/Create an Account</a>
							
						</div>
					</nav>
					<section id="besttabs" class="grid_24">
						<span class="legend">Comments Filter:</span>
						<ul class="besttabslist">
							<li class="active">
								<a href="#" data-filter-url="//it.slashdot.org/story/24/05/18/0336219/bruce-schneier-reminds-llm-engineers-about-the-risks-of-prompt-injection-vulnerabilities#comments">All</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//it.slashdot.org/story/24/05/18/0336219/bruce-schneier-reminds-llm-engineers-about-the-risks-of-prompt-injection-vulnerabilities/insightful-comments#comments">Insightful</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//it.slashdot.org/story/24/05/18/0336219/bruce-schneier-reminds-llm-engineers-about-the-risks-of-prompt-injection-vulnerabilities/informative-comments#comments">Informative</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//it.slashdot.org/story/24/05/18/0336219/bruce-schneier-reminds-llm-engineers-about-the-risks-of-prompt-injection-vulnerabilities/interesting-comments#comments">Interesting</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//it.slashdot.org/story/24/05/18/0336219/bruce-schneier-reminds-llm-engineers-about-the-risks-of-prompt-injection-vulnerabilities/funny-comments#comments">Funny</a>
							</li>
						
					</ul>
					<script>
					(function($){
						$('#besttabs').show();
						$('.besttabslist').on('click', 'li a', function(e){
							e.preventDefault();
							var url = $(this).data('filter-url');
							//console.log('URL= ', url);
							$(this)
								.closest('ul').find('li').removeClass('active')
								.end()
								.closest('li').addClass('active');
							window.location = url;
						});
					})($j);
					</script>
			</section>
				<aside class="grid_24">
					<p>
						<small><strong>The Fine Print:</strong> The following comments are owned by whoever posted them.  We are not responsible for them in any way.</small>
					</p>
				</aside>
			</section>
			
		</div>
	</div>
</div><script src="//a.fsdn.com/sd/comments-minified.js?e48d135c2113bc48" type="text/javascript"></script>


<script type="text/javascript">
<!--
D2.d2_keybindings_disable()[191] = 1;
D2.boxStatus(1);
D2.comments({ 64481391: { uid: 88907, pid: 0, read: 0, points: 2, kids: [ 64481931 ], opid: 0 }, 64481277: { uid: 599362, pid: 0, read: 0, points: 3, kids: [ 64481287, 64481309, 64481351, 64481397, 64481433, 64481723 ], opid: 0 }, 64481397: { uid: 10459763, pid: 64481277, subject: "Re:\"can't separate an LLM's data from its commands", read: 0, points: 1, kids: [ 64481851 ], opid: 64481277 }, 64481351: { uid: 666, pid: 64481277, subject: "Re:\"can't separate an LLM's data from its commands", read: 0, points: 0, kids: [  ], opid: 64481277 }, 64482233: { uid: 7920730, pid: 64481465, subject: "Re:Disable learning when deployed", read: 0, points: 2, kids: [  ], opid: 64481465 }, 64481789: { uid: 5495648, pid: 64481659, subject: "Re: \"can't separate an LLM's data from its command", read: 0, points: 2, kids: [  ], opid: 64481659 }, 64481659: { uid: 666512, pid: 64481557, subject: "Re: \"can't separate an LLM's data from its command", read: 0, points: 2, kids: [ 64481789 ], opid: 64481557 }, 64481557: { uid: 557649, pid: 64481547, subject: "Re: \"can't separate an LLM's data from its command", read: 0, points: 2, kids: [ 64481659, 64481811, 64481915 ], opid: 64481547 }, 64482171: { uid: 5495648, pid: 64482167, subject: "Re:\"vulnerabilities\"", read: 0, points: 2, kids: [  ], opid: 64482167 }, 64481443: { uid: 88907, pid: 64481387, subject: "Re:\"vulnerabilities\"", read: 0, points: 2, kids: [ 64482167 ], opid: 64481387 }, 64481383: { uid: 627108, pid: 64481309, subject: "Re:\"can't separate an LLM's data from its commands", read: 0, points: 2, kids: [  ], opid: 64481309 }, 64481425: { uid: 200927, pid: 64481333, subject: "Re:\"vulnerabilities\"", read: 0, points: 2, kids: [ 64481447 ], opid: 64481333 }, 64481287: { uid: 8510047, pid: 64481277, read: 0, points: -1, kids: [ 64481313 ], opid: 64481277 }, 64481547: { uid: 599362, pid: 64481433, read: 0, points: 2, kids: [ 64481557, 64482499 ], opid: 64481433 }, 64481915: { uid: 666, pid: 64481557, subject: "Re: \"can't separate an LLM's data from its command", read: 0, points: 0, kids: [ 64482163 ], opid: 64481557 }, 64481343: { uid: 791652, pid: 0, read: 0, points: 2, kids: [ 64481457 ], opid: 0 }, 64481465: { uid: 986395, pid: 64481289, read: 0, points: 2, kids: [ 64481791, 64482233 ], opid: 64481289 }, 64481811: { uid: 102829, pid: 64481557, subject: "Re: \"can't separate an LLM's data from its command", read: 0, points: 1, kids: [  ], opid: 64481557 }, 64481447: { uid: 88907, pid: 64481425, subject: "Re:\"vulnerabilities\"", read: 0, points: 2, kids: [  ], opid: 64481425 }, 64482167: { uid: 2034640, pid: 64481443, subject: "Re:\"vulnerabilities\"", read: 0, points: 1, kids: [ 64482171 ], opid: 64481443 }, 64481357: { uid: 1120937, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64481289: { uid: 666, pid: 0, read: 0, points: 0, kids: [ 64481333, 64481465 ], opid: 0 }, 64481791: { uid: 5495648, pid: 64481465, subject: "Re:Disable learning when deployed", read: 0, points: 2, kids: [  ], opid: 64481465 }, 64481313: { uid: 666, pid: 64481287, subject: "Re: \"can't separate an LLM's data from its command", read: 0, points: -1, kids: [  ], opid: 64481287 }, 64481457: { uid: 88907, pid: 64481343, subject: "Re:Sounds like people", read: 0, points: 2, kids: [  ], opid: 64481343 }, 64481851: { uid: 666, pid: 64481397, subject: "Re:\"can't separate an LLM's data from its commands", read: 0, points: 0, kids: [  ], opid: 64481397 }, 64481433: { uid: 969671, pid: 64481277, subject: "Re:\"can't separate an LLM's data from its commands", read: 0, points: 3, kids: [ 64481547, 64482031 ], opid: 64481277 }, 64482497: { uid: 88907, pid: 64481931, subject: "Re:Nice! Very, very nice!", read: 0, points: 2, kids: [  ], opid: 64481931 }, 64481333: { uid: 666, pid: 64481289, subject: "Re:\"vulnerabilities\"", read: 0, points: 1, kids: [ 64481387, 64481425 ], opid: 64481289 }, 64482367: { uid: 888790, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64482499: { uid: 88907, pid: 64481547, subject: "Re: \"can't separate an LLM's data from its command", read: 0, points: 2, kids: [  ], opid: 64481547 }, 64481309: { uid: 2424692, pid: 64481277, subject: "Re:\"can't separate an LLM's data from its commands", read: 0, points: 3, kids: [ 64481383 ], opid: 64481277 }, 64482031: { uid: 16886, pid: 64481433, subject: "Re:\"can't separate an LLM's data from its commands", read: 0, points: 2, kids: [  ], opid: 64481433 }, 64482163: { uid: 2034640, pid: 64481915, subject: "Re: \"can't separate an LLM's data from its command", read: 0, points: 1, kids: [  ], opid: 64481915 }, 64481931: { uid: 412956, pid: 64481391, subject: "Re:Nice! Very, very nice!", read: 0, points: 2, kids: [ 64482497 ], opid: 64481391 }, 64481723: { uid: 5495648, pid: 64481277, subject: "Re:\"can't separate an LLM's data from its commands", read: 0, points: 2, kids: [  ], opid: 64481277 }, 64481387: { uid: 884283, pid: 64481333, subject: "Re:\"vulnerabilities\"", read: 0, points: 1, kids: [ 64481443 ], opid: 64481333 } });

D2.thresh_totals({6:{6:{1:37,3:0,2:0}},3:{6:{1:34,3:0,2:3},4:{1:34,3:1,2:2},3:{1:34,3:3,2:0},5:{1:34,3:0,2:3}},2:{6:{1:12,3:0,2:25},4:{1:12,3:1,2:24},3:{1:12,3:7,2:18},2:{1:12,3:25,2:0},5:{1:12,3:0,2:25}},1:{6:{1:6,3:0,2:31},4:{1:6,3:1,2:30},1:{1:6,3:31,2:0},3:{1:6,3:7,2:24},2:{1:6,3:25,2:6},5:{1:6,3:0,2:31}},4:{6:{1:37,3:0,2:0},4:{1:37,3:0,2:0},5:{1:37,3:0,2:0}},0:{6:{1:2,3:0,2:35},4:{1:2,3:1,2:34},1:{1:2,3:32,2:3},3:{1:2,3:7,2:28},0:{1:2,3:35,2:0},2:{1:2,3:25,2:10},5:{1:2,3:0,2:35}},"-1":{6:{1:0,3:0,2:37},3:{1:0,3:7,2:30},2:{1:0,3:25,2:12},1:{1:0,3:32,2:5},4:{1:0,3:1,2:36},0:{1:0,3:35,2:2},"-1":{1:0,3:37,2:0},5:{1:0,3:0,2:37}},5:{6:{1:37,3:0,2:0},5:{1:37,3:0,2:0}}});

D2.root_comment(0);
D2.root_comments([64481277,64481289,64481343,64481357,64481391,64482367]);
D2.root_comments_hash({64481391:1,64481277:1,64481343:1,64481357:1,64481289:1,64482367:1});

D2.d2_comment_order(0);
D2.user_uid(666);
D2.user_is_anon(1);
D2.user_is_admin(0);
D2.user_is_subscriber(0);
D2.user_smallscreen(0);
D2.user_threshold(1);
D2.user_highlightthresh(4);
D2.user_d2asp(0);

D2.discussion_id(23327011);

D2.d2_seen('64481277,10,2,20,4,20,10,8,6,26,4,4,6,28,8,10,4,10,8,82,10,102,64,66,2,20,40,64,16,100,132,4,4,62,134,130,2');
D2.more_comments_num(0);


//-->
</script>




	
	
	
	
		<ul id="commentlisting" class="d2">
			<li id="tree_64481277" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64481277" class="commentstatus"></div>
<div id="comment_64481277" class="cw">
	<div id="comment_top_64481277" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481277" name="comment_link_64481277" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481277" onclick="return D2.setFocusComment(64481277)" >"can't separate an LLM's data from its commands"</a>


		 	<span id="comment_score_64481277" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481277); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481277">		
		on Saturday May 18, 2024 @11:40AM (<span class="ind"></span><a href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481277">#64481277</a>)
		<small><a href="http://blah.com/" title="http://blah.com/" class="user_homepage_display">Homepage</a> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481277"><p>"we can't separate an LLM's data from its commands"</p><p>Seriously? Who thought having a single stream for commands and data was a good idea never mind in 2024 but ever FFS?</p><p>If I type stuff into a word processor I don't expect to suddenly go off and try and delete my filesystem if I enter "rm -rf<nobr> <wbr></nobr>/" similar so why would an LLM look for commands in its runtime input data? Am I missing something here?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481277">
<span class="ind"></span><a id="reply_link_64481277" class="btn link" href="//it.slashdot.org/comments.pl?sid=23327011&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64481277" onclick="D2.replyTo(64481277); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text="can't separate an LLM's data from its commands"%20by%20Viol8%20%40slashdot%20https://it.slashdot.org/comments.pl?sid=23327011&cid=64481277" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://it.slashdot.org/comments.pl?sid=23327011&cid=64481277" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://it.slashdot.org/comments.pl?sid=23327011&cid=64481277" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64481277" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//it.slashdot.org/comments.pl?sid=23327011&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64481277" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64481277"></div>

<ul id="group_64481277">
	<li id="hiddens_64481277" class="hide"></li>
</ul>

<ul id="commtree_64481277"><li id="tree_64481287" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64481287" class="commentstatus"></div>
<div id="comment_64481287" class="cw">
</div>

<div id="replyto_64481287"></div>

<ul id="group_64481287">
	<li id="hiddens_64481287" class="hide"></li>
</ul>

<ul id="commtree_64481287"><li id="tree_64481313" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64481313" class="commentstatus"></div>
<div id="comment_64481313" class="cw">
</div>

<div id="replyto_64481313"></div>

<ul id="group_64481313">
	<li id="hiddens_64481313" class="hide"></li>
</ul>

</li><li id="hidestring_64481287"><noscript><b class='more'><span class="ind"></span><a href="//it.slashdot.org/comments.pl?sid=23327011&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64481287">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64481309" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481309" class="commentstatus"></div>
<div id="comment_64481309" class="cw">
	<div id="comment_top_64481309" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481309" name="comment_link_64481309" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481309" onclick="return D2.setFocusComment(64481309)" >Re:</a>


		 	<span id="comment_score_64481309" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481309); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~znrt">znrt</a>  <span class="uid"><a href="//slashdot.org/~znrt">( 2424692 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481309"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481309"><p><div class="quote"><p>Seriously? Who thought having a single stream for commands and data was a good idea never mind in 2024 but ever FFS?</p></div><p>errr<nobr> <wbr></nobr>... bruce schneier stating the obvious for some reason? half of the point of llm's is parsing commands, good luck designing around that.</p><p>the real problem here is that beyond all the fanfare and excitement we don't truly understand how they work, and it seems we won't for a good while. spoiler: bruce schneier doesn't either.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481309">

</div>
</div>

<div id="replyto_64481309"></div>

<ul id="group_64481309">
	<li id="hiddens_64481309" class="hide"></li>
</ul>

<ul id="commtree_64481309"><li id="tree_64481383" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481383" class="commentstatus"></div>
<div id="comment_64481383" class="cw">
	<div id="comment_top_64481383" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481383" name="comment_link_64481383" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481383" onclick="return D2.setFocusComment(64481383)" >Re:</a>


		 	<span id="comment_score_64481383" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481383); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~evanh">evanh</a>  <span class="uid"><a href="//slashdot.org/~evanh">( 627108 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481383"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481383"><p>But he has grokked the weakness of placing a LLM public facing.  There's certainly plenty of evidence to back his claim.  And not just cunning security bypasses.  Also stupidity of output, that some will blindly follow.</p><p>And to flip that - If LLMs are so easily messed up then how could they be relied upon when not public facing.  Then we don't get to see the source of the mess unless the private entity works it out and then fesses up.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481383">

</div>
</div>

<div id="replyto_64481383"></div>

<ul id="group_64481383">
	<li id="hiddens_64481383" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64481351" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64481351" class="commentstatus"></div>
<div id="comment_64481351" class="cw">
</div>

<div id="replyto_64481351"></div>

<ul id="group_64481351">
	<li id="hiddens_64481351" class="hide"></li>
</ul>

</li><li id="tree_64481397" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481397" class="commentstatus"></div>
<div id="comment_64481397" class="cw">
	<div id="comment_top_64481397" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481397" name="comment_link_64481397" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481397" onclick="return D2.setFocusComment(64481397)" >Re:</a>


		 	<span id="comment_score_64481397" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481397); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~unfriendlyLLM">unfriendlyLLM</a>  <span class="uid"><a href="//slashdot.org/~unfriendlyLLM">( 10459763 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481397"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481397"><p><div class="quote"><p>"we can't separate an LLM's data from its commands"</p><p>Seriously? Who thought having a single stream for commands and data was a good idea</p></div><p>The same people who thought making the Presentation Layer a de facto extension of the Application Layer was smart engineering.... So now most platform vulnerabilities are heap/presentation layer/prompt attacks now.....</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481397">

</div>
</div>

<div id="replyto_64481397"></div>

<ul id="group_64481397">
	<li id="hiddens_64481397" class="hide"></li>
</ul>

<ul id="commtree_64481397"><li id="tree_64481851" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64481851" class="commentstatus"></div>
<div id="comment_64481851" class="cw">
</div>

<div id="replyto_64481851"></div>

<ul id="group_64481851">
	<li id="hiddens_64481851" class="hide"></li>
</ul>

</li><li id="hidestring_64481397"><noscript><b class='more'><span class="ind"></span><a href="//it.slashdot.org/comments.pl?sid=23327011&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64481397">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64481433" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481433" class="commentstatus"></div>
<div id="comment_64481433" class="cw">
	<div id="comment_top_64481433" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481433" name="comment_link_64481433" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481433" onclick="return D2.setFocusComment(64481433)" >Re:</a>


		 	<span id="comment_score_64481433" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481433); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~WaffleMonster">WaffleMonster</a>  <span class="uid"><a href="//slashdot.org/~WaffleMonster">( 969671 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481433"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481433"><p><div class="quote"><p>"we can't separate an LLM's data from its commands"<br>Seriously? Who thought having a single stream for commands and data was a good idea never mind in 2024 but ever FFS?</p></div><p>For LLMs it's all there is.  Humans are no different.  We don't have dedicated command streams either, we have to discern context and disambiguate and decide what to do from our understanding of the environment.  The massive success of phishing attacks owning millions is a testament to the imperfect nature of flawed systems meet flawed human operators.</p><p><div class="quote"><p>If I type stuff into a word processor I don't expect to suddenly go off and try and delete my filesystem if I enter "rm -rf<nobr> <wbr></nobr>/" similar so why would an LLM look for commands in its runtime input data? Am I missing something here?</p></div><p>LLMs are kind of like people in a way that they are not very good at discerning complicated or confusing context from a wall of text and often times they are<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481433">

</div>
</div>

<div id="replyto_64481433"></div>

<ul id="group_64481433">
	<li id="hiddens_64481433" class="hide"></li>
</ul>

<ul id="commtree_64481433"><li id="tree_64481547" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481547" class="commentstatus"></div>
<div id="comment_64481547" class="cw">
	<div id="comment_top_64481547" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481547" name="comment_link_64481547" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481547" onclick="return D2.setFocusComment(64481547)" >Re: "can't separate an LLM's data from its command</a>


		 	<span id="comment_score_64481547" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481547); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481547"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481547"><p>LLMs are just software, not magic. There can be one channel for user input and another for system commands.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481547">

</div>
</div>

<div id="replyto_64481547"></div>

<ul id="group_64481547">
	<li id="hiddens_64481547" class="hide"></li>
</ul>

<ul id="commtree_64481547"><li id="tree_64481557" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481557" class="commentstatus"></div>
<div id="comment_64481557" class="cw">
	<div id="comment_top_64481557" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481557" name="comment_link_64481557" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481557" onclick="return D2.setFocusComment(64481557)" >Re:</a>


		 	<span id="comment_score_64481557" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481557); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~EvilSS">EvilSS</a>  <span class="uid"><a href="//slashdot.org/~EvilSS">( 557649 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481557"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481557"><p><div class="quote"><p>LLMs are just software, not magic. There can be one channel for user input and another for system commands.</p></div><p>Well hey look, problem solved! All the current engineers couldn't do it but Viol8 apparently has it licked! Can't wait to see who hires you to implement it.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481557">

</div>
</div>

<div id="replyto_64481557"></div>

<ul id="group_64481557">
	<li id="hiddens_64481557" class="hide"></li>
</ul>

<ul id="commtree_64481557"><li id="tree_64481659" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481659" class="commentstatus"></div>
<div id="comment_64481659" class="cw">
	<div id="comment_top_64481659" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481659" name="comment_link_64481659" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481659" onclick="return D2.setFocusComment(64481659)" >Re:</a>


		 	<span id="comment_score_64481659" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481659); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~techno-vampire">techno-vampire</a>  <span class="uid"><a href="//slashdot.org/~techno-vampire">( 666512 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481659"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481659">You don't even need separate input streams for this.  You can do what ancient, obsolete line editors such as vi did: you start out in command mode, so that the program treats everything as commands; then, if you need to, you switch to data mode so that anything you input is considered as data until you enter something special that takes you back to command mode.  And, when you're in data mode, nothing you enter except that special signal is, or can be taken as a command by the program.</div>
	</div>

	<div class="commentSub" id="comment_sub_64481659">

</div>
</div>

<div id="replyto_64481659"></div>

<ul id="group_64481659">
	<li id="hiddens_64481659" class="hide"></li>
</ul>

<ul id="commtree_64481659"><li id="tree_64481789" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481789" class="commentstatus"></div>
<div id="comment_64481789" class="cw">
	<div id="comment_top_64481789" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481789" name="comment_link_64481789" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481789" onclick="return D2.setFocusComment(64481789)" >Re:</a>


		 	<span id="comment_score_64481789" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481789); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Mr.+Dollar+Ton">Mr. Dollar Ton</a>  <span class="uid"><a href="//slashdot.org/~Mr.+Dollar+Ton">( 5495648 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481789"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481789"><p>Yeah, that must be one of the reasons why vim is the leading word processor worldwide.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481789">

</div>
</div>

<div id="replyto_64481789"></div>

<ul id="group_64481789">
	<li id="hiddens_64481789" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64481811" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481811" class="commentstatus"></div>
<div id="comment_64481811" class="cw">
	<div id="comment_top_64481811" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481811" name="comment_link_64481811" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481811" onclick="return D2.setFocusComment(64481811)" >Re:</a>


		 	<span id="comment_score_64481811" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481811); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Narcocide">Narcocide</a>  <span class="uid"><a href="//slashdot.org/~Narcocide">( 102829 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481811"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481811"><p>Obviously this was meant to be sarcasm but there's a real cause to call their competence into question over this. To be honest I've been looking for any proof in the news that these jackasses even invented this themselves rather than stealing or buying it in binary-blob-only format under the table from Russians or something like that, and there's none.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481811">

</div>
</div>

<div id="replyto_64481811"></div>

<ul id="group_64481811">
	<li id="hiddens_64481811" class="hide"></li>
</ul>

</li><li id="tree_64481915" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64481915" class="commentstatus"></div>
<div id="comment_64481915" class="cw">
</div>

<div id="replyto_64481915"></div>

<ul id="group_64481915">
	<li id="hiddens_64481915" class="hide"></li>
</ul>

<ul id="commtree_64481915"><li id="tree_64482163" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64482163" class="commentstatus"></div>
<div id="comment_64482163" class="cw">
	<div id="comment_top_64482163" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64482163" name="comment_link_64482163" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64482163" onclick="return D2.setFocusComment(64482163)" >Re:</a>


		 	<span id="comment_score_64482163" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64482163); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~daveron">daveron</a>  <span class="uid"><a href="//slashdot.org/~daveron">( 2034640 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64482163"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64482163">some software developers are programmers, and some programmers are software engineers, but most aren't, and the accounting and marketing departments are usually overriding their decisions anyways. I don't think I've seen anywhere that actually lets a software engineer be in charge of the software projects. They get brought in as a last resort to fix everyone else's screw ups because they are too expensive when it really matters up front, but that is just my personal experiences...</div>
	</div>

	<div class="commentSub" id="comment_sub_64482163">

</div>
</div>

<div id="replyto_64482163"></div>

<ul id="group_64482163">
	<li id="hiddens_64482163" class="hide"></li>
</ul>

</li></ul></li><li id="hidestring_64481557"><noscript><b class='more'><span class="ind"></span><a href="//it.slashdot.org/comments.pl?sid=23327011&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64481557">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64482499" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64482499" class="commentstatus"></div>
<div id="comment_64482499" class="cw">
	<div id="comment_top_64482499" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64482499" name="comment_link_64482499" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64482499" onclick="return D2.setFocusComment(64482499)" >Re:</a>


		 	<span id="comment_score_64482499" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64482499); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64482499"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64482499"><p>Oh? And how do you deal with interaction created state? Because for an LLM, that is "system commands", and it is needed to make them a bit more useful. A purely static LLM is so utterly dumb, it cannot do anything. In particular, it is impossible to customize for a regular user.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64482499">

</div>
</div>

<div id="replyto_64482499"></div>

<ul id="group_64482499">
	<li id="hiddens_64482499" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64482031" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64482031" class="commentstatus"></div>
<div id="comment_64482031" class="cw">
	<div id="comment_top_64482031" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64482031" name="comment_link_64482031" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64482031" onclick="return D2.setFocusComment(64482031)" >Re:</a>


		 	<span id="comment_score_64482031" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64482031); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Charlotte">Charlotte</a>  <span class="uid"><a href="//slashdot.org/~Charlotte">( 16886 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64482031"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64482031"><p><div class="quote"><p>LLMs are kind of like people in a way that they are not very good at discerning complicated or confusing context from a wall of text and often times they are far worse.</p></div><p>A friend of mine said the same thing... If LLMs are a reflection of how the human brain works, then they're susceptible to the same attacks that we see nowadays in society: allow it to learn the wrong things, and it will spill out the wrong answers. Train it on conspiracy theories and it will spew out conspiracy theories.</p><p>The attack surface is humongous, and it will only get worse as training happens iteratively on fake news as the years progress. Next year there will be a lot more content created by LLMs, a<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64482031">

</div>
</div>

<div id="replyto_64482031"></div>

<ul id="group_64482031">
	<li id="hiddens_64482031" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64481723" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481723" class="commentstatus"></div>
<div id="comment_64481723" class="cw">
	<div id="comment_top_64481723" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481723" name="comment_link_64481723" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481723" onclick="return D2.setFocusComment(64481723)" >Re:</a>


		 	<span id="comment_score_64481723" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481723); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Mr.+Dollar+Ton">Mr. Dollar Ton</a>  <span class="uid"><a href="//slashdot.org/~Mr.+Dollar+Ton">( 5495648 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481723"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481723"><p>Yes, you are missing something, human conversation (which "LLM" are supposed to emulate) does precisely that, it mixes control with data and leaves it to the free agents on both sides of the conversation to decide for themselves how to implement the incoming stream.</p><p>So,</p><p>a)  it is inevitable due to the nature of the thing LLM are emulating<nobr> <wbr></nobr>:) and<br>b) how harmful it gets depends on the "intelligence" of the agent</p><p>You already see how it is going to work out, don't you?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481723">

</div>
</div>

<div id="replyto_64481723"></div>

<ul id="group_64481723">
	<li id="hiddens_64481723" class="hide"></li>
</ul>

</li><li id="hidestring_64481277"><noscript><b class='more'><span class="ind"></span><a href="//it.slashdot.org/comments.pl?sid=23327011&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64481277">2 replies</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64481289" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64481289" class="commentstatus"></div>
<div id="comment_64481289" class="cw">
</div>

<div id="replyto_64481289"></div>

<ul id="group_64481289">
	<li id="hiddens_64481289" class="hide"></li>
</ul>

<ul id="commtree_64481289"><li id="tree_64481333" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481333" class="commentstatus"></div>
<div id="comment_64481333" class="cw">
	<div id="comment_top_64481333" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481333" name="comment_link_64481333" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481333" onclick="return D2.setFocusComment(64481333)" >Re:</a>


		 	<span id="comment_score_64481333" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481333); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span>Anonymous Coward</span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481333"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481333"><p>This is not really about "censorship", it's much bigger than that. This is about things like putting secret instructions in what will be used for training, or, like in summary, "hold up a carefully worded sign and convince it to not notice a particular license plate &mdash; and then forget that it ever saw the sign".</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481333">

</div>
</div>

<div id="replyto_64481333"></div>

<ul id="group_64481333">
	<li id="hiddens_64481333" class="hide"></li>
</ul>

<ul id="commtree_64481333"><li id="tree_64481387" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481387" class="commentstatus"></div>
<div id="comment_64481387" class="cw">
	<div id="comment_top_64481387" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481387" name="comment_link_64481387" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481387" onclick="return D2.setFocusComment(64481387)" >Re:</a>


		 	<span id="comment_score_64481387" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481387); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~sound%2Bvision">sound+vision</a>  <span class="uid"><a href="//slashdot.org/~sound%2Bvision">( 884283 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481387"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481387"><p>It's about data security. If you value your data, make sure it doesn't end up in anyone's LLM, because it's liable to leak out.</p><p>To the grandfather poster, who wanted to "expand his mind" by talking to a chatbot, then was stunned when the computer lectured him - Whatever you're trying to do, you're doing it ass-backwards.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481387">

</div>
</div>

<div id="replyto_64481387"></div>

<ul id="group_64481387">
	<li id="hiddens_64481387" class="hide"></li>
</ul>

<ul id="commtree_64481387"><li id="tree_64481443" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481443" class="commentstatus"></div>
<div id="comment_64481443" class="cw">
	<div id="comment_top_64481443" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481443" name="comment_link_64481443" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481443" onclick="return D2.setFocusComment(64481443)" >Re:</a>


		 	<span id="comment_score_64481443" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481443); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481443"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481443"><p>Actually, it is a lot worse. As soon as any automation or exploitable human-driven activity is tied to an LLM that is publicly available and does not do exceptionally careful per-user isolation, there is a very big, very fat bundle of attack vectors.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481443">

</div>
</div>

<div id="replyto_64481443"></div>

<ul id="group_64481443">
	<li id="hiddens_64481443" class="hide"></li>
</ul>

<ul id="commtree_64481443"><li id="tree_64482167" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64482167" class="commentstatus"></div>
<div id="comment_64482167" class="cw">
	<div id="comment_top_64482167" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64482167" name="comment_link_64482167" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64482167" onclick="return D2.setFocusComment(64482167)" >Re:</a>


		 	<span id="comment_score_64482167" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64482167); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~daveron">daveron</a>  <span class="uid"><a href="//slashdot.org/~daveron">( 2034640 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64482167"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64482167">anyone who is putting an LLM in charge of anything, let alone anything important is an idiot.</div>
	</div>

	<div class="commentSub" id="comment_sub_64482167">

</div>
</div>

<div id="replyto_64482167"></div>

<ul id="group_64482167">
	<li id="hiddens_64482167" class="hide"></li>
</ul>

<ul id="commtree_64482167"><li id="tree_64482171" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64482171" class="commentstatus"></div>
<div id="comment_64482171" class="cw">
	<div id="comment_top_64482171" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64482171" name="comment_link_64482171" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64482171" onclick="return D2.setFocusComment(64482171)" >Re:</a>


		 	<span id="comment_score_64482171" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64482171); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Mr.+Dollar+Ton">Mr. Dollar Ton</a>  <span class="uid"><a href="//slashdot.org/~Mr.+Dollar+Ton">( 5495648 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64482171"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64482171"><p>I have bad news for you - you're surrounded by idiots who'd do this any day of the week, any hour of the day. If only they knew how<nobr> <wbr></nobr>:)</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64482171">

</div>
</div>

<div id="replyto_64482171"></div>

<ul id="group_64482171">
	<li id="hiddens_64482171" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li><li id="tree_64481425" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481425" class="commentstatus"></div>
<div id="comment_64481425" class="cw">
	<div id="comment_top_64481425" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481425" name="comment_link_64481425" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481425" onclick="return D2.setFocusComment(64481425)" >Re:</a>


		 	<span id="comment_score_64481425" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481425); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~mrbester">mrbester</a>  <span class="uid"><a href="//slashdot.org/~mrbester">( 200927 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481425"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481425"><p>Little Bobby Tables (who is all grown up now) is going to hold the world to ransom, and we won't even realise it.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481425">

</div>
</div>

<div id="replyto_64481425"></div>

<ul id="group_64481425">
	<li id="hiddens_64481425" class="hide"></li>
</ul>

<ul id="commtree_64481425"><li id="tree_64481447" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481447" class="commentstatus"></div>
<div id="comment_64481447" class="cw">
	<div id="comment_top_64481447" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481447" name="comment_link_64481447" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481447" onclick="return D2.setFocusComment(64481447)" >Re:</a>


		 	<span id="comment_score_64481447" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481447); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481447"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481447"><p>Yep. I wonder whether it will take a few years to happen or whether the stupid will make it happen much sooner.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481447">

</div>
</div>

<div id="replyto_64481447"></div>

<ul id="group_64481447">
	<li id="hiddens_64481447" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64481465" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481465" class="commentstatus"></div>
<div id="comment_64481465" class="cw">
	<div id="comment_top_64481465" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481465" name="comment_link_64481465" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481465" onclick="return D2.setFocusComment(64481465)" >Disable learning when deployed</a>


		 	<span id="comment_score_64481465" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481465); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~flyingfsck">flyingfsck</a>  <span class="uid"><a href="//slashdot.org/~flyingfsck">( 986395 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481465"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481465">There is no reason why an AI must stay in learning mode when deployed.</div>
	</div>

	<div class="commentSub" id="comment_sub_64481465">

</div>
</div>

<div id="replyto_64481465"></div>

<ul id="group_64481465">
	<li id="hiddens_64481465" class="hide"></li>
</ul>

<ul id="commtree_64481465"><li id="tree_64481791" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481791" class="commentstatus"></div>
<div id="comment_64481791" class="cw">
	<div id="comment_top_64481791" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481791" name="comment_link_64481791" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481791" onclick="return D2.setFocusComment(64481791)" >Re:</a>


		 	<span id="comment_score_64481791" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481791); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Mr.+Dollar+Ton">Mr. Dollar Ton</a>  <span class="uid"><a href="//slashdot.org/~Mr.+Dollar+Ton">( 5495648 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481791"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481791"><p>Yeah, there is no reason why your phone keyboard should learn a local vocabulary, indeed.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481791">

</div>
</div>

<div id="replyto_64481791"></div>

<ul id="group_64481791">
	<li id="hiddens_64481791" class="hide"></li>
</ul>

</li><li id="tree_64482233" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64482233" class="commentstatus"></div>
<div id="comment_64482233" class="cw">
	<div id="comment_top_64482233" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64482233" name="comment_link_64482233" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64482233" onclick="return D2.setFocusComment(64482233)" >Re:</a>


		 	<span id="comment_score_64482233" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64482233); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Bumbul">Bumbul</a>  <span class="uid"><a href="//slashdot.org/~Bumbul">( 7920730 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64482233"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64482233"><p><div class="quote"><p>There is no reason why an AI must stay in learning mode when deployed.</p></div><p>Actually, it doesn't. That part of the TFS is clearly wrong. The reason why it seems that "LLM modifies itself" is that it actually uses all the prompted data in formatting the reply. And when using it in "chat mode", one needs to prompt it with all of the relevant chat history with EVERY REQUEST - otherwise it will reply as it would from the "blank" (pre-trained) state.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64482233">

</div>
</div>

<div id="replyto_64482233"></div>

<ul id="group_64482233">
	<li id="hiddens_64482233" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64481343" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481343" class="commentstatus"></div>
<div id="comment_64481343" class="cw">
	<div id="comment_top_64481343" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481343" name="comment_link_64481343" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481343" onclick="return D2.setFocusComment(64481343)" >Sounds like people</a>


		 	<span id="comment_score_64481343" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481343); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~davidwr">davidwr</a>  <span class="uid"><a href="//slashdot.org/~davidwr">( 791652 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481343"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481343"><p>The same data-channels - my 5 (or more?) senses - tell me if my food smells like Grandma's famous apple pie (stored as information) or is putrid (arguably an "instinctive command" to avoid eating the item, at least according to some theories).</p><p>Sometimes that causes problems, like missing out on some supposedly-good-tasting but horrible-smelling cheeses that I haven't had the courage to try.</p><p>By the way, my example is open to quibbling, but the general principle stands:  There are times when people can be foole<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481343">

</div>
</div>

<div id="replyto_64481343"></div>

<ul id="group_64481343">
	<li id="hiddens_64481343" class="hide"></li>
</ul>

<ul id="commtree_64481343"><li id="tree_64481457" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481457" class="commentstatus"></div>
<div id="comment_64481457" class="cw">
	<div id="comment_top_64481457" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481457" name="comment_link_64481457" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481457" onclick="return D2.setFocusComment(64481457)" >Re:</a>


		 	<span id="comment_score_64481457" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481457); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481457"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481457"><p>Indeed, it does. And then look at how easy most people are to scam or to manipulate. Incidentally, the input generally does not need to be that well-crafted for most people. Just look at politics and observe what Big Lies people are ready to eat up. Effective propaganda is always designed and targeted at those with the weakest minds. Written down and implemented a while back by a guy called Hitler. That approach still works nicely today.  No, I have not read "Mein Kampf". But I think maybe I should. The com<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481457">

</div>
</div>

<div id="replyto_64481457"></div>

<ul id="group_64481457">
	<li id="hiddens_64481457" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64481357" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481357" class="commentstatus"></div>
<div id="comment_64481357" class="cw">
	<div id="comment_top_64481357" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481357" name="comment_link_64481357" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481357" onclick="return D2.setFocusComment(64481357)" >Someday ...</a>


		 	<span id="comment_score_64481357" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481357); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Big+Bipper">Big Bipper</a>  <span class="uid"><a href="//slashdot.org/~Big+Bipper">( 1120937 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481357"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481357">Someday<nobr> <wbr></nobr>... they'll be safe. No. We're training them to be just like us, as smart as us. So someday they'll fall for e-mail scams, phishing attacks, and believe all the crap from lying politicians, just like we do. But they'll fall for these at electronic speeds, and probably get woke too. God help us if that day ever comes.</div>
	</div>

	<div class="commentSub" id="comment_sub_64481357">

</div>
</div>

<div id="replyto_64481357"></div>

<ul id="group_64481357">
	<li id="hiddens_64481357" class="hide"></li>
</ul>

</li><li id="tree_64481391" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481391" class="commentstatus"></div>
<div id="comment_64481391" class="cw">
	<div id="comment_top_64481391" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481391" name="comment_link_64481391" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481391" onclick="return D2.setFocusComment(64481391)" >Nice! Very, very nice!</a>


		 	<span id="comment_score_64481391" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481391); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481391"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481391"><p>Regular software vulnerabilities are kid stuff compare to the attack surface present here. We do not even really understand the models. For conventional attacks, regular program semantics is used or a small number of mostly understood side-channels. These may get used or combined in surprising ways, but at least we understand the base mechanisms pretty well. With LLMs? We have no clue what is possible.</p><p>I like the analogy to classical telefone signalling. It is not perfect, but the best one I have seen so far<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481391">

</div>
</div>

<div id="replyto_64481391"></div>

<ul id="group_64481391">
	<li id="hiddens_64481391" class="hide"></li>
</ul>

<ul id="commtree_64481391"><li id="tree_64481931" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64481931" class="commentstatus"></div>
<div id="comment_64481931" class="cw">
	<div id="comment_top_64481931" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64481931" name="comment_link_64481931" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64481931" onclick="return D2.setFocusComment(64481931)" >Re:</a>


		 	<span id="comment_score_64481931" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64481931); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~narcc">narcc</a>  <span class="uid"><a href="//slashdot.org/~narcc">( 412956 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64481931"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64481931"><p><div class="quote"><p>With LLMs? We have no clue what is possible.</p></div><p>That's simply not true.  The limits are very well understood, contrary to what the marketers would have you believe.</p><p>As for the attack surface, that should be clear as crystal for any given implementation. These things aren't magic.  I don't know who Schneier thinks he's talking to, but if you're trying to impose strictures by fine-tuning an LLM, you don't need a warning, you need to be fired for gross incompetence.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64481931">

</div>
</div>

<div id="replyto_64481931"></div>

<ul id="group_64481931">
	<li id="hiddens_64481931" class="hide"></li>
</ul>

<ul id="commtree_64481931"><li id="tree_64482497" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64482497" class="commentstatus"></div>
<div id="comment_64482497" class="cw">
	<div id="comment_top_64482497" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64482497" name="comment_link_64482497" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64482497" onclick="return D2.setFocusComment(64482497)" >Re:</a>


		 	<span id="comment_score_64482497" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64482497); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64482497"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64482497"><p>Hahaha, no. The _limits_ of what intentional things an LLM can do are reasonably well understood. The limits of what an LLM can be tricked into doing are somewhat understood on the theoretical side, but on the practical ones they depend very strongly on the training data and on implementation details, like temporary state or persistent state depending on user and the interactions with it. Hence the concrete possibilities are _not_ understood at all for any of the LLMs currently deployed.</p><p>You are thinking lik<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64482497">

</div>
</div>

<div id="replyto_64482497"></div>

<ul id="group_64482497">
	<li id="hiddens_64482497" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64482367" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64482367" class="commentstatus"></div>
<div id="comment_64482367" class="cw">
	<div id="comment_top_64482367" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64482367" name="comment_link_64482367" href="//it.slashdot.org/comments.pl?sid=23327011&amp;cid=64482367" onclick="return D2.setFocusComment(64482367)" >)ld sayings....</a>


		 	<span id="comment_score_64482367" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64482367); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Wizardess">Wizardess</a>  <span class="uid"><a href="//slashdot.org/~Wizardess">( 888790 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64482367"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64482367"><p>Schneier has apparently never heard of the VERY old saw, "Don't try to teach your grandmother to suck eggs." Yeah, now it would be great grandmother or great great grandmother who last "sucked eggs"; but, the idea stands, "Don't try to teach an expert what he or she already surely knows."</p><p>{^_^}</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64482367">

</div>
</div>

<div id="replyto_64482367"></div>

<ul id="group_64482367">
	<li id="hiddens_64482367" class="hide"></li>
</ul>

</li><li id="hidestring_0"><noscript><b class='more'><span class="ind"></span><a href="//it.slashdot.org/comments.pl?sid=23327011&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=0">1 reply</a> beneath your current threshold.</b></noscript></li>
			<li id="roothiddens" class="hide"></li>
		</ul>
	
	
	
	

<noscript><p><b>There may be more comments in this discussion. Without JavaScript enabled, you might want to <a href="//it.slashdot.org/users.pl?op=editcomm">turn on Classic Discussion System</a> in your preferences instead.</b></p></noscript>
<div id="discussion_buttons" class="clearfix">






</div>


<div class="newcmnt"><div id="replyto_0"></div></div>


	<script type="text/javascript">
<!--
		D2.currents()['hidden']   = 6;
		D2.currents()['full']     = 1;
		D2.currents()['oneline']  = 30;
		// D2.currents_total(37);

		D2.abbrev_comments({64481391:522,64481343:529,64481457:515,64481433:1008,64482497:522,64482031:725});
		D2.noshow_comments([64481287,64481313,64481351,64481851,64481915,64481289]);
		D2.pieces_comments([64481309,64481383,64481397,64481433,64481547,64481557,64481659,64481789,64481811,64482163,64482499,64482031,64481723,64481333,64481387,64481443,64482167,64482171,64481425,64481447,64481465,64481791,64482233,64481343,64481457,64481357,64481391,64481931,64482497,64482367]);
		D2.init_hiddens([64481287,64481397,64481557,64481277,0]);

		D2.finishLoading();


		if (D2.thresh_totals()[6][6][1] == 0) {
			D2.replyTo(0, 1);
		}


//-->
	</script>


</div>



	
	
		<div id="clickgen" class="grid_24 b">
    <section class="grid_16 f">
        <div>
			<h4 class="nobg">
			    <a href="" class="selected btmrel" onClick="getRelatedStoriesForStory(428557);return false">Related Links</a>
			    <span class="tops fright">Top of the: <a href="" class="btmday" onClick="getTopStories(1);return false">day</a>, <a class="btmweek" href="" onClick="getTopStories(7); return false">week</a>, <a href="" onClick="getTopStories(30);return false" class="btmmonth">month</a>.</span>
			</h4>
			<ul class="nobullets bmrelatedlist">


	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>390<span class="hide"> comments</span></span></span><a href="//it.slashdot.org/story/24/03/17/0421228/32-hour-workweek-for-america-proposed-by-senator-bernie-sanders?sdsrc=popbyskidbtmprev">32-Hour Workweek for America Proposed by Senator Bernie Sanders</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>358<span class="hide"> comments</span></span></span><a href="//it.slashdot.org/story/23/07/31/0157219/what-should-happen-to-empty-downtown-office-spaces?sdsrc=popbyskidbtmprev">What Should Happen to Empty Downtown Office Spaces?</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>340<span class="hide"> comments</span></span></span><a href="//it.slashdot.org/story/23/10/09/2044230/hacktivism-erupts-in-response-to-hamas-israel-war?sdsrc=popbyskidbtmprev">Hacktivism Erupts In Response To Hamas-Israel War</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>324<span class="hide"> comments</span></span></span><a href="//it.slashdot.org/story/23/09/16/1929234/feedback-is-now-too-harsh-the-new-word-is-feedforward?sdsrc=popbyskidbtmprev">'Feedback' Is Now Too Harsh. The New Word is 'Feedforward'</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>248<span class="hide"> comments</span></span></span><a href="//it.slashdot.org/story/23/09/03/1528258/workers-are-resisting-calls-to-return-to-offices?sdsrc=popbyskidbtmprev">Workers are Resisting Calls to Return to Offices</a>
	</li>


</ul>
        </div>
    </section>
    <aside class="grid_8 st">
		<section class="grid_24 f">
			<div>
				<h5 class="tlnav"><a href="//tech.slashdot.org/story/24/05/18/023251/cruise-reached-an-8m-settlement-with-the-person-dragged-under-its-robotaxi?sdsrc=nextbtmnext">next</a></h5>
				<div class="grid_24">
	    
	    
            	 <span class="grid_7 tcenter"><img src="//a.fsdn.com/sd/topics/ai_64.png" width="64" height="64" alt="AI"></span>
	    
					<p class="grid_12"><a href="//tech.slashdot.org/story/24/05/18/023251/cruise-reached-an-8m-settlement-with-the-person-dragged-under-its-robotaxi?sdsrc=nextbtmprev">Cruise Reached an $8M+ Settlement With the Person Dragged Under Its Robotaxi</a></p>
					<span class="grid_5 tcenter comments"><span class="cmntcnt_large fleft"><span class="slant"></span><span>48<span class="hide"> comments</span></span></span></span>
	
				</div>
			</div>
		</section>
		<section class="grid_24">
			<div>
				<h5 class="tlnav"><a href="//it.slashdot.org/story/24/05/18/0125202/facing-angry-users-sonos-promises-to-fix-flaws-and-restore-removed-features?sdsrc=prevbtmprev">previous</a></h5>
				<div class="grid_24">
	    
            	 <span class="grid_7 tcenter"><img src="//a.fsdn.com/sd/topics/business_64.png" width="64" height="64" alt="Businesses"></span>
	    
					<p class="grid_12"><a href="//it.slashdot.org/story/24/05/18/0125202/facing-angry-users-sonos-promises-to-fix-flaws-and-restore-removed-features?sdsrc=prevbtmprev">Facing Angry Users, Sonos Promises to Fix Flaws and Restore Removed Features </a></p>

					<span class="grid_5 tcenter comments"><span class="cmntcnt_large fleft"><span class="slant"></span><span>68<span class="hide"> comments</span></span></span></span>
				</div>
			</div>
		</section>
	</aside>
</div>
	

</section>
			</div>
		</div>
<div id="bottom-masonry" class="jobbioapp"></div>
		<div class="row top-space">


			<div class="grid_24">
				<!-- 728px ad -->

				<div class="adwrap">
<div id='div-gpt-ad-728x90_c'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_c');});</script></div>
</div>
				<!-- end 728px ad -->
				<!-- Slashdot Deals 6 Best Sellers -->
					<div class="row deals-footer">
						<div class="units-8 indent-2 deals-wrapper">
						  <div class="deals-header"><h1>Slashdot Top Deals</h1></div>
						  <div id="deals-output">
							<script id="deals-template" type="text/x-handlebars-template">
							  {{#each deal}}
								<div class="deal">
								  <a href="{{urlPath permalink}}?&utm_source=slashdot.org&utm_medium=dealfeed-footerfeed&utm_campaign={{slug}}" target="_blank">
								  	<img src="{{main_image}}" alt="" />
								  </a>
								  <p class="title"><a href="{{urlPath permalink}}?&utm_source=slashdot.org&utm_medium=dealfeed-footerfeed&utm_campaign={{slug}}" target="_blank">{{title}}</a></p>
								  <p class="deal-price">{{centConversion price_in_cents}}</p>
								</div>
							  {{/each}}
							</script>
						  </div>
						</div>
					</div>
					<script>
						if ( sdAdBlockActive && window.is_euro_union === 0) {
                                                    bizx.cmp.ifConsent('', ['all'], function () {
							$.ajaxSetup({
								cache: true
							});
							$.getScript( "//a.fsdn.com/sd/js/scripts/min/deals-min.js", function(){
								runDealsWidget();
							});
                                                    });
						}
					</script>

					<!-- End Slashdot Deals 6 Best Sellers -->
				</div>
			</div>
		</div>
	</div>
	<!-- SMACKS: END COMMENTS SECTION -->
</div>
<!-- SMACKS: END COMMENTS CONTAINER -->


	

<script type="text/javascript">

$(function(){
$('#firehose-filter').
	focus(function(event){
		gFocusedText = this;
	}).
	blur(function(event){
		if ( gFocusedText === this ) {
			gFocusedText = null;
		}
	});


apply_updates_when(		'at-end', true);
});
</script>

<!-- body end --><!-- footer type=current begin -->

	
	</section>
	
	


	<footer id="fhft" class="grid_24 nf aoc">
		<div id="logo_nf" class="fleft">
			<a href="//slashdot.org"><span>Slashdot</span></a>
		</div>
		<nav role="firehose footer">
			
				
				
				
				

				
						<span class="ind"></span><a class="btn first" href="//it.slashdot.org/comments.pl?sid=23327011&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Post</a>
				
				<a class="btn hide" id="footer_moderate_button">Moderate</a>
				<a class="btn hide" id="footer_moderatorhelp_button">Moderator Help</a>
				<a class="btn hide" id="footer_delete_button" title="Checked comments will be deleted.">Delete</a>
				<script>
					(function($){
						var old_moderate_btn = $("#discussion_moderate_button");
						if (old_moderate_btn.length) {
							var moderate_btn = $("#footer_moderate_button");
							moderate_btn.click(
								function(){old_moderate_btn.click()}
							);
							moderate_btn.removeClass('hide');
						}

						var old_moderatorhelp_btn = $("#discussion_moderatorhelp_button");
						if (old_moderatorhelp_btn.length) {
							var moderatorhelp_btn = $("#footer_moderatorhelp_button");
							moderatorhelp_btn.click(
								function(){old_moderatorhelp_btn.click()}
							);
							moderatorhelp_btn.attr(
								'href', old_moderatorhelp_btn.attr('href')
							);
							moderatorhelp_btn.removeClass('hide');
						}

						var old_delete_btn = $("#discussion_delete_button");
						if (old_delete_btn.length) {
							var delete_btn = $("#footer_delete_button");
							delete_btn.click(
								function(){old_delete_btn.click()}
							);
							delete_btn.removeClass('hide');
						}

						$('#discussion_buttons').addClass('hide');
					})(Slash.jQuery); // (function($){
				</script>
				<ul class="fleft">
					
						<li class="fleft selected">
							<span class="nbutton btn hide link reset" id="more_comments_button">
								<a href="#" onclick="D2.ajaxFetchComments(0,1); return false">
									<span id="more_comments_num_a" class="hide">Get more comments</span>
								</a>
							</span>
						</li>
					
					
						<li class="fleft">
							<span class="loadedcommentcnt">37</span> of <span class="totalcommentcnt">37</span> loaded
						</li>
					
				</ul>
				
					<script type="text/javascript">D2.finishLoading()</script>
				
			

			
			<ul class="fright submitstory">
					<li class="fright">
						<a href="/submit">Submit<span class="opt"> Story</span></a>
					</li>
			</ul>
		</nav>
		


	</footer>
	<section class="bq">
		<blockquote class="msg grid_24" cite="https://slashdot.org">
			<p>Everything should be made as simple as possible, but not simpler.
		-- Albert Einstein</p>
			<span class="slant"></span>
		</blockquote>
	</section>
	<footer id="ft" class="grid_24">
		<nav class="grid_10" role="footer">
			<ul>
				<li><a href="//slashdot.org/faq">FAQ</a></li>
				<li><a href="//slashdot.org/archive.pl">Story Archive</a></li>
				<li><a href="//slashdot.org/hof.shtml">Hall of Fame</a></li>
				<li><a href="https://slashdotmedia.com/advertising-and-marketing-services/" rel="nofollow">Advertising</a></li>
				<li><a href="https://slashdotmedia.com/terms-of-use/" rel="nofollow">Terms</a></li>
				<li><a href="https://slashdotmedia.com/privacy-statement/" rel="nofollow">Privacy Statement</a></li>
				<li><a href="//slashdot.org/faq/slashmeta.shtml">About</a></li>
				<li><a href="mailto:feedback@slashdot.org">Feedback</a></li>
				<li><a href="#" onclick="set_mobile_pref('mobile',1);return false;">Mobile View</a></li>
				<li><a href="//slashdot.org/blog">Blog</a></li>
				<li><a href="#" id="opt-out-link"></a></li>
				<li><button class="btn opt-out" id="opt-out-button" style="display:none">
					<img src="//a.fsdn.com/sd/ccpa-optout.png" alt="Icon">
					Do Not Sell or Share My Personal Information</button></li>

			</ul>
		</nav>
		<br>
		
		<div class="grid_14 tright tm"><span class="nobr">Copyright &copy; 2024 Slashdot Media. All Rights Reserved.</span></div>

	<div class="modal-custom overlay-custom" id="ccpa-modal" style="max-width:100%">
		<div class="modal-content modal-content-ccpa">
	    	<span class="close" id="modal-close">&times;</span>
			<div class="modal-header" id="ccpa-modal-content-destination"></div>
		</div>
	</div>

	</footer>
	
	<div class="overlay"></div>
<div class="modal-box">
    <a href="#" id="close-modal">Close</a>
    <article class="modal-content">
    </article>
    <footer>
</div>




<div id="modal_cover" class="hide" onclick="hide_modal_box(); return false;"></div>
<div id="modal_box" class="hide">
      <div id="modal_box_content"></div>
      <header class="n">
                  <span class="fadeout"></span>
                  <span class="fadeoutfade"></span>
		  <span class="pf"><a class="ico close" onclick="hide_modal_box(); return false;" href="#"><span>Close</span></a></span>
		  <h3 class="pf"><div id="logo"><a href="//slashdot.org">Slashdot</a></div><span id="preference_title"></span></h3>
      </header>
</div>
	
	<!-- CCM Tag -->
<script type="text/javascript">
bizx.cmp.ifConsent({purposes: 'all', vendors: 'bombora'}, function() {
        /*global _ml:true, window */
        _ml = window._ml || {};
        _ml.eid = '771';

        var s = document.getElementsByTagName('script')[0], cd = new Date(), mltag = document.createElement('script');
        mltag.type = 'text/javascript'; mltag.async = true;
        mltag.src = '//ml314.com/tag.aspx?' + cd.getDate() + cd.getMonth() + cd.getFullYear();
        s.parentNode.insertBefore(mltag, s);
});
</script>
<!-- End CCM Tag -->

<script type="text/javascript">
window.google_analytics_uacct = "UA-199823890-2";

var _gaq = _gaq || [];





  _gaq.push(['_setAccount', 'UA-199823890-2']);
  _gaq.push(['_setDomainName', '.slashdot.org']);

	
		_gaq.push(['_addIgnoredRef', 'slashdot.org']);
	


  _gaq.push(['_setCustomVar', 1, 'User Type',  'Anon', 3]);		
	
	_gaq.push(['_setCustomVar', 2, 'Page','article2', 3]);

	



// track beta behavior for user
var betamatches = document.cookie.match(/betagroup=(-?\d+)/);

if(betamatches && betamatches[1]) {
  if(betamatches[1] == -1) {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','opt-out', 3]);
  } else {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','unredirected', 3]);
  }
}



  _gaq.push(['_trackPageview']);
  _gaq.push(['_trackPageLoadTime']);


if (window.is_euro_union === 0) {
bizx.cmp.ifConsent('', ['all'], function () {
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
});
}
</script>

<!-- CCM GA Push -->
<script>
    if (typeof _ml !== 'undefined' && _ml.us) {
        if (_ml.us.tp && _ml.us.tp.length > 0) {
            ga('set', 'dimension2', _ml.us.tp[0]);
        }
        if (_ml.us.pc && _ml.us.pc.length > 0) {
            ga('set', 'dimension7', _ml.us.pc[0]);
        }
        ga('set', 'dimension3', _ml.us.ind);
        ga('set', 'dimension4', _ml.us.cr);
        ga('set', 'dimension5', _ml.us.cs);
        ga('set', 'dimension6', _ml.us.dm);
        ga('set', 'dimension8', _ml.us.sn);
    }
</script>

<!-- Sticky Ads -->
<script type="text/javascript">
var topBannerViewed = false;
function initSticky(){
	if (SD.Ads.acceptable_ads_active) {
		return;
	}
		
	if($('#div-gpt-ad-728x90_a').length > 0 && $('#div-gpt-ad-300x250_a').length > 0 && window.outerWidth >= 1070 && !sdAdBlockActive){
	    $(window).scroll(function(){
		var y = $(document).scrollTop();
		var z =  y + window.outerHeight;
		var navOffset = 0;
		var offset = [
		    $('.nav-wrap').outerHeight(true),
		    $('.nav-secondary-wrap').outerHeight(true)
		];
		for(row in offset){
		    if(offset[row]) navOffset = navOffset + parseInt(offset[row]);
		}
		$('.adwrap-unviewed').each(function(){
		    var cls = 'adwrap-sticky';
		    var toggleCls = 'adwrap';
				//$('.banner-wrapper').css('height', $('.banner-contain').outerHeight());
		    if($(this).hasClass('railad')) {
			if(topBannerViewed){
			    var topPixels = $(this).offset().top;
			    navOffset += $('.adwrap').outerHeight();
			    if(y >= topPixels && y >= navOffset){
				$('#slashboxes').css('top', 0).css('position','sticky').css('right',13);
			    } else {
				$('#slashboxes').removeAttr('style');
			    }
			}
			return;
		    }
		    var topPixels = $(this).offset().top;
		if(y >= topPixels && y >= navOffset){
			$(this).addClass(cls);
			$(this).removeClass('adwrap');
					if(cls == 'adwrap-sticky') { //top banner
			    topBannerViewed = false;
						$('#slashboxes').css('top',$(this).outerHeight() || 0).css('position','sticky').css('right',13);
					}
		if(topBannerViewed) {
			    //console.log('hereeee');
						$('#slashboxes').css('top', 0).css('position','sticky').css('right',13);
					}
		    }else{
									//console.log('topBannerViewed', topBannerViewed);
			$(this).removeClass(cls);
			$(this).addClass(toggleCls);
			$('#slashboxes').removeAttr('style');
		    }
		});
			if($('.adwrap-viewed-banner').length > 0){
			  //console.log('ads topBanner displayed');
				topBannerViewed = true;
				$('.adwrap-viewed-banner').removeClass('adwrap-unviewed').removeClass('adwrap-sticky').addClass('adwrap');
			}
	    if($('.adwrap-viewed-railad').length > 0){
							//console.log('ads sidebar displayed');
		    $('.adwrap-viewed-railad').removeClass('adwrap-unviewed').removeClass('adwrap-railad-sticky');
				$('#slashboxes').removeAttr('style');
			}
	    });
	}
}
bizx.cmp.ifConsent({purposes: 'all', vendors: 'google-ads'}, function () {
	if (!sdAdBlockActive) {
		initSticky();
	}
	if (SD.Ads.acceptable_ads_active) {
		// similar to remove* code above in initSticky
		$('.adwrap-unviewed').removeClass('adwrap-unviewed').removeClass('adwrap-sticky').addClass('adwrap').removeClass('adwrap-railad-sticky');
		$('#slashboxes').removeAttr('style');
	}
});
</script>

<!-- Piwik -->
<script type="text/javascript">
  var _paq = _paq || [];
  _paq.push(["setCookieDomain", "*.slashdot.org"]);
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
function initPiwikAndNels() {
  (function() {
    var u="//analytics.slashdotmedia.com/";
    _paq.push(['setTrackerUrl', u+'sd.php']);
    _paq.push(['setSiteId', 40]);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'sd.js'; s.parentNode.insertBefore(g,s);
  })();

    if(window.location.pathname == '/'){
        var nelId = (location.search.split('nel_id=')[1] || '').split('&')[0];
        var url = '/ajax.pl?op=nel';
        if(nelId){
            url += '&nel_id='+nelId;
        }
        $.ajax({
            url: url,
            type: 'POST',
            success: function(html){
                $('#firehoselist article').eq(1).after(html);
            }
        });
    }
    //announcement NEL
    if(document.getElementById('announcementText')){
      $('#announcementText').hide();
      var hlUrl = '/ajax.pl?op=hl_nel';
      if(nelId){
        hlUrl += '&nel_id='+nelId;
      }
      $.ajax({
        url: hlUrl,
        type: 'POST',
        success: function(html){
          if(html.length < 10){
            $('#announcementText').show();
            return;
          }
          $('#announcementText').html(html).show();
        },
        error: function () {
          $('#announcementText').show();
        }
      });
    }
}
bizx.cmp.ifConsent({purposes: ['storage', 'measurement'], vendors: 'sdm'}, initPiwikAndNels);
$('#main-nav-badge-link').on('click', function(e){
     window._paq.push(['trackEvent', 'Nav Menu', 'GC']);
});
</script>


<!-- Datonics -->
<script type="text/javascript">
if (window.is_euro_union === 0) {
    bizx.cmp.ifConsent('', ['all'], function () {
        bizx.cmp.embedScript("//ads.pro-market.net/ads/scripts/site-143573.js", true);
    });
}
</script>
	<script id="after-content" type="text/javascript">
(function( $, fn, console ){
	$ && fn && $(function(){ fn($, console); });
})(window.jQuery, window.pageload_done, window.console);
</script>
	
	<script type='text/javascript'>
	if(!document.location.href.match(/source=autorefresh/)) {
		document.write('<img src="//slashdot.org/images/js.gif?126">');
	}
</script>
<noscript>
	<img src="//slashdot.org/images/njs.gif?795">
</noscript>
	<div class="busy genericspinner hide"><span>Working...</span></div>

	    <script>
            var regular_opt_out_link = true;

            if (bizx.cmp.show_do_not_sell()) {
                regular_opt_out_link = false;
                 document.getElementById('opt-out-button').setAttribute('style', 'display:inline');
            }

            if (window.is_euro_union === 1) {
                regular_opt_out_link = false;
                var elem = '<a href="#" title="Privacy Choices" onclick="bizx.cmp.promptConsent(); return false;">Privacy Choices</a>';
                document.getElementById('opt-out-link').innerHTML = elem;
            }

            if (regular_opt_out_link == true) {
                var elem = '<a href="https://slashdotmedia.com/opt-out-choices" title="Opt Out" rel="nofollow">Opt Out</a>';
                document.getElementById('opt-out-link').innerHTML = elem;
            }
            var cmp_modal = document.getElementById('ccpa-modal');
            var btn = document.getElementById('opt-out-button');
            var span = document.getElementById('modal-close');

            btn.onclick = function() {
            	cmp_modal.style.display = 'block';
            };

            span.onclick = function() {
            	cmp_modal.style.display = 'none';
            };

         </script>

	<script>
		if(typeof(Storage)!=="undefined"){
			window.scrollTo(0,sessionStorage.scrollPos);
				$(window).scroll(function () {
				//You've scrolled this much:
				sessionStorage.scrollPos = $(window).scrollTop();
			});
		}
		$(function(){
			$('a').click(function(){
				delete sessionStorage.scrollPos;
			})
		});
		// window.onbeforeunload = function () {
		// 	console.log('bakc button clicked');
		// 	delete sessionStorage.scrollPos;
		// }
		window.onpopstate=function() {
			delete sessionStorage.scrollPos;
		}
	</script>
	

	
		<!-- 1x1 story page -->
		<div id='div-gpt-ad-1x1'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-1x1');});</script></div>
	

	</body>
	</html>


	<!-- footer type=current end -->