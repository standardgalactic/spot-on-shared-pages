<!doctype html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="profile" href="https://gmpg.org/xfn/11">

	<script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="095b91a6-f087-4380-b01d-e44b1c2af358" data-blockingmode="auto" type="text/javascript"></script>
	<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XYTVD2CXR4"></script>
<script>
	window.dataLayer = window.dataLayer || [];
	function gtag(){dataLayer.push(arguments);}
	gtag('js', new Date());

	gtag('config', 'G-XYTVD2CXR4');
</script>

	<title>Compiler-Driven FPGA Virtualization with SYNERGY &#8211; Communications of the ACM</title>
<meta name='robots' content='max-image-preview:large' />
<link rel='dns-prefetch' href='//stats.wp.com' />
<link rel="alternate" type="application/rss+xml" title="Communications of the ACM &raquo; Feed" href="https://cacm.acm.org/feed/" />
<link rel="alternate" type="application/rss+xml" title="Communications of the ACM &raquo; Comments Feed" href="https://cacm.acm.org/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Communications of the ACM &raquo; Compiler-Driven FPGA Virtualization with SYNERGY Comments Feed" href="https://cacm.acm.org/research/compiler-driven-fpga-virtualization-with-synergy/feed/" />
<script class="wp-asset-manager usage-logger" type="text/javascript">window.amScripts = window.amScripts || {}; window.amScripts["usage-logger"] = {"nonce":"f9cfb03724","id":754572,"type":"digital-library","doi":"10.1145\/3613903"}</script><style class="wp-asset-manager cacm-global-critical" type="text/css">@font-face{font-display:swap;font-family:Inter;font-style:normal;src:url(../be7cb18dc7caf47cf7e9.woff2) format("woff2"),url(../817c4274293e221c5076.woff) format("woff")}@font-face{font-display:swap;font-family:Inter;font-style:normal;font-weight:700;src:url(../54321e26b8bf4739a16d.woff2) format("woff2"),url(../7ad0df5561cc0933cead.woff) format("woff")}@font-face{font-display:swap;font-family:Work Sans;font-style:normal;font-weight:500;src:url(../2dd7c3c79fd1aa1d85ca.woff2) format("woff2"),url(../9a8cbe3b3bec955df411.woff) format("woff")}@font-face{font-display:swap;font-family:Work Sans;font-style:normal;font-weight:700;src:url(../ab8702255905c24de1c1.woff2) format("woff2"),url(../9ab52d2504cfe145b9bd.woff) format("woff")}@font-face{font-display:swap;font-family:Work Sans;font-style:normal;font-weight:800;src:url(../cef488e4e9f273a0a1e3.woff2) format("woff2"),url(../a99bf2b51c426338ae2c.woff) format("woff")}html{box-sizing:border-box}html *,html :after,html :before{box-sizing:inherit}a,abbr,address,article,aside,audio,b,blockquote,body,canvas,caption,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,menu,nav,section{display:block}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}fieldset{border:none;margin:0;padding:0}button,input,select,textarea{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:0;border-radius:0;font:inherit;margin:0}button{background-color:transparent;padding:0}body,html{font-family:var(--wp--preset--font-family--inter);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}html{scroll-padding-top:var(--wp--custom--siteheader-height)!important}body{overflow-x:hidden}a img{display:block}img{height:auto;max-width:100%}svg{display:block}.container{margin-left:auto;margin-right:auto;width:calc(min(100%,var(--wp--style--global--wide-size) + var(--wp--custom--site-edge)*2) - var(--wp--custom--site-edge)*2)}.screen-reader-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;padding:0;width:1px}.screen-reader-only,.skip-link{overflow:hidden;position:absolute}.skip-link{margin-left:auto;margin-right:auto;background-color:var(--wp--preset--color--white);color:inherit;left:0;opacity:0;padding:.625rem;right:0;text-align:center;text-decoration:none;top:0;transform:translateY(-100%);width:-moz-max-content;width:max-content;z-index:-1}.skip-link:focus{opacity:1;transform:translateY(0);z-index:2147483647}.site-content{padding-top:var(--wp--custom--siteheader-height)}@media(min-width:48rem){.site-content{padding-top:var(--wp--custom--siteheader-height)}}.site-header-hamburger-menu[aria-hidden=true]{display:none}.site-header-membership-nav{align-self:stretch;display:flex;position:relative}.site-header--expanded .site-header-membership-nav,.site-header:not(.site-header--member-logged-in) .site-header-membership-nav{display:none}.site-header{position:fixed;width:100%;z-index:7}.site-header--expanded{height:100%}.site-header--no-js{opacity:0}.site-header.headroom{transition:transform .2s linear;will-change:transform}.site-header.headroom--pinned{transform:translateY(0)}.site-header.headroom--unpinned{height:auto;transform:translateY(-100%)}.site-header-container{align-items:center;background-color:var(--wp--preset--color--white);border-bottom:var(--wp--custom--border-gray);display:flex;gap:1rem;height:var(--wp--custom--siteheader-height);justify-content:space-between;padding:0 1rem}.site-header-container a{text-decoration:none}.site-header-container a:active,.site-header-container a:focus,.site-header-container a:hover{text-decoration:underline;text-decoration-color:inherit;text-decoration-thickness:1px;text-underline-offset:2.5px}@media(min-width:37.5rem){.site-header-container{padding:0 1.5rem}}@media(min-width:48rem){.site-header-container{padding:0 0 0 1rem}}@media(min-width:64rem){.site-header-container{gap:2.25rem}}@media(min-width:80rem){.site-header-container{gap:3rem}}.site-header--member-logged-in .site-header-container{padding:0 0 0 1rem}@media(min-width:37.5rem){.site-header--member-logged-in .site-header-container{padding:0 0 0 1.5rem}}.site-header--expanded .site-header-container{background-color:var(--wp--preset--color--cacm-darker-blue)}@media(max-width:47.9375rem){.site-header-logo,.site-header-search{margin-left:auto}}.site-header-member-login-link{font-weight:var(--wp--custom--font-weight-bold)}.site-header-member-login-link[aria-hidden=true]{visibility:hidden}@media(max-width:47.9375rem){.site-header-member-login-link{display:none}}.site-header--member-logged-in .site-header-member-login-link{display:none}.site-header-magazine-menu,.site-header-topics-menu{position:relative}.site-header-magazine-menu-toggle,.site-header-topics-menu-toggle{font-size:.9375rem;font-weight:var(--wp--custom--font-weight-regular);line-height:1.21;align-items:center;cursor:pointer;display:flex;gap:.3333333333rem}@media(min-width:80rem){.site-header-magazine-menu-toggle,.site-header-topics-menu-toggle{font-size:1rem;font-weight:var(--wp--custom--font-weight-regular);line-height:1.21;gap:.65625rem}}.site-header-magazine-menu-toggle[aria-hidden=true],.site-header-topics-menu-toggle[aria-hidden=true]{visibility:hidden}.site-header-magazine-menu-toggle[aria-expanded=true]>svg,.site-header-topics-menu-toggle[aria-expanded=true]>svg{transform:rotate(180deg)}.site-header-magazine-menu-toggle:focus,.site-header-magazine-menu-toggle:hover,.site-header-topics-menu-toggle:focus,.site-header-topics-menu-toggle:hover{text-decoration:underline}.site-header-magazine-menu-expanded,.site-header-topics-menu-expanded{background-color:var(--wp--preset--color--white);border-radius:.3125rem;box-shadow:0 .125rem .25rem -.125rem rgba(24,39,75,.12),0 .25rem .25rem -.125rem rgba(24,39,75,.08);display:flex;gap:1.875rem;justify-content:space-between;padding:1.75rem 1.875rem 1.5rem;position:absolute;right:0;text-align:left;top:2.28125rem;white-space:nowrap;z-index:4}.site-header-magazine-menu-expanded[aria-hidden=true],.site-header-topics-menu-expanded[aria-hidden=true]{display:none}@media(max-width:47.9375rem){.site-header-magazine-menu,.site-header-topics-menu{display:none}}.site-header:not(.site-header--member-logged-in) .site-header-topics-menu-expanded{left:0;right:auto}</style><style class="wp-asset-manager cacm-article-critical" type="text/css">.article-header{left:50%;margin-left:-50vw;margin-right:-50vw;position:relative;right:50%;width:100vw;background-color:var(--cacm--article-header--background-color);border-bottom:1px solid var(--cacm--article-header--border-color);color:var(--cacm--article-header--text-color);margin-bottom:var(--wp--custom--gap)}@media(min-width:48rem){.article-header{grid-area:header;margin-bottom:1.5rem}}.article-header__inner{--wp--custom--vertical-block-rhythm:0.5rem;padding:2rem 0 0}@media(min-width:48rem){.article-header__inner{--wp--custom--vertical-block-rhythm:0.625rem;display:grid;gap:0 var(--cacm--article--gap);grid-template-columns:auto 1fr;padding:var(--cacm--article--gap) 0}}@media(min-width:64rem){.article-header__inner{grid-template-columns:var(--cacm--article--sidebarleft--width) 1fr}}.article-header__section{margin-bottom:var(--wp--custom--vertical-block-rhythm);display:inline-block}.article-header__section:last-child{margin-bottom:0}.article-header__section a{text-decoration:none}.article-header__section a:active,.article-header__section a:focus,.article-header__section a:hover{text-decoration:underline;text-decoration-color:inherit;text-decoration-thickness:1px;text-underline-offset:2.5px}@media(max-width:47.9375rem){.article-header__section{margin-right:.625rem}}@media(min-width:48rem){.article-header__section{grid-column:1/1;text-align:right}}.article-header__section>a{font-size:.875rem;font-weight:700;line-height:1.2142857143;background-color:var(--cacm--article-header--button--background-color);color:var(--cacm--article-header--button--text-color);display:inline-block;padding:.3125rem .625rem;text-transform:uppercase}@media(min-width:48rem){.article-header__figure,.article-header__meta,.article-header__share,.article-header__subtitle,.article-header__title,.article-header__topic-and-issue-section{grid-column:2/2}}.article-header__topic-and-issue-section{--wp--custom--vertical-block-rhythm:0.5rem;margin-bottom:var(--wp--custom--vertical-block-rhythm);font-size:.9375rem;line-height:1.5333333333;font-family:var(--wp--preset--font-family--inter);display:flex;flex-direction:column}.article-header__topic-and-issue-section:last-child{margin-bottom:0}@media(min-width:48rem){.article-header__topic-and-issue-section{--wp--custom--vertical-block-rhythm:1.25rem;align-items:center;flex-direction:row;gap:2rem}}.article-header__issue-section{color:var(--cacm--article-header--text-color)}.article-header__title{margin-bottom:var(--wp--custom--vertical-block-rhythm);font-family:var(--wp--preset--font-family--work-sans);font-size:var(--wp--preset--font-size--work-md);line-height:32.2px;font-weight:var(--wp--custom--font-weight-extrabold)}.article-header__title:last-child{margin-bottom:0}@media(min-width:48rem){.article-header__title{font-size:var(--wp--preset--font-size--work-xxxl);line-height:50.4px;font-weight:var(--wp--custom--font-weight-extrabold)}}@media(min-width:64rem){.article-header__title{font-size:var(--wp--preset--font-size--work-xxl);line-height:44.28px;font-weight:var(--wp--custom--font-weight-extrabold)}}.article-header__subtitle{font-family:var(--wp--preset--font-family--work-sans);font-size:var(--wp--preset--font-size--work-xxs);line-height:22.5px;font-weight:var(--wp--custom--font-weight-bold);font-size:1.3125rem;line-height:1.2380952381;letter-spacing:-.08px;font-weight:var(--wp--custom--font-weight-medium);letter-spacing:-.03125rem;margin-bottom:.125rem}.article-header__subtitle:last-child{margin-bottom:0}.article-header__subtitle a{word-break:break-word}.article-header__subtitle b,.article-header__subtitle strong{font-weight:var(--wp--custom--font-weight-bold)}.article-header__subtitle em,.article-header__subtitle i{font-style:italic}.article-header__subtitle del,.article-header__subtitle strike{text-decoration:line-through}.article-header__subtitle sub,.article-header__subtitle sup{font-size:75%;line-height:0;position:relative}.article-header__subtitle sub{bottom:-.25em}.article-header__subtitle sup{top:-.5em}.article-header__subtitle .monospace,.article-header__subtitle p code{font:var(--wp--custom--font-weight-regular) 90%/1.6 Courier,monospace}@media(min-width:48rem){.article-header__subtitle{--wp--custom--vertical-block-rhythm:1.25rem;font-family:var(--wp--preset--font-family--work-sans);font-size:var(--wp--preset--font-size--work-xs);line-height:25.2px;font-weight:var(--wp--custom--font-weight-bold);font-size:1.5625rem;line-height:1.2;letter-spacing:-.1px;font-weight:var(--wp--custom--font-weight-medium);letter-spacing:-.03125rem;margin:.5rem 0 .625rem}.article-header__subtitle:last-child{margin-bottom:0}}.article-header__meta{margin-bottom:var(--wp--custom--vertical-block-rhythm);font-size:.9375rem;line-height:1.5333333333;font-family:var(--wp--preset--font-family--inter);display:flex;flex-direction:column}.article-header__meta:last-child{margin-bottom:0}.article-header__meta>*{margin-bottom:var(--wp--custom--vertical-block-rhythm)}.article-header__meta>:last-child{margin-bottom:0}.article-header__byline{margin-top:.625rem}.article-header__byline>a{border-bottom:1px dotted var(--cacm--article-header--byline--text-color);color:var(--cacm--article-header--byline--text-color);text-decoration:none}@media(max-width:47.9375rem){.article-header__figure{left:50%;margin-left:-50vw;margin-right:-50vw;position:relative;right:50%;width:100vw}}@media(min-width:48rem)and (max-width:63.9375rem){.article-header__figure{display:flex;flex-direction:column}}@media(min-width:64rem){.article-header__figure--has-caption{display:grid;gap:0 var(--cacm--article--gap);grid-template-columns:1fr var(--cacm--article--sidebarright--width)}}.article-header__figure .image-wrapper{margin-bottom:var(--wp--custom--vertical-block-rhythm)}.article-header__figure .image-wrapper:last-child{margin-bottom:0}@media(min-width:64rem){.article-header__figure .image-wrapper{grid-column:1/1}}.article-header__figure .image-wrapper>img{-o-object-fit:cover;object-fit:cover}.article-header__figure .video-wrapper{height:100%;overflow:hidden;position:relative;width:100%;padding-bottom:56.25%}.article-header__figure .video-wrapper>iframe{height:100%;left:0;-o-object-fit:contain;object-fit:contain;position:absolute;top:0;width:100%}.article-header__figure .video-wrapper>:not(iframe){display:none}.article-header__figure figcaption{font-size:.9375rem;line-height:1.4666666667;font-family:var(--wp--preset--font-family--inter);color:var(--cacm--article-header--caption--text-color)}@media(max-width:47.9375rem){.article-header__figure figcaption{margin:0 var(--wp--custom--site-edge)}}@media(min-width:64rem){.article-header__figure figcaption{grid-column:2/2;margin:0}}</style><link rel="preload" href="https://cacm.acm.org/wp-content/themes/cacm/client/src/fonts/inter-v12-latin-regular.woff2" class="wp-asset-manager cacm-font-inter-regular-woff2" as="font" media="all" type="font/woff2" crossorigin /><link rel="preload" href="https://cacm.acm.org/wp-content/themes/cacm/client/src/fonts/inter-v12-latin-700.woff2" class="wp-asset-manager cacm-font-inter-700-woff2" as="font" media="all" type="font/woff2" crossorigin /><link rel="preload" href="https://cacm.acm.org/wp-content/themes/cacm/client/src/fonts/work-sans-bold.woff2?ver=1.0.0" class="wp-asset-manager cacm-font-work-sans-700-woff2" as="style" media="all" type="font/woff2" /><link rel="preload" href="https://cacm.acm.org/wp-content/themes/cacm/client/src/fonts/work-sans-extrabold.woff2?ver=1.0.0" class="wp-asset-manager cacm-font-work-sans-800-woff2" as="style" media="all" type="font/woff2" /><script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/cacm.acm.org\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.5.3"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id='wp-emoji-styles-inline-css' type='text/css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='https://cacm.acm.org/wp-includes/css/dist/block-library/style.min.css?ver=6.5.3' type='text/css' media='all' />
<style id='wp-block-library-inline-css' type='text/css'>
.has-text-align-justify{text-align:justify;}
</style>
<link rel='stylesheet' id='mediaelement-css' href='https://cacm.acm.org/wp-includes/js/mediaelement/mediaelementplayer-legacy.min.css?ver=4.2.17' type='text/css' media='all' />
<link rel='stylesheet' id='wp-mediaelement-css' href='https://cacm.acm.org/wp-includes/js/mediaelement/wp-mediaelement.min.css?ver=6.5.3' type='text/css' media='all' />
<style id='jetpack-sharing-buttons-style-inline-css' type='text/css'>
.jetpack-sharing-buttons__services-list{display:flex;flex-direction:row;flex-wrap:wrap;gap:0;list-style-type:none;margin:5px;padding:0}.jetpack-sharing-buttons__services-list.has-small-icon-size{font-size:12px}.jetpack-sharing-buttons__services-list.has-normal-icon-size{font-size:16px}.jetpack-sharing-buttons__services-list.has-large-icon-size{font-size:24px}.jetpack-sharing-buttons__services-list.has-huge-icon-size{font-size:36px}@media print{.jetpack-sharing-buttons__services-list{display:none!important}}.editor-styles-wrapper .wp-block-jetpack-sharing-buttons{gap:0;padding-inline-start:0}ul.jetpack-sharing-buttons__services-list.has-background{padding:1.25em 2.375em}
</style>
<style id='elasticpress-facet-style-inline-css' type='text/css'>
.widget_ep-facet input[type=search],.wp-block-elasticpress-facet input[type=search]{margin-bottom:1rem}.widget_ep-facet .searchable .inner,.wp-block-elasticpress-facet .searchable .inner{max-height:20em;overflow:scroll}.widget_ep-facet .term.hide,.wp-block-elasticpress-facet .term.hide{display:none}.widget_ep-facet .empty-term,.wp-block-elasticpress-facet .empty-term{opacity:.5;position:relative}.widget_ep-facet .empty-term:after,.wp-block-elasticpress-facet .empty-term:after{bottom:0;content:" ";display:block;left:0;position:absolute;right:0;top:0;width:100%;z-index:2}.widget_ep-facet .level-1,.wp-block-elasticpress-facet .level-1{padding-left:20px}.widget_ep-facet .level-2,.wp-block-elasticpress-facet .level-2{padding-left:40px}.widget_ep-facet .level-3,.wp-block-elasticpress-facet .level-3{padding-left:60px}.widget_ep-facet .level-4,.wp-block-elasticpress-facet .level-4{padding-left:5pc}.widget_ep-facet .level-5,.wp-block-elasticpress-facet .level-5{padding-left:75pt}.widget_ep-facet input[disabled],.wp-block-elasticpress-facet input[disabled]{cursor:pointer;opacity:1}.widget_ep-facet .term a,.wp-block-elasticpress-facet .term a{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;position:relative}.widget_ep-facet .term a:hover .ep-checkbox,.wp-block-elasticpress-facet .term a:hover .ep-checkbox{background-color:#ccc}.ep-checkbox{-webkit-box-align:center;-ms-flex-align:center;-ms-flex-negative:0;-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;background-color:#eee;display:-webkit-box;display:-ms-flexbox;display:flex;flex-shrink:0;height:1em;justify-content:center;margin-right:.25em;width:1em}.ep-checkbox:after{border:solid #fff;border-width:0 .125em .125em 0;content:"";display:none;height:.5em;-webkit-transform:rotate(45deg);transform:rotate(45deg);width:.25em}.ep-checkbox.checked{background-color:#5e5e5e}.ep-checkbox.checked:after{display:block}

</style>
<link rel='stylesheet' id='elasticpress-related-posts-block-css' href='https://cacm.acm.org/wp-content/mu-plugins/search/elasticpress/dist/css/related-posts-block-styles.min.css?ver=4.2.2' type='text/css' media='all' />
<style id='global-styles-inline-css' type='text/css'>
body{--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--color--cacm-blue: #337AB5;--wp--preset--color--cacm-link-blue: #015FAC;--wp--preset--color--cacm-dark-blue: #1E4A88;--wp--preset--color--cacm-darker-blue: #29303C;--wp--preset--color--cacm-light-blue: #B6DEFF;--wp--preset--color--cacm-peach: #F7ACA5;--wp--preset--color--cacm-beige: #F5F2DC;--wp--preset--color--cacm-brown: #8C6A54;--wp--preset--color--cacm-green: #5F7D05;--wp--preset--color--cacm-light-green: #EFF7F1;--wp--preset--color--cacm-black: #141414;--wp--preset--color--cacm-gray-100: #FBFCFC;--wp--preset--color--cacm-gray-200: #F8F9FA;--wp--preset--color--cacm-gray-300: #EBEDEF;--wp--preset--color--cacm-gray-500: #A9ACB1;--wp--preset--color--cacm-gray-600: #5A6875;--wp--preset--color--cacm-gray-700: #3D4550;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--gradient--primary-gradient: linear-gradient(90deg, #80C2EF 0%, #337AB5 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--font-size--work-xxxs: 16px;--wp--preset--font-size--work-xxs: 18px;--wp--preset--font-size--work-xs: 21px;--wp--preset--font-size--work-sm: 25px;--wp--preset--font-size--work-md: 28px;--wp--preset--font-size--work-lg: 33px;--wp--preset--font-size--work-xl: 37px;--wp--preset--font-size--work-xxl: 41px;--wp--preset--font-size--work-xxxl: 48px;--wp--preset--font-size--inter-xxxs: 15px;--wp--preset--font-size--inter-xxs: 18px;--wp--preset--font-size--inter-xs: 21px;--wp--preset--font-size--inter-sm: 24px;--wp--preset--font-size--inter-md: 28px;--wp--preset--font-size--inter-lg: 32px;--wp--preset--font-size--inter-xl: 36px;--wp--preset--font-size--inter-xxl: 41px;--wp--preset--font-size--inter-xxxl: 47px;--wp--preset--font-family--inter: 'Inter', helvetica, arial, sans-serif;--wp--preset--font-family--work-sans: 'Work Sans', helvetica, arial, sans-serif;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);--wp--custom--adminbar-height: 0px;--wp--custom--siteheader-height: 72px;--wp--custom--site-edge: 20px;--wp--custom--gap: 40px;--wp--custom--gap-half: calc(var(--wp--custom--gap) / 2);--wp--custom--section-background-color: transparent;--wp--custom--placeholder-background-color: var(--wp--preset--color--cacm-gray-200);--wp--custom--vertical-block-rhythm: 40px;--wp--custom--border-gray: 1px solid var(--wp--preset--color--cacm-gray-300);--wp--custom--font-weight-regular: 400;--wp--custom--font-weight-medium: 500;--wp--custom--font-weight-bold: 700;--wp--custom--font-weight-extrabold: 900;}.wp-block-heading{--wp--preset--font-size--work-xxs: 18px;--wp--preset--font-size--work-xs: 21px;--wp--preset--font-size--work-sm: 25px;--wp--preset--font-size--work-md: 28px;--wp--preset--font-size--work-lg: 33px;--wp--preset--font-size--work-xl: 41px;}body { margin: 0;--wp--style--global--content-size: 1280px;--wp--style--global--wide-size: 1280px; }.wp-site-blocks > .alignleft { float: left; margin-right: 2em; }.wp-site-blocks > .alignright { float: right; margin-left: 2em; }.wp-site-blocks > .aligncenter { justify-content: center; margin-left: auto; margin-right: auto; }:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flow > .alignleft{float: left;margin-inline-start: 0;margin-inline-end: 2em;}body .is-layout-flow > .alignright{float: right;margin-inline-start: 2em;margin-inline-end: 0;}body .is-layout-flow > .aligncenter{margin-left: auto !important;margin-right: auto !important;}body .is-layout-constrained > .alignleft{float: left;margin-inline-start: 0;margin-inline-end: 2em;}body .is-layout-constrained > .alignright{float: right;margin-inline-start: 2em;margin-inline-end: 0;}body .is-layout-constrained > .aligncenter{margin-left: auto !important;margin-right: auto !important;}body .is-layout-constrained > :where(:not(.alignleft):not(.alignright):not(.alignfull)){max-width: var(--wp--style--global--content-size);margin-left: auto !important;margin-right: auto !important;}body .is-layout-constrained > .alignwide{max-width: var(--wp--style--global--wide-size);}body .is-layout-flex{display: flex;}body .is-layout-flex{flex-wrap: wrap;align-items: center;}body .is-layout-flex > *{margin: 0;}body .is-layout-grid{display: grid;}body .is-layout-grid > *{margin: 0;}body{padding-top: 0px;padding-right: 0px;padding-bottom: 0px;padding-left: 0px;}a:where(:not(.wp-element-button)){text-decoration: underline;}.wp-element-button, .wp-block-button__link{background-color: #32373c;border-width: 0;color: #fff;font-family: inherit;font-size: inherit;line-height: inherit;padding: calc(0.667em + 2px) calc(1.333em + 2px);text-decoration: none;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-cacm-blue-color{color: var(--wp--preset--color--cacm-blue) !important;}.has-cacm-link-blue-color{color: var(--wp--preset--color--cacm-link-blue) !important;}.has-cacm-dark-blue-color{color: var(--wp--preset--color--cacm-dark-blue) !important;}.has-cacm-darker-blue-color{color: var(--wp--preset--color--cacm-darker-blue) !important;}.has-cacm-light-blue-color{color: var(--wp--preset--color--cacm-light-blue) !important;}.has-cacm-peach-color{color: var(--wp--preset--color--cacm-peach) !important;}.has-cacm-beige-color{color: var(--wp--preset--color--cacm-beige) !important;}.has-cacm-brown-color{color: var(--wp--preset--color--cacm-brown) !important;}.has-cacm-green-color{color: var(--wp--preset--color--cacm-green) !important;}.has-cacm-light-green-color{color: var(--wp--preset--color--cacm-light-green) !important;}.has-cacm-black-color{color: var(--wp--preset--color--cacm-black) !important;}.has-cacm-gray-100-color{color: var(--wp--preset--color--cacm-gray-100) !important;}.has-cacm-gray-200-color{color: var(--wp--preset--color--cacm-gray-200) !important;}.has-cacm-gray-300-color{color: var(--wp--preset--color--cacm-gray-300) !important;}.has-cacm-gray-500-color{color: var(--wp--preset--color--cacm-gray-500) !important;}.has-cacm-gray-600-color{color: var(--wp--preset--color--cacm-gray-600) !important;}.has-cacm-gray-700-color{color: var(--wp--preset--color--cacm-gray-700) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-cacm-blue-background-color{background-color: var(--wp--preset--color--cacm-blue) !important;}.has-cacm-link-blue-background-color{background-color: var(--wp--preset--color--cacm-link-blue) !important;}.has-cacm-dark-blue-background-color{background-color: var(--wp--preset--color--cacm-dark-blue) !important;}.has-cacm-darker-blue-background-color{background-color: var(--wp--preset--color--cacm-darker-blue) !important;}.has-cacm-light-blue-background-color{background-color: var(--wp--preset--color--cacm-light-blue) !important;}.has-cacm-peach-background-color{background-color: var(--wp--preset--color--cacm-peach) !important;}.has-cacm-beige-background-color{background-color: var(--wp--preset--color--cacm-beige) !important;}.has-cacm-brown-background-color{background-color: var(--wp--preset--color--cacm-brown) !important;}.has-cacm-green-background-color{background-color: var(--wp--preset--color--cacm-green) !important;}.has-cacm-light-green-background-color{background-color: var(--wp--preset--color--cacm-light-green) !important;}.has-cacm-black-background-color{background-color: var(--wp--preset--color--cacm-black) !important;}.has-cacm-gray-100-background-color{background-color: var(--wp--preset--color--cacm-gray-100) !important;}.has-cacm-gray-200-background-color{background-color: var(--wp--preset--color--cacm-gray-200) !important;}.has-cacm-gray-300-background-color{background-color: var(--wp--preset--color--cacm-gray-300) !important;}.has-cacm-gray-500-background-color{background-color: var(--wp--preset--color--cacm-gray-500) !important;}.has-cacm-gray-600-background-color{background-color: var(--wp--preset--color--cacm-gray-600) !important;}.has-cacm-gray-700-background-color{background-color: var(--wp--preset--color--cacm-gray-700) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-cacm-blue-border-color{border-color: var(--wp--preset--color--cacm-blue) !important;}.has-cacm-link-blue-border-color{border-color: var(--wp--preset--color--cacm-link-blue) !important;}.has-cacm-dark-blue-border-color{border-color: var(--wp--preset--color--cacm-dark-blue) !important;}.has-cacm-darker-blue-border-color{border-color: var(--wp--preset--color--cacm-darker-blue) !important;}.has-cacm-light-blue-border-color{border-color: var(--wp--preset--color--cacm-light-blue) !important;}.has-cacm-peach-border-color{border-color: var(--wp--preset--color--cacm-peach) !important;}.has-cacm-beige-border-color{border-color: var(--wp--preset--color--cacm-beige) !important;}.has-cacm-brown-border-color{border-color: var(--wp--preset--color--cacm-brown) !important;}.has-cacm-green-border-color{border-color: var(--wp--preset--color--cacm-green) !important;}.has-cacm-light-green-border-color{border-color: var(--wp--preset--color--cacm-light-green) !important;}.has-cacm-black-border-color{border-color: var(--wp--preset--color--cacm-black) !important;}.has-cacm-gray-100-border-color{border-color: var(--wp--preset--color--cacm-gray-100) !important;}.has-cacm-gray-200-border-color{border-color: var(--wp--preset--color--cacm-gray-200) !important;}.has-cacm-gray-300-border-color{border-color: var(--wp--preset--color--cacm-gray-300) !important;}.has-cacm-gray-500-border-color{border-color: var(--wp--preset--color--cacm-gray-500) !important;}.has-cacm-gray-600-border-color{border-color: var(--wp--preset--color--cacm-gray-600) !important;}.has-cacm-gray-700-border-color{border-color: var(--wp--preset--color--cacm-gray-700) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-primary-gradient-gradient-background{background: var(--wp--preset--gradient--primary-gradient) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}.has-work-xxxs-font-size{font-size: var(--wp--preset--font-size--work-xxxs) !important;}.has-work-xxs-font-size{font-size: var(--wp--preset--font-size--work-xxs) !important;}.has-work-xs-font-size{font-size: var(--wp--preset--font-size--work-xs) !important;}.has-work-sm-font-size{font-size: var(--wp--preset--font-size--work-sm) !important;}.has-work-md-font-size{font-size: var(--wp--preset--font-size--work-md) !important;}.has-work-lg-font-size{font-size: var(--wp--preset--font-size--work-lg) !important;}.has-work-xl-font-size{font-size: var(--wp--preset--font-size--work-xl) !important;}.has-work-xxl-font-size{font-size: var(--wp--preset--font-size--work-xxl) !important;}.has-work-xxxl-font-size{font-size: var(--wp--preset--font-size--work-xxxl) !important;}.has-inter-xxxs-font-size{font-size: var(--wp--preset--font-size--inter-xxxs) !important;}.has-inter-xxs-font-size{font-size: var(--wp--preset--font-size--inter-xxs) !important;}.has-inter-xs-font-size{font-size: var(--wp--preset--font-size--inter-xs) !important;}.has-inter-sm-font-size{font-size: var(--wp--preset--font-size--inter-sm) !important;}.has-inter-md-font-size{font-size: var(--wp--preset--font-size--inter-md) !important;}.has-inter-lg-font-size{font-size: var(--wp--preset--font-size--inter-lg) !important;}.has-inter-xl-font-size{font-size: var(--wp--preset--font-size--inter-xl) !important;}.has-inter-xxl-font-size{font-size: var(--wp--preset--font-size--inter-xxl) !important;}.has-inter-xxxl-font-size{font-size: var(--wp--preset--font-size--inter-xxxl) !important;}.has-inter-font-family{font-family: var(--wp--preset--font-family--inter) !important;}.has-work-sans-font-family{font-family: var(--wp--preset--font-family--work-sans) !important;}.wp-block-heading.has-work-xxs-font-size{font-size: var(--wp--preset--font-size--work-xxs) !important;}.wp-block-heading.has-work-xs-font-size{font-size: var(--wp--preset--font-size--work-xs) !important;}.wp-block-heading.has-work-sm-font-size{font-size: var(--wp--preset--font-size--work-sm) !important;}.wp-block-heading.has-work-md-font-size{font-size: var(--wp--preset--font-size--work-md) !important;}.wp-block-heading.has-work-lg-font-size{font-size: var(--wp--preset--font-size--work-lg) !important;}.wp-block-heading.has-work-xl-font-size{font-size: var(--wp--preset--font-size--work-xl) !important;}
.wp-block-navigation a:where(:not(.wp-element-button)){color: inherit;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
.wp-block-pullquote{font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='qm-object-cache-style-css' href='https://cacm.acm.org/wp-content/mu-plugins/qm-plugins/qm-object-cache/css/style.css?ver=0.2' type='text/css' media='all' />
<link rel='stylesheet' id='cacm-global-css' href='https://cacm.acm.org/wp-content/themes/cacm/client/build/css/global.min.css?ver=6f460684b3d49b0b7b10' type='text/css' media='all' />
<link rel='stylesheet' id='cacm-article-css' href='https://cacm.acm.org/wp-content/themes/cacm/client/build/css/article.min.css?ver=5b0c5b237be70ff9cb95' type='text/css' media='all' />
<link rel="https://api.w.org/" href="https://cacm.acm.org/wp-json/" /><link rel="alternate" type="application/json" href="https://cacm.acm.org/wp-json/wp/v2/digital-library/754572" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://cacm.acm.org/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress 6.5.3" />
<link rel="canonical" href="https://cacm.acm.org/research/compiler-driven-fpga-virtualization-with-synergy/" />
<link rel='shortlink' href='https://cacm.acm.org/?p=754572' />
<link rel="alternate" type="application/json+oembed" href="https://cacm.acm.org/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fcacm.acm.org%2Fresearch%2Fcompiler-driven-fpga-virtualization-with-synergy%2F" />
<link rel="alternate" type="text/xml+oembed" href="https://cacm.acm.org/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fcacm.acm.org%2Fresearch%2Fcompiler-driven-fpga-virtualization-with-synergy%2F&#038;format=xml" />
        <style>
        .getty.aligncenter {
            text-align: center;
        }
        .getty.alignleft {
            float: none;
            margin-right: 0;
        }
        .getty.alignleft > div {
            float: left;
            margin-right: 5px;
        }
        .getty.alignright {
            float: none;
            margin-left: 0;
        }
        .getty.alignright > div {
            float: right;
            margin-left: 5px;
        }
        </style>
        	<style>img#wpstats{display:none}</style>
		<link rel="icon" href="https://cacm.acm.org/wp-content/uploads/2023/11/cropped-cropped-cacm_favicon-1.png?w=32" sizes="32x32" />
<link rel="icon" href="https://cacm.acm.org/wp-content/uploads/2023/11/cropped-cropped-cacm_favicon-1.png?w=192" sizes="192x192" />
<link rel="apple-touch-icon" href="https://cacm.acm.org/wp-content/uploads/2023/11/cropped-cropped-cacm_favicon-1.png?w=180" />
<meta name="msapplication-TileImage" content="https://cacm.acm.org/wp-content/uploads/2023/11/cropped-cropped-cacm_favicon-1.png?w=270" />
</head>

<body class="digital-library-template-default single single-digital-library postid-754572">
<svg xmlns="http://www.w3.org/2000/svg" focusable="false" height="0" role="none" style="left:-9999px;overflow:hidden;position:absolute" viewBox="0 0 0 0" width="0"><symbol id="am-symbol-icon-arrow-left" viewBox="0 0 18 12"><path clip-rule="evenodd" d="M18 6a.643.643 0 0 1-.643.643H2.196l4.046 4.044a.644.644 0 0 1-.91.91L.188 6.456a.643.643 0 0 1 0-.91L5.33.402a.644.644 0 1 1 .91.91L2.197 5.358h15.161A.643.643 0 0 1 18 6Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-arrow-right" viewBox="0 0 14 9"><path clip-rule="evenodd" d="M0 4.5A.5.5 0 0 1 .5 4h11.793L9.146.854a.5.5 0 1 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 1 1-.708-.708L12.293 5H.5a.5.5 0 0 1-.5-.5Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-comment" viewBox="0 0 19 20"><path clip-rule="evenodd" d="M1.781 1.542a.693.693 0 0 0-.693.693v11.876a.693.693 0 0 0 .693.693h2.375c.273 0 .494.221.494.494v2.574l3.96-2.97a.494.494 0 0 1 .296-.098h8.313a.693.693 0 0 0 .693-.694V2.236a.693.693 0 0 0-.693-.693H1.78ZM.592 1.046a1.681 1.681 0 0 1 1.19-.492h15.437A1.681 1.681 0 0 1 18.9 2.235v11.876a1.681 1.681 0 0 1-1.681 1.681H9.07l-4.618 3.464a.494.494 0 0 1-.79-.396v-3.068H1.78A1.682 1.682 0 0 1 .1 14.111V2.235c0-.446.177-.873.492-1.189Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-digital-library" viewBox="43 0 40 40"><g clip-path="url(#a)">
    <path d="m95.468 15.585-1.58 1.579c-.262.263-.584.41-.964.41h-6.813V4.707h6.813c.38 0 .702.146.965.409l1.579 1.579c.263.263.41.585.41.965v6.959c0 .38-.118.702-.41.965zm-1.9-7.544c0-.088-.03-.205-.118-.263l-.76-.76c-.088-.088-.146-.117-.263-.117H88.42v8.45h4.006c.117 0 .205-.03.263-.117l.76-.76a.357.357 0 0 0 .117-.264V8.04zm5.877 9.532v-2.047h2.309V6.754h-2.31V4.708h6.93v2.046h-2.31v8.772h2.31v2.047h-6.93zm19.853 0-.292-1.637-1.228 1.228c-.263.263-.585.41-.965.41h-3.918c-.38 0-.702-.147-.965-.41l-1.579-1.58a1.326 1.326 0 0 1-.409-.964V7.66c0-.38.146-.7.409-.964l1.579-1.579c.263-.263.585-.41.965-.41h5c.38 0 .701.147.965.41l1.666 1.667-1.549 1.55-1.316-1.316c-.088-.088-.146-.117-.263-.117h-4.006c-.117 0-.205.029-.263.117l-.761.76a.36.36 0 0 0-.117.263v6.199c0 .088.03.204.117.263l.761.76c.087.088.146.117.263.117h3.041c.117 0 .204-.03.263-.117l1.754-1.754c.088-.088.117-.146.117-.263v-.995h-3.187V10.06h5.497v4.97l.497 2.573h-2.076v-.029zm5.38 0v-2.047h2.31V6.754h-2.31V4.708h6.93v2.046h-2.31v8.772h2.31v2.047h-6.93zM140.029 6.9v10.644h-2.31V6.9h-3.713V4.708h9.737V6.9h-3.714zm14.299 10.673-1.229-3.216h-5.117l-1.228 3.216h-2.31l4.767-12.865h2.748l4.708 12.865h-2.339zm-3.772-10.38-1.784 5.088h3.567l-1.783-5.088zM160 17.573V4.708h2.31V15.35h6.316v2.193H160v.03zM86.111 35.41V22.543h2.31v10.643h6.316v2.193H86.11v.03zm11.813 0v-2.047h2.31V24.59h-2.31v-2.047h6.93v2.047h-2.31v8.772h2.31v2.046h-6.93zm20.497-1.638-1.257 1.257a1.28 1.28 0 0 1-.936.38h-7.164V22.544h7.164c.38 0 .673.146.936.38l1.257 1.257c.263.263.409.585.409.965v1.755c0 .38-.146.701-.409.965l-1.111 1.11 1.111 1.112c.263.263.409.584.409.965v1.783c0 .322-.146.673-.409.936zm-1.901-8.216c0-.117-.029-.205-.116-.264l-.439-.438c-.088-.088-.146-.117-.263-.117h-4.328v3.129h3.86c.088 0 .205-.03.263-.117l.877-.878c.088-.087.117-.146.117-.263v-1.052h.029zm0 5.789c0-.117-.029-.205-.116-.263l-.936-.936c-.088-.088-.146-.117-.263-.117h-3.831v3.158h4.328c.087 0 .204-.03.263-.117l.439-.438c.087-.088.116-.147.116-.264v-1.023zm14.65 4.065-3.802-4.884a.402.402 0 0 0-.321-.175h-1.404v5.058h-2.31V22.544h7.164c.38 0 .673.146.936.38l1.257 1.257c.263.263.409.585.409.965v2.544c0 .38-.146.702-.409.965l-1.257 1.257c-.263.263-.556.38-.936.38h-.468l3.977 5.059h-2.836v.058zm-.381-9.854c0-.117-.029-.205-.116-.264l-.439-.438c-.088-.088-.146-.117-.263-.117h-4.328v3.392h4.328c.117 0 .204-.03.263-.117l.439-.41c.087-.087.116-.146.116-.263v-1.783zm15.117 9.854-1.228-3.217h-5.117l-1.228 3.216h-2.31l4.766-12.865h2.749l4.708 12.865h-2.34zm-3.772-10.38-1.783 5.087h3.538l-1.755-5.088zm17.106 10.38-3.801-4.884a.405.405 0 0 0-.322-.175h-1.404v5.058h-2.309V22.544h7.163c.38 0 .673.146.936.38l1.257 1.257c.263.263.41.585.41.965v2.544c0 .38-.147.702-.41.965l-1.257 1.257c-.263.263-.556.38-.936.38h-.468l3.977 5.059h-2.836v.058zm-.41-9.854c0-.117-.029-.205-.117-.264l-.438-.438c-.088-.088-.146-.117-.263-.117h-4.328v3.392h4.328c.117 0 .204-.03.263-.117l.438-.41c.088-.087.117-.146.117-.263v-1.783zm11.696 4.152v5.672h-2.31v-5.672l-4.356-7.164h2.514l3.012 5 2.982-5h2.486l-4.328 7.164zM12.193 26.199 7.485 13.363H4.737L0 26.199h2.31l1.199-3.216h5.117l1.199 3.216h2.368zm-4.327-5.263h-3.54l1.784-5.088 1.755 5.088zm15.818 3.187-1.55-1.55-1.315 1.316c-.088.088-.146.117-.263.117h-3.188c-.116 0-.204-.03-.263-.117l-.76-.76a.357.357 0 0 1-.117-.264v-6.17c0-.087.03-.204.117-.262l.76-.76c.088-.088.146-.117.263-.117h3.188c.116 0 .204.029.263.117l1.316 1.315 1.55-1.55-1.668-1.666a1.326 1.326 0 0 0-.964-.41H16.87c-.38 0-.701.147-.965.41l-1.579 1.579a1.326 1.326 0 0 0-.409.965v6.959c0 .38.146.702.41.965l1.578 1.579c.264.263.585.41.965.41h4.182c.38 0 .701-.147.964-.41l1.667-1.696zm15.79 2.076V13.363h-3.538l-3.041 9.941-3.041-9.941h-3.538v12.836h2.251V15.994L31.696 26.2h2.398l3.128-10.205V26.2h2.252zM58.246 3.421l-5.351-1.403-1.404 5.35 3.86-1.052 2.895-2.895zm-4.474 4.532-7.72 2.106 1.17 4.385 6.55-6.49zm26.17 6.988 1.432-5.467-5.35-1.375 1.081 4.065 2.837 2.777zm-33.1 10.205-1.433 5.38 5.351 1.375-1.052-3.89-2.866-2.865zM73.333 2.66 68.89 3.89l6.579 6.579-2.135-7.807zm-.409 29.416 7.836-2.134-1.228-4.474-6.608 6.608zM68.45 36.55l5.468 1.433 1.404-5.351-4.065 1.081-2.807 2.837zm-15 .79 4.386-1.17-6.462-6.492 2.076 7.661zm26.2-13.656L83.332 20 71.637 8.304l-4.561-4.561L63.333 0l-6.52 6.52-9.708 9.708L43.333 20l6.58 6.579 9.707 9.707L63.333 40l6.492-6.491 9.824-9.825zm-16.434-.643c0 .35-.117.672-.38.906l-1.491 1.492c-.263.263-.556.38-.906.38h-6.462V13.626h6.462c.35 0 .672.117.906.38l1.491 1.491c.263.263.38.556.38.907v6.637zm3.597-9.415h2.193v10.117H75v2.076h-8.187V13.626z"></path>
    <path d="M60.205 15.819a.37.37 0 0 0-.264-.117h-3.8v8.04h3.8c.117 0 .176-.029.264-.116l.701-.702c.059-.088.117-.175.117-.263v-5.877a.357.357 0 0 0-.117-.264l-.701-.701z"></path>
  </g><defs>
    <clipPath id="a">
      <path d="M0 0h174.854v40H0z"></path>
    </clipPath>
  </defs></symbol><symbol id="am-symbol-icon-pdf-download" viewBox="0 0 19 20"><path clip-rule="evenodd" d="M1.781 1.542a.693.693 0 0 0-.693.693v13.063a.693.693 0 0 0 .693.694h4.75a.494.494 0 1 1 0 .988h-4.75A1.682 1.682 0 0 1 .1 15.298V2.235A1.681 1.681 0 0 1 1.78.554h8.415c.446 0 .873.177 1.188.492l2.274 2.274c.315.315.492.743.492 1.188v2.477a.494.494 0 1 1-.988 0V4.508a.694.694 0 0 0-.203-.49m0 0-2.273-2.273a.694.694 0 0 0-.49-.203H1.78m11.875 8.312a4.256 4.256 0 1 0 0 8.512 4.256 4.256 0 0 0 0-8.512Zm-5.244 4.257a5.244 5.244 0 1 1 10.488 0 5.244 5.244 0 0 1-10.488 0Zm5.244-2.87c.273 0 .494.222.494.495v3.557l.938-.938a.494.494 0 0 1 .699.698l-1.782 1.782a.494.494 0 0 1-.698 0l-1.781-1.782a.494.494 0 0 1 .698-.698l.938.938v-3.557c0-.273.221-.495.494-.495Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-print" viewBox="0 0 19 20"><path clip-rule="evenodd" d="M5.344 1.541a.693.693 0 0 0-.694.693v3.069h9.7V2.234a.693.693 0 0 0-.694-.693H5.344Zm9.994 3.762V2.234A1.681 1.681 0 0 0 13.656.553H5.344a1.681 1.681 0 0 0-1.682 1.681v3.069h-1.88A1.682 1.682 0 0 0 .1 6.984v5.938a1.682 1.682 0 0 0 1.681 1.681h1.881v4.257c0 .272.221.494.494.494h10.688a.494.494 0 0 0 .494-.494v-4.256h1.88a1.682 1.682 0 0 0 1.682-1.682V6.984a1.681 1.681 0 0 0-1.681-1.681h-1.881ZM1.78 6.291a.693.693 0 0 0-.693.693v5.938a.694.694 0 0 0 .693.694h1.881v-3.069c0-.273.221-.494.494-.494h10.688c.273 0 .494.221.494.494v3.069h1.88a.694.694 0 0 0 .694-.694V6.984a.693.693 0 0 0-.693-.693H1.78Zm12.569 4.75h-9.7v7.325h9.7V11.04ZM2.475 8.172c0-.273.22-.494.494-.494h1.187a.494.494 0 1 1 0 .988H2.97a.494.494 0 0 1-.494-.494Zm3.562 4.75c0-.273.221-.494.494-.494h5.938a.494.494 0 1 1 0 .988H6.53a.494.494 0 0 1-.494-.494Zm0 2.375c0-.273.221-.494.494-.494h4.157a.494.494 0 1 1 0 .988H6.53a.494.494 0 0 1-.494-.494Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-share" viewBox="0 0 19 18"><path clip-rule="evenodd" d="M14.844 1.73a2.475 2.475 0 1 0 0 4.949 2.475 2.475 0 0 0 0-4.95ZM11.38 4.203a3.463 3.463 0 1 1 .447 1.703L7.531 7.58a3.473 3.473 0 0 1-.087 1.873l4.555 2.278a3.463 3.463 0 1 1-.442.883L7 10.335a3.463 3.463 0 1 1 .171-3.677l4.298-1.671a3.473 3.473 0 0 1-.089-.783Zm1.242 8.407a2.475 2.475 0 1 0 4.441 2.187 2.475 2.475 0 0 0-4.44-2.187ZM4.156 5.886a2.475 2.475 0 1 0 0 4.95 2.475 2.475 0 0 0 0-4.95Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-bookmark" viewBox="0 0 13 19"><path clip-rule="evenodd" d="M12.05.948c-.293-.32-.7-.494-1.114-.494H2.007c-.421 0-.821.175-1.121.494a1.73 1.73 0 0 0-.457 1.186v15.488c0 .198.05.388.142.563.1.167.236.304.408.395a.89.89 0 0 0 .535.122.956.956 0 0 0 .522-.19l2.464-1.84h.007l1.964-1.459 1.958 1.46h.014l2.464 1.839c.15.114.329.182.522.19a.89.89 0 0 0 .535-.122 1.03 1.03 0 0 0 .4-.395c.1-.175.15-.365.15-.563V2.134c0-.449-.164-.874-.464-1.186ZM3.771 16.011 1.5 17.7s-.029.015-.05.022c-.014 0-.029-.007-.043-.015-.021-.008-.028-.023-.043-.038-.007-.015-.007-.03-.007-.053V2.134a.74.74 0 0 1 .186-.494.639.639 0 0 1 .464-.198h1.764v14.57Zm4.465-.691-1.5-1.125a.462.462 0 0 0-.536 0L4.7 15.32V1.442h3.536V15.32Zm3.35 2.378v-.053s-.015.015-.015.023a.089.089 0 0 1-.035.038c-.015 0-.036.015-.05.015-.015-.007-.036-.007-.05-.023l-2.272-1.687V1.442h1.772c.171 0 .335.069.457.198a.747.747 0 0 1 .193.494v15.564Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-bookmarked" viewBox="0 0 17 25"><path clip-rule="evenodd" d="M16.27.65C15.86.23 15.29 0 14.71 0H2.21A2.201 2.201 0 0 0 0 2.21v20.38c0 .26.07.51.2.74.14.22.33.4.57.52.23.13.49.18.75.16.26-.01.51-.1.73-.25l3.45-2.42h.01l1.15-.8 1.6-1.12 1.6 1.12 1.14.8h.02l3.45 2.42c.21.15.46.24.73.25.26.02.52-.03.75-.16.23-.12.43-.3.56-.52.14-.23.21-.48.21-.74V2.21c0-.59-.23-1.15-.65-1.56ZM4.68 20.47 1.5 22.69s-.04.02-.07.03c-.02 0-.04-.01-.06-.02-.03-.01-.04-.03-.06-.05V2.21c0-.24.09-.47.26-.65.17-.17.41-.26.65-.26h2.47v19.17h-.01Zm10.94 2.22v-.07s-.02.02-.02.03a.12.12 0 0 1-.05.05c-.02 0-.05.02-.07.02-.02-.01-.05-.01-.07-.03l-3.18-2.22V1.3h2.48a.9.9 0 0 1 .64.26c.17.18.27.41.27.65v20.48Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-chevron-down" viewBox="0 0 16 16"><path d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-search" viewBox="0 0 24 24"><path d="m23 21.85-6.145-6.146a8.966 8.966 0 1 0-1.151 1.15L21.849 23 23 21.85ZM2.656 9.98a7.324 7.324 0 1 1 7.324 7.324A7.332 7.332 0 0 1 2.656 9.98Z" fill="#015FAC"></path></symbol><symbol id="am-symbol-cacm-logo-small"><path d="M48.75 24c0 13.255-10.745 24-24 24s-24-10.745-24-24 10.745-24 24-24 24 10.745 24 24Z" fill="#fff"></path><path d="m24.998 9-15 15 15 15 15-15-15-15Z" fill="#027BA3"></path><path d="M34.196 24A9.195 9.195 0 0 1 25 33.196 9.195 9.195 0 0 1 15.804 24 9.195 9.195 0 0 1 25 14.804 9.195 9.195 0 0 1 34.196 24Z" fill="#fff"></path><path d="M33.28 24A8.275 8.275 0 0 1 25 32.275 8.275 8.275 0 0 1 16.72 24c0-4.57 3.705-8.28 8.28-8.28A8.276 8.276 0 0 1 33.28 24Z" fill="#027BA3"></path><path d="M20.18 25.613c-.084.07-.163.133-.23.191a1.641 1.641 0 0 1-.596.292c-.104.025-.25.041-.441.041-.35 0-.642-.116-.875-.354a1.219 1.219 0 0 1-.35-.891c0-.296.058-.534.175-.717.116-.183.287-.325.508-.433.225-.109.492-.184.804-.225.313-.042.646-.075 1.004-.1v-.021c0-.221-.083-.371-.241-.454-.163-.084-.405-.125-.73-.125-.145 0-.316.025-.512.079s-.388.12-.571.204h-.104v-.967c.12-.037.32-.079.596-.125.275-.05.55-.075.829-.075.687 0 1.187.117 1.5.342.312.23.47.575.47 1.046v2.712h-1.241v-.42h.004Zm0-.621v-.825c-.21.02-.38.041-.505.054-.13.017-.258.046-.38.091a.561.561 0 0 0-.253.171.488.488 0 0 0-.088.305c0 .187.05.312.15.383.1.07.246.104.442.104a.802.802 0 0 0 .329-.075c.113-.05.212-.12.304-.208ZM24.154 26.137c-.329 0-.633-.041-.904-.125a1.897 1.897 0 0 1-.712-.383c-.2-.17-.355-.387-.467-.65a2.336 2.336 0 0 1-.167-.925c0-.379.058-.704.183-.97.121-.267.284-.488.492-.659.2-.167.433-.288.7-.367a2.98 2.98 0 0 1 1.504-.046c.221.05.442.134.667.242v1.067h-.158c-.05-.046-.113-.1-.184-.154a1.673 1.673 0 0 0-.237-.159 1.349 1.349 0 0 0-.683-.175c-.317 0-.563.109-.738.33-.175.22-.262.516-.262.891 0 .4.091.696.279.892.187.196.433.296.741.296.155 0 .296-.017.413-.055a1.27 1.27 0 0 0 .517-.28c.058-.049.112-.099.154-.14h.158v1.062l-.246.108a2.925 2.925 0 0 1-.629.175 2.776 2.776 0 0 1-.417.026h-.004ZM30.867 26.033v-1.991c0-.196 0-.363-.013-.496a1.102 1.102 0 0 0-.062-.33.386.386 0 0 0-.167-.187.715.715 0 0 0-.317-.058.665.665 0 0 0-.279.062 1.99 1.99 0 0 0-.304.175v2.83h-1.242v-1.992c0-.192 0-.358-.012-.496a1 1 0 0 0-.067-.333.386.386 0 0 0-.166-.188.707.707 0 0 0-.313-.058c-.1 0-.2.025-.3.07-.096.05-.192.105-.283.167v2.83H26.1v-3.984h1.242v.438c.204-.175.396-.309.575-.405a1.27 1.27 0 0 1 .604-.145c.246 0 .458.058.642.175.183.116.325.287.42.516.238-.22.467-.391.675-.512.213-.121.425-.18.642-.18.183 0 .35.03.496.088.146.058.27.146.37.267.113.129.197.279.25.454.055.175.084.408.084.692v2.596h-1.242l.009-.005Z" fill="#fff"></path></symbol><symbol id="am-symbol-cacm-logo" viewBox="30.79 34.55 548.86 88.05"><path d="M54.75 71.41c-.8.8-1.77 1.2-2.85 1.2H39.52c-1.08 0-2.05-.4-2.85-1.2l-4.68-4.68c-.8-.8-1.2-1.77-1.2-2.85v-20.6c0-1.08.4-2.05 1.2-2.85l4.68-4.68c.8-.8 1.77-1.2 2.85-1.2H51.9c1.08 0 2.05.4 2.85 1.2l4.96 4.96-4.62 4.56-3.88-3.88c-.23-.23-.46-.34-.8-.34H41c-.34 0-.57.11-.8.34l-2.23 2.23c-.23.23-.34.51-.34.8v18.31c0 .29.11.57.34.8l2.23 2.23c.23.23.46.34.8.34h9.41c.34 0 .57-.11.8-.34l3.88-3.88 4.62 4.56-4.96 4.97zm44.5-4.68-4.68 4.68c-.8.8-1.77 1.2-2.85 1.2H76.83c-1.08 0-2.05-.4-2.85-1.2l-4.68-4.68c-.8-.8-1.2-1.77-1.2-2.85v-20.6c0-1.08.4-2.05 1.2-2.85l4.68-4.68c.8-.8 1.77-1.2 2.85-1.2h14.89c1.08 0 2.05.4 2.85 1.2l4.68 4.68c.8.8 1.2 1.77 1.2 2.85v20.6c0 1.08-.4 2.05-1.2 2.85zM93.6 44.42c0-.29-.11-.57-.34-.8l-2.23-2.23c-.23-.23-.46-.34-.8-.34H78.31c-.34 0-.57.11-.8.34l-2.23 2.23c-.23.23-.34.51-.34.8v18.31c0 .29.11.57.34.8l2.23 2.23c.23.23.46.34.8.34h11.92c.34 0 .57-.11.8-.34l2.23-2.23c.23-.23.34-.51.34-.8V44.42zm50.44 28.19V42.37l-9.3 30.24h-7.07l-9.3-30.24v30.24h-6.68V34.55h10.5l9.01 29.5 9.01-29.5h10.5V72.6h-6.67zm52.65 0V42.37l-9.3 30.24h-7.07l-9.3-30.24v30.24h-6.68V34.55h10.5l9.01 29.5 9.01-29.5h10.5V72.6h-6.67zm46.66-5.88-4.68 4.68c-.8.8-1.77 1.2-2.85 1.2h-11.47c-1.08 0-2.05-.4-2.85-1.2l-4.68-4.68c-.8-.8-1.2-1.77-1.2-2.85V34.55h6.85v28.18c0 .29.11.57.34.8l2.23 2.23c.23.23.46.34.8.34h8.5c.34 0 .57-.11.8-.34l2.23-2.23c.23-.23.34-.51.34-.8V34.55h6.85v29.33c-.01 1.08-.41 2.05-1.21 2.85zm32.69 5.88-12.55-29.5v29.5h-6.67V34.55h9.7l12.55 29.5v-29.5h6.67V72.6h-9.7zm20.82 0v-6.05h6.85V40.6h-6.85v-6.05h20.54v6.05h-6.85v25.96h6.85v6.05h-20.54zm53.46-1.2c-.8.8-1.77 1.2-2.85 1.2h-12.38c-1.08 0-2.05-.4-2.85-1.2l-4.68-4.68c-.8-.8-1.2-1.77-1.2-2.85v-20.6c0-1.08.4-2.05 1.2-2.85l4.68-4.68c.8-.8 1.77-1.2 2.85-1.2h12.38c1.08 0 2.05.4 2.85 1.2l4.96 4.96-4.62 4.56-3.88-3.88c-.23-.23-.46-.34-.8-.34h-9.41c-.34 0-.57.11-.8.34l-2.22 2.23c-.23.23-.34.51-.34.8v18.31c0 .29.11.57.34.8l2.22 2.23c.23.23.46.34.8.34h9.41c.34 0 .57-.11.8-.34l3.88-3.88 4.62 4.56-4.96 4.97zm39.47 1.2-3.59-9.53h-15.18l-3.6 9.53h-6.85l14.09-38.05h8.1l13.98 38.05h-6.95zm-11.18-30.7-5.25 15.06h10.5l-5.25-15.06zm35.94-.85v31.55h-6.85V41.06h-11.01v-6.5h28.87v6.5h-11.01zm19.27 31.55v-6.05h6.85V40.6h-6.85v-6.05h20.54v6.05h-6.85v25.96h6.85v6.05h-20.54zm61.89-5.88-4.68 4.68c-.8.8-1.77 1.2-2.85 1.2h-14.89c-1.08 0-2.05-.4-2.85-1.2l-4.68-4.68c-.8-.8-1.2-1.77-1.2-2.85v-20.6c0-1.08.4-2.05 1.2-2.85l4.68-4.68c.8-.8 1.77-1.2 2.85-1.2h14.89c1.08 0 2.05.4 2.85 1.2l4.68 4.68c.8.8 1.2 1.77 1.2 2.85v20.6c0 1.08-.4 2.05-1.2 2.85zm-5.64-22.31c0-.29-.11-.57-.34-.8l-2.22-2.23c-.23-.23-.46-.34-.8-.34h-11.92c-.34 0-.57.11-.8.34l-2.22 2.23c-.23.23-.34.51-.34.8v18.31c0 .29.12.57.34.8l2.22 2.23c.23.23.46.34.8.34h11.92c.34 0 .57-.11.8-.34l2.22-2.23c.23-.23.34-.51.34-.8V44.42zm37.65 28.19-12.55-29.5v29.5h-6.68V34.55h9.7l12.55 29.5v-29.5h6.68V72.6h-9.7zm50.72-5.88-4.68 4.68c-.8.8-1.77 1.2-2.85 1.2h-15.92c-1.08 0-2.05-.4-2.85-1.2l-4.85-4.85 4.56-4.62 3.82 3.82c.23.23.46.34.8.34h12.95c.34 0 .57-.11.8-.34l2.22-2.23c.23-.23.34-.51.34-.8v-3.65c0-.57-.51-1.08-1.08-1.14l-20.48-2.74c-2.23-.29-3.94-2.28-3.94-4.45v-7.47c0-1.08.4-2.05 1.2-2.85l4.68-4.68c.8-.8 1.77-1.2 2.85-1.2h15.92c1.08 0 2.05.4 2.85 1.2l4.85 4.85-4.56 4.62-3.82-3.82c-.23-.23-.46-.34-.8-.34H557.5c-.34 0-.57.11-.8.34l-2.22 2.23c-.23.23-.34.51-.34.8v3.65c0 .57.46 1.08 1.03 1.14l20.54 2.74c2.22.29 3.94 2.28 3.94 4.45v7.47c-.01 1.08-.41 2.05-1.21 2.85zM263.05 90.51l-.88.88c-.15.15-.33.22-.54.22h-2.79a.79.79 0 0 1-.54-.22l-.88-.88a.732.732 0 0 1-.22-.54v-3.86c0-.2.07-.38.22-.54l.88-.88c.15-.15.33-.22.54-.22h2.79c.2 0 .39.07.54.22l.88.88c.15.15.22.33.22.54v3.86c0 .2-.07.39-.22.54zm-1.06-4.19a.22.22 0 0 0-.06-.15l-.42-.42a.204.204 0 0 0-.15-.06h-2.24c-.06 0-.11.02-.15.06l-.42.42a.22.22 0 0 0-.06.15v3.43c0 .05.02.11.06.15l.42.42c.04.04.09.06.15.06h2.24c.06 0 .11-.02.15-.06l.42-.42c.04-.04.06-.1.06-.15v-3.43zm5.41 2.33v2.96h-1.28v-7.13h4.78v1.22h-3.5v1.73h3.5v1.22h-3.5zm12.04-2.96v5.92h-1.28v-5.92h-2.06v-1.22h5.41v1.22h-2.07zm8.45 5.92v-2.96h-2.86v2.96h-1.28v-7.13h1.28v2.95h2.86v-2.95h1.28v7.13h-1.28zm4.43 0v-7.13h4.78v1.22h-3.5v1.73h3.5v1.22h-3.5v1.74h3.5v1.22h-4.78zm30.16 30.99-3.59-9.53h-15.18l-3.59 9.53h-6.85l14.09-38.05h8.1l13.98 38.05h-6.96zM311.3 91.91l-5.25 15.06h10.5l-5.25-15.06zm49.12 29.49c-.8.8-1.77 1.2-2.85 1.2h-12.38c-1.08 0-2.05-.4-2.85-1.2l-4.68-4.68c-.8-.8-1.2-1.77-1.2-2.85v-20.6c0-1.08.4-2.05 1.2-2.85l4.68-4.68c.8-.8 1.77-1.2 2.85-1.2h12.38c1.08 0 2.05.4 2.85 1.2l4.96 4.96-4.62 4.56-3.88-3.88c-.23-.23-.46-.34-.8-.34h-9.41c-.34 0-.57.11-.8.34l-2.22 2.23c-.23.23-.34.51-.34.8v18.31c0 .29.12.57.34.8l2.22 2.23c.23.23.46.34.8.34h9.41c.34 0 .57-.12.8-.34l3.88-3.88 4.62 4.56-4.96 4.97zm47.51 1.2V92.36l-9.3 30.24h-7.07l-9.3-30.24v30.24h-6.68V84.55h10.5l9.01 29.5 9.01-29.5h10.5v38.05h-6.67z"></path></symbol><symbol id="am-symbol-icon-social-facebook"><path d="m22.723 20 .445-2.896h-2.779v-1.879c0-.792.388-1.564 1.633-1.564h1.263v-2.465S22.139 11 21.043 11c-2.289 0-3.784 1.387-3.784 3.898v2.206h-2.544V20h2.544v7h3.13v-7h2.334Z"></path></symbol><symbol id="am-symbol-icon-social-twitter"><path d="M27.613 13.657a7.057 7.057 0 0 1-2.03.557 3.54 3.54 0 0 0 1.555-1.955 7.08 7.08 0 0 1-2.245.857A3.53 3.53 0 0 0 22.313 12c-2.282 0-3.958 2.13-3.442 4.34a10.033 10.033 0 0 1-7.285-3.694 3.54 3.54 0 0 0 1.093 4.72 3.52 3.52 0 0 1-1.6-.442c-.038 1.637 1.135 3.169 2.835 3.51a3.542 3.542 0 0 1-1.596.06 3.538 3.538 0 0 0 3.301 2.454 7.106 7.106 0 0 1-5.232 1.465A10.006 10.006 0 0 0 15.804 26c6.562 0 10.27-5.542 10.046-10.513a7.195 7.195 0 0 0 1.763-1.83Z"></path></symbol><symbol id="am-symbol-icon-social-linkedin"><path d="M14.117 12.74c0 .96-.773 1.738-1.726 1.738a1.732 1.732 0 0 1-1.725-1.739c0-.96.772-1.739 1.725-1.739.953 0 1.726.78 1.726 1.74Zm.013 3.13h-3.478V27h3.479V15.87Zm5.553 0h-3.456V27h3.457v-5.843c0-3.248 4.194-3.514 4.194 0V27h3.47v-7.048c0-5.481-6.207-5.282-7.665-2.583v-1.5Z"></path></symbol><symbol id="am-symbol-icon-social-reddit"><path d="M27.764 21.071v.613c0 3.368-3.879 6.022-8.676 6.022-4.797 0-8.676-2.654-8.676-6.022v-.613c-1.122-.51-1.53-1.735-1.122-2.857.306-.817 1.123-1.327 1.939-1.225.612 0 1.123.204 1.531.612 1.735-1.122 3.776-1.837 5.818-1.837l1.122-5.103c0-.102.102-.204.102-.204.102-.102.205-.102.307-.102l3.572.816c.408-.714 1.327-1.123 2.041-.714.715.408 1.123 1.326.715 2.04-.409.715-1.327 1.124-2.042.715-.51-.204-.816-.714-.816-1.326l-3.164-.715-1.02 4.593c2.245.102 4.286.817 5.715 1.837.816-.816 2.245-.816 3.062 0 .408.408.612.919.612 1.531.306.919-.306 1.633-1.02 1.94Zm-11.942 1.123c.816 0 1.53-.714 1.53-1.53 0-.817-.714-1.532-1.53-1.532-.817 0-1.531.715-1.531 1.531 0 .817.612 1.531 1.53 1.531Zm7.042 1.94c-.204-.205-.408-.205-.51 0-.612.714-2.041.918-3.062.918-1.02 0-2.45-.204-3.062-.919-.204-.204-.408-.204-.51 0-.204.204-.204.409 0 .51 1.02 1.021 3.062 1.123 3.674 1.123.613 0 2.552-.102 3.675-1.122-.102-.102-.102-.306-.205-.51Zm1.225-3.47c0-.817-.714-1.532-1.53-1.532-.817 0-1.532.715-1.532 1.531 0 .817.715 1.531 1.531 1.531.817 0 1.531-.714 1.531-1.53Z"></path></symbol><symbol id="am-symbol-cacm-avatar-blank" viewBox="0 0 40 40"><g>
		<circle cx="20" cy="20" fill="var(--wp--preset--color--cacm-link-blue)" r="19" stroke="var(--wp--preset--color--cacm-link-blue)" stroke-width="2"></circle>
		<path clip-rule="evenodd" d="M5 33.23v-.73c0-4.987 9.994-7.5 15-7.5s15 2.513 15 7.5v.73A19.952 19.952 0 0 1 20 40a19.952 19.952 0 0 1-15-6.77ZM20 8.333a7.498 7.498 0 0 0-7.5 7.5c0 4.143 3.356 7.5 7.5 7.5s7.5-3.357 7.5-7.5c0-4.144-3.356-7.5-7.5-7.5Z" fill="var(--wp--preset--color--cacm-gray-200)" fill-rule="evenodd"></path>
	</g></symbol></svg><div id="page" class="site">
	<a class="skip-link" href="#content">Skip to content</a>

	<div class="site-header-wrapper" data-component="siteHeader">
		<header id="masthead" class="site-header site-header--no-js">
			<div class="site-header-container">
				
<button class="site-header-hamburger" aria-label="Main Menu">
	<span class="site-header-hamburger-closed">
		<svg xmlns="http://www.w3.org/2000/svg" version="1.2" viewBox="0 0 25 25">
	<path d="M.2.2h24.6v2.6H.2zm0 11h24.6v2.7H.2zm0 11h24.6v2.6H.2z" style="fill:#1a1a1a"/>
</svg>
 
	</span>
	<span class="site-header-hamburger-open">
		<svg xmlns="http://www.w3.org/2000/svg" version="1.2" viewBox="0 0 25 25">
	<path d="M1.7.9 24 23.8m-23 0L23.3.9" style="fill:none;stroke:#fff;stroke-width:1.3"/>
</svg>
 
	</span>
</button>
				<a class="site-header-logo" aria-label="Home" href="https://cacm.acm.org">
					<svg aria-hidden="true" focusable="false" width="548" height="88" fill="#000"><use href="#am-symbol-cacm-logo"></use></svg>					<svg aria-hidden="true" focusable="false" width="548" height="88" fill="#FFF"><use href="#am-symbol-cacm-logo"></use></svg>				</a>
				
<div class="site-header-topics-menu">
	<button class="site-header-topics-menu-toggle">
		Explore Topics		<svg xmlns="http://www.w3.org/2000/svg" width="14" height="8" fill="none">
	<path stroke="#1A1A1A" stroke-width="1.5" d="m1.5 1.5 5.5 5 5.5-5"/>
</svg>
 
	</button>
	<nav role="navigation" aria-label="Topics Menu" class="site-header-topics-menu-expanded" aria-hidden="true">
		<ul class="site-header-topics-menu-list">
																<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/architecture-and-hardware/">
							Architecture and Hardware						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/artificial-intelligence-machine-learning/">
							Artificial Intelligence and Machine Learning						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/computer-history/">
							Computer History						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/computing-applications/">
							Computing Applications						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/computing-profession/">
							Computing Profession						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/data-and-information/">
							Data and Information						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/education/">
							Education						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/hci/">
							HCI						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/philosophy-of-computing/">
							Philosophy of Computing						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/security-and-privacy/">
							Security and Privacy						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/society/">
							Society						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/software-engineering-and-programming-languages/">
							Software Engineering and Programming Languages						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/systems-and-networking/">
							Systems and Networking						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/theory/">
							Theory						</a>
					</li>
									</ul>
	</nav>
</div>
				
<div class="site-header-magazine-menu">
	<button class="site-header-magazine-menu-toggle">
		Latest Issue		<svg xmlns="http://www.w3.org/2000/svg" width="14" height="8" fill="none">
	<path stroke="#1A1A1A" stroke-width="1.5" d="m1.5 1.5 5.5 5 5.5-5"/>
</svg>
	</button>
	<nav role="navigation" aria-label="Magazine Menu" class="site-header-magazine-menu-expanded" aria-hidden="true">
					<a href="https://cacm.acm.org/issue/may-2024/">
				<figure class="site-header-magazine-menu-expanded-image">
					<div class="image-wrapper"><img width="1000" height="1338" src="https://cacm.acm.org/wp-content/uploads/2024/05/May2024-Cover.1000x1338.jpg?w=1000" class="attachment-original size-original" alt="May 2024 CACM cover" loading="lazy" decoding="async" srcset="https://cacm.acm.org/wp-content/uploads/2024/05/May2024-Cover.1000x1338.jpg 1000w, https://cacm.acm.org/wp-content/uploads/2024/05/May2024-Cover.1000x1338.jpg?resize=224,300 224w, https://cacm.acm.org/wp-content/uploads/2024/05/May2024-Cover.1000x1338.jpg?resize=768,1028 768w, https://cacm.acm.org/wp-content/uploads/2024/05/May2024-Cover.1000x1338.jpg?resize=765,1024 765w" sizes="(max-width: 1000px) 100vw, 1000px" /></div>				</figure>
			</a>
				<div class="site-header-magazine-menu-expanded-text">
							<div class="site-header-magazine-menu-expanded-current">
					<h2 class="site-header-magazine-menu-expanded-heading">
						Latest Issue					</h2>
					<a href="https://cacm.acm.org/issue/may-2024/" class="site-header-magazine-menu-expanded-issue"><b>May 2024</b>, Vol. 67 No. 5</a>
				</div>
										<div class="site-header-magazine-menu-expanded-previous">
					<h2 class="site-header-magazine-menu-expanded-heading">
						Previous Issue					</h2>
					<a href="https://cacm.acm.org/issue/april-2024/" class="site-header-magazine-menu-expanded-issue"><b>April 2024</b>, Vol. 67 No. 4</a>
				</div>
						<a href="https://cacm.acm.org/issues" class="site-header-magazine-menu-expanded-link">
				Explore the archive				<svg xmlns="http://www.w3.org/2000/svg" width="12" height="10" fill="none" aria-hidden="true" tabindex="-1">
	<path fill="#000" d="m7 0-.715.697 3.79 3.803H0v1h10.075l-3.79 3.787L7 10l5-5-5-5Z"/>
</svg>
			</a>
		</div>
	</nav>
</div>
				
<a href="https://cacm.acm.org/?s=" aria-label="Search" class="site-header-search">
	<span class="site-header-search-text">
		Search	</span>
	<svg aria-hidden="true" focusable="false" width="24" height="24" class="site-header-search-icon"><use href="#am-symbol-icon-search"></use></svg></a>
				<nav class="site-header-membership-nav">
	<button class="site-header-membership-nav__button">
		<span
			class="site-header-membership-nav__button-text">Open Membership Navigation</span>
		<span class="site-header-membership-nav__button-icon">
			<svg aria-hidden="true" focusable="false" width="40" height="40" tabindex="-1"><use href="#am-symbol-cacm-avatar-blank"></use></svg>		</span>
	</button>
	<div class="site-header-membership-nav__menu-container" aria-hidden="true">
		<ul class="site-header-membership-nav__menu">
			<li class="site-header-membership-nav__menu-item">
				<a href="https://cacm.acm.org/account/settings">Settings</a>
			</li>
			<li class="site-header-membership-nav__menu-item">
				<a href="https://cacm.acm.org/account/settings#member_topics">My Topics</a></li>
			<li class="site-header-membership-nav__menu-item">
				<a href="https://cacm.acm.org/account/bookmarks">Bookmarked Articles</a></li>
			<li class="site-header-membership-nav__menu-item">
				<a href="https://cacm.acm.org/logout/">Sign Out</a>
			</li>
		</ul>
	</div>
</nav>
<a class="site-header-member-login-link" href="https://cacm.acm.org/wp-login.php?saml_sso">Sign In</a>
<a href="https://cacm.acm.org/join-acm" class="site-header-cta-membership">
	<div class="site-header-cta-membership-container">
		<div class="site-header-cta-membership-text">
			Join ACM			<svg xmlns="http://www.w3.org/2000/svg" width="12" height="10" fill="none" aria-hidden="true" tabindex="-1">
	<path fill="#000" d="m7 0-.715.697 3.79 3.803H0v1h10.075l-3.79 3.787L7 10l5-5-5-5Z"/>
</svg>
		</div>
		<div class="site-header-cta-membership-logo">
			<svg aria-hidden="true" focusable="false" width="48" height="48"><use href="#am-symbol-cacm-logo-small"></use></svg>		</div>
	</div>
</a>
			</div>
			
<nav role="navigation" aria-label="Main Menu" class="site-header-hamburger-menu" aria-hidden="true">

	<!-- Search bar -->
	<form role="search" action="https://cacm.acm.org" method="get" class="site-header-hamburger-menu-search">
		<label for="site-navigation-expanded-search">
			<span class="site-header-hamburger-menu-search-icon">
					<svg xmlns="http://www.w3.org/2000/svg" width="21" height="21" fill="none">
		<path fill="#4C4C4C" d="m21 19.902-5.866-5.867a8.558 8.558 0 1 0-1.099 1.099L19.902 21 21 19.902ZM1.581 8.572a6.99 6.99 0 1 1 6.99 6.99 6.999 6.999 0 0 1-6.99-6.99Z"/>
	</svg>
			</span>
			<input type="text" name="s" id="site-navigation-expanded-search" class="site-header-hamburger-menu-search-input" placeholder="Search" value="" />
		</label>
	</form>

	<!-- Topics menu -->
	<div class="site-header-hamburger-menu-topics site-header-hamburger-menu-topics--expanded">
					<h2 class="site-header-hamburger-menu-heading">
				Topics				<span class="site-header-hamburger-menu-accordion-icon">
					<svg aria-hidden="true" focusable="false" width="16" height="16"><use href="#am-symbol-icon-chevron-down"></use></svg>				</span>
			</h2>
			<ul class="site-header-hamburger-menu-topics-menu">
																<li>
						<a href="https://cacm.acm.org/category/architecture-and-hardware/">
							Architecture and Hardware						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/artificial-intelligence-machine-learning/">
							Artificial Intelligence and Machine Learning						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/computer-history/">
							Computer History						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/computing-applications/">
							Computing Applications						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/computing-profession/">
							Computing Profession						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/data-and-information/">
							Data and Information						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/education/">
							Education						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/hci/">
							HCI						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/philosophy-of-computing/">
							Philosophy of Computing						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/security-and-privacy/">
							Security and Privacy						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/society/">
							Society						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/software-engineering-and-programming-languages/">
							Software Engineering and Programming Languages						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/systems-and-networking/">
							Systems and Networking						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/theory/">
							Theory						</a>
					</li>
										</ul>
			</div>

	<!-- Sections menu -->
	<div class="site-header-hamburger-menu-sections">
					<h2 class="site-header-hamburger-menu-heading">
				Sections				<span class="site-header-hamburger-menu-accordion-icon">
					<svg aria-hidden="true" focusable="false" width="16" height="16"><use href="#am-symbol-icon-chevron-down"></use></svg>				</span>
			</h2>
			<ul class="site-header-hamburger-menu-sections-menu">
																<li>
						<a href="https://cacm.acm.org/section/research/">
							Research and Advances						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/section/opinion/">
							Opinion						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/section/practice/">
							Practice						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/section/news/">
							News						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/section/careers/">
							Careers						</a>
					</li>
										</ul>
			</div>

	<!-- Magazine menu -->
	<div class="site-header-hamburger-menu-magazine">
		<h2 class="site-header-hamburger-menu-heading">
			Magazine			<span class="site-header-hamburger-menu-accordion-icon">
				<svg aria-hidden="true" focusable="false" width="16" height="16"><use href="#am-symbol-icon-chevron-down"></use></svg>			</span>
		</h2>
		<ul id="menu-magazine-header" class="site-header-hamburger-menu-magazine-menu"><li id="menu-item-217988" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217988"><a href="/issue/latest/" id="menu-link-1">Latest Issue</a></li>
<li id="menu-item-217989" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217989"><a href="/issues/" id="menu-link-2">Magazine Archive</a></li>
<li id="menu-item-224644" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224644"><a href="https://cacm.acm.org/editorial-staff-board/" id="menu-link-3">Editorial Staff and Board</a></li>
<li id="menu-item-751386" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-751386"><a href="https://cacm.acm.org/author-guidelines#CACMsubmission" id="menu-link-4">Submit an Article</a></li>
<li id="menu-item-224585" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224585"><a href="https://cacm.acm.org/feeds-2/" id="menu-link-5">Alerts &#038; Feeds</a></li>
<li id="menu-item-224645" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224645"><a href="https://cacm.acm.org/author-guidelines/" id="menu-link-6">Author Guidelines</a></li>
</ul>	</div>

	<div class="site-header-hamburger-menu-membership">
		<span class="site-header-hamburger-menu-membership-logo">
			<svg aria-hidden="true" focusable="false" width="49" height="48"><use href="#am-symbol-cacm-logo-small"></use></svg>		</span>
		<h2 class="site-header-hamburger-menu-heading site-header-hamburger-menu-membership-heading">
			CACM Web Account		</h2>
		<p class="site-header-hamburger-menu-membership-text">Membership in ACM includes a subscription to Communications of the ACM (CACM), the computing industry&#039;s most trusted source for staying connected to the world of advanced computing.</p>
		<div class="site-header-hamburger-menu-membership-buttons">
			<a href="https://cacm.acm.org/wp-login.php?saml_sso" class="site-header-hamburger-menu-membership-buttons-log-in">
				Sign In			</a>
			<a href="https://accounts.acm.org/" class="site-header-hamburger-menu-membership-buttons-sign-up">
				Sign Up			</a>
		</div>
	</div>

	<!-- Communications menu -->
	<div class="site-header-hamburger-menu-communications">
		<h2 class="site-header-hamburger-menu-heading">
			Communications of the ACM			<span class="site-header-hamburger-menu-accordion-icon">
				<svg aria-hidden="true" focusable="false" width="16" height="16"><use href="#am-symbol-icon-chevron-down"></use></svg>			</span>
		</h2>
		<ul id="menu-communications-header" class="site-header-hamburger-menu-communications-menu"><li id="menu-item-224641" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224641"><a href="https://cacm.acm.org/about-us/" id="menu-link-7">About Us</a></li>
<li id="menu-item-224663" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224663"><a href="https://cacm.acm.org/faq/" id="menu-link-8">Frequently Asked Questions</a></li>
<li id="menu-item-224640" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224640"><a href="https://cacm.acm.org/contact-us/" id="menu-link-9">Contact Us</a></li>
</ul>	</div>

	<div class="site-header-hamburger-menu-social">
		<h2 class="site-header-hamburger-menu-heading">
			Follow Us		</h2>
		<ul class="site-header-hamburger-menu-social-menu">
			<li>
				<a href="https://twitter.com/cacmmag">
					<span class="screen-reader-only">CACM on Twitter</span>
					<svg xmlns="http://www.w3.org/2000/svg" width="38" height="38" fill="none">
	<path fill="#1DA1F2" d="M27.613 13.657a7.057 7.057 0 0 1-2.03.557 3.54 3.54 0 0 0 1.555-1.955 7.08 7.08 0 0 1-2.245.857A3.53 3.53 0 0 0 22.313 12c-2.282 0-3.958 2.13-3.442 4.34a10.033 10.033 0 0 1-7.285-3.694 3.54 3.54 0 0 0 1.093 4.72 3.52 3.52 0 0 1-1.6-.442c-.038 1.637 1.135 3.169 2.835 3.51a3.542 3.542 0 0 1-1.596.06 3.538 3.538 0 0 0 3.301 2.454 7.106 7.106 0 0 1-5.232 1.465A10.006 10.006 0 0 0 15.804 26c6.562 0 10.27-5.542 10.046-10.513a7.195 7.195 0 0 0 1.763-1.83Z"/>
	<path fill="#000" d="M27.613 13.657a7.057 7.057 0 0 1-2.03.557 3.54 3.54 0 0 0 1.555-1.955 7.08 7.08 0 0 1-2.245.857A3.53 3.53 0 0 0 22.313 12c-2.282 0-3.958 2.13-3.442 4.34a10.033 10.033 0 0 1-7.285-3.694 3.54 3.54 0 0 0 1.093 4.72 3.52 3.52 0 0 1-1.6-.442c-.038 1.637 1.135 3.169 2.835 3.51a3.542 3.542 0 0 1-1.596.06 3.538 3.538 0 0 0 3.301 2.454 7.106 7.106 0 0 1-5.232 1.465A10.006 10.006 0 0 0 15.804 26c6.562 0 10.27-5.542 10.046-10.513a7.195 7.195 0 0 0 1.763-1.83Z"/>
	<rect width="37" height="37" x=".5" y=".5" stroke="#D8D8D8" rx="18.5"/>
</svg>
				</a>
			</li>
			<li>
				<a href="https://www.reddit.com/user/TheOfficialACM">
					<span class="screen-reader-only">CACM on Reddit</span>
					<svg xmlns="http://www.w3.org/2000/svg" width="38" height="38" fill="none">
	<path fill="#FF4500" d="M27.764 21.071v.613c0 3.368-3.879 6.022-8.676 6.022-4.797 0-8.676-2.654-8.676-6.022v-.613c-1.122-.51-1.53-1.735-1.122-2.857.306-.817 1.123-1.327 1.939-1.225.612 0 1.123.204 1.531.612 1.735-1.122 3.776-1.837 5.818-1.837l1.122-5.103c0-.102.102-.204.102-.204.102-.102.205-.102.307-.102l3.572.816c.408-.714 1.327-1.123 2.041-.714.715.408 1.123 1.326.715 2.04-.409.715-1.327 1.124-2.042.715-.51-.204-.816-.714-.816-1.326l-3.164-.715-1.02 4.593c2.245.102 4.286.817 5.715 1.837.816-.816 2.245-.816 3.062 0 .408.408.612.919.612 1.531.306.919-.306 1.633-1.02 1.94Zm-11.942 1.123c.816 0 1.53-.714 1.53-1.53 0-.817-.714-1.532-1.53-1.532-.817 0-1.531.715-1.531 1.531 0 .817.612 1.531 1.53 1.531Zm7.042 1.94c-.204-.205-.408-.205-.51 0-.612.714-2.041.918-3.062.918-1.02 0-2.45-.204-3.062-.919-.204-.204-.408-.204-.51 0-.204.204-.204.409 0 .51 1.02 1.021 3.062 1.123 3.674 1.123.613 0 2.552-.102 3.675-1.122-.102-.102-.102-.306-.205-.51Zm1.225-3.47c0-.817-.714-1.532-1.53-1.532-.817 0-1.532.715-1.532 1.531 0 .817.715 1.531 1.531 1.531.817 0 1.531-.714 1.531-1.53Z"/>
	<path fill="#000" d="M27.764 21.071v.613c0 3.368-3.879 6.022-8.676 6.022-4.797 0-8.676-2.654-8.676-6.022v-.613c-1.122-.51-1.53-1.735-1.122-2.857.306-.817 1.123-1.327 1.939-1.225.612 0 1.123.204 1.531.612 1.735-1.122 3.776-1.837 5.818-1.837l1.122-5.103c0-.102.102-.204.102-.204.102-.102.205-.102.307-.102l3.572.816c.408-.714 1.327-1.123 2.041-.714.715.408 1.123 1.326.715 2.04-.409.715-1.327 1.124-2.042.715-.51-.204-.816-.714-.816-1.326l-3.164-.715-1.02 4.593c2.245.102 4.286.817 5.715 1.837.816-.816 2.245-.816 3.062 0 .408.408.612.919.612 1.531.306.919-.306 1.633-1.02 1.94Zm-11.942 1.123c.816 0 1.53-.714 1.53-1.53 0-.817-.714-1.532-1.53-1.532-.817 0-1.531.715-1.531 1.531 0 .817.612 1.531 1.53 1.531Zm7.042 1.94c-.204-.205-.408-.205-.51 0-.612.714-2.041.918-3.062.918-1.02 0-2.45-.204-3.062-.919-.204-.204-.408-.204-.51 0-.204.204-.204.409 0 .51 1.02 1.021 3.062 1.123 3.674 1.123.613 0 2.552-.102 3.675-1.122-.102-.102-.102-.306-.205-.51Zm1.225-3.47c0-.817-.714-1.532-1.53-1.532-.817 0-1.532.715-1.532 1.531 0 .817.715 1.531 1.531 1.531.817 0 1.531-.714 1.531-1.53Z"/>
	<rect width="37" height="37" x=".5" y=".5" stroke="#D8D8D8" rx="18.5"/>
</svg>
				</a>
			</li>
			<li>
				<a href="https://www.linkedin.com/groups/36836/">
					<span class="screen-reader-only">CACM on LinkedIn</span>
					<svg xmlns="http://www.w3.org/2000/svg" width="38" height="38" fill="none">
	<path fill="#000" d="M14.117 12.74c0 .96-.773 1.738-1.726 1.738a1.732 1.732 0 0 1-1.725-1.739c0-.96.772-1.739 1.725-1.739.953 0 1.726.78 1.726 1.74Zm.013 3.13h-3.478V27h3.479V15.87Zm5.553 0h-3.456V27h3.457v-5.843c0-3.248 4.194-3.514 4.194 0V27h3.47v-7.048c0-5.481-6.207-5.282-7.665-2.583v-1.5Z"/>
	<rect width="37" height="37" x=".5" y=".5" stroke="#D8D8D8" rx="18.5"/>
</svg>
				</a>
			</li>
		</ul>
	</div>

</nav>
		</header>
	</div>

	<div id="content" class="site-content container">
		<div id="primary" class="content-area">
			<main id="main" class="site-main">

				
<article id="post-754572" class="post-754572 digital-library type-digital-library status-publish has-post-thumbnail hentry category-architecture-and-hardware category-software-engineering-and-programming-languages section-research">

			
<header class="article-header article-header--dark">
	<div class="article-header__inner container">
		<div class="article-header__section"><a href="https://cacm.acm.org/section/research/">Research and Advances</a></div>
		<div class="article-header__topic-and-issue-section">
			<span class="article-header__topic">
			<a href="https://cacm.acm.org/category/architecture-and-hardware/">Architecture and Hardware</a>			</span>
			<span class="article-header__issue-section">
							</span>
		</div>
		<h1 class="article-header__title">Compiler-Driven FPGA Virtualization with SYNERGY</h1>
					<div class="article-header__subtitle"><p>Virtualizing FPGAs enables them as a resource for on-demand hardware acceleration.</p>
</div>
		
		<div class="article-header__meta">
			<div class="article-header__byline">
				By <a href="https://cacm.acm.org/author/joshua-landgraf/" title="Posts by Joshua Landgraf" class="author url fn" rel="author">Joshua Landgraf</a>, <a href="https://cacm.acm.org/author/tiffany-yang/" title="Posts by Tiffany Yang" class="author url fn" rel="author">Tiffany Yang</a>, <a href="https://cacm.acm.org/author/will-lin/" title="Posts by Will Lin" class="author url fn" rel="author">Will Lin</a>, <a href="https://cacm.acm.org/author/christopher-j-rossbach/" title="Posts by Christopher J. Rossbach" class="author url fn" rel="author">Christopher J. Rossbach</a>, and <a href="https://cacm.acm.org/author/eric-schkufza/" title="Posts by Eric Schkufza" class="author url fn" rel="author">Eric Schkufza</a>			</div>
			<div class="article-header__posted-on">
				<span class="posted-on">Posted <time datetime="2024-04-22T13:17:07-04:00">Apr 22 2024</time></span>			</div>
		</div>

					<figure class="article-header__figure">
									<div class="image-wrapper image-wrapper--widescreen"><img width="1024" height="576" src="https://cacm.acm.org/wp-content/uploads/2024/04/041624.RH-Compiler-Driven.jpg" class="attachment-full size-full" alt="Credit: Getty Images virtual circuit board, illustration" loading="eager" decoding="async" srcset="https://cacm.acm.org/wp-content/uploads/2024/04/041624.RH-Compiler-Driven.jpg 2224w, https://cacm.acm.org/wp-content/uploads/2024/04/041624.RH-Compiler-Driven.jpg?resize=300,169 300w, https://cacm.acm.org/wp-content/uploads/2024/04/041624.RH-Compiler-Driven.jpg?resize=768,432 768w, https://cacm.acm.org/wp-content/uploads/2024/04/041624.RH-Compiler-Driven.jpg?resize=1024,576 1024w, https://cacm.acm.org/wp-content/uploads/2024/04/041624.RH-Compiler-Driven.jpg?resize=1536,864 1536w, https://cacm.acm.org/wp-content/uploads/2024/04/041624.RH-Compiler-Driven.jpg?resize=2048,1152 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></div>												</figure>
		
		<div class="article-header__share">
			
<ul class="share">
	
<li class="share-link" data-component="share">
	<a href="#" class="share-toggle">
		<svg aria-hidden="true" focusable="false" width="19" height="18" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-share"></use></svg>		<span class="share-link-text">
			Share		</span>
	</a>
	<ul class="share-menu" aria-hidden="true">
		<li>
			<a href="https://twitter.com/intent/tweet?url=https://cacm.acm.org/research/compiler-driven-fpga-virtualization-with-synergy/&#038;text=Compiler-Driven%20FPGA%20Virtualization%20with%20SYNERGY" target="_blank">
				Twitter			</a>
		</li>
		<li>
			<a href="http://www.reddit.com/submit?url=https://cacm.acm.org/research/compiler-driven-fpga-virtualization-with-synergy/&#038;title=Compiler-Driven%20FPGA%20Virtualization%20with%20SYNERGY" target="_blank">
				Reddit			</a>
		</li>
		<li>
			<a href="https://news.ycombinator.com/submitlink?u=https://cacm.acm.org/research/compiler-driven-fpga-virtualization-with-synergy/&#038;t=Compiler-Driven%20FPGA%20Virtualization%20with%20SYNERGY" target="_blank">
				Hacker News			</a>
		</li>
	</ul>
</li>
			
<li class="share-link share-link-pdf">
	<a href="https://dl.acm.org/doi/pdf/10.1145/3613903" target="_blank">
		<svg aria-hidden="true" focusable="false" width="19" height="20" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-pdf-download"></use></svg>		<span class="share-link-text">
			Download PDF		</span>
	</a>
</li>
		
<li class="share-link share-link-print" data-component="print">
	<a href="#" class="print">
		<svg aria-hidden="true" focusable="false" width="19" height="20" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-print"></use></svg>		<span class="share-link-text">
			Print		</span>
	</a>
</li>
		
<li class="share-link share-link-discussion" data-component="share">
	<a class="share-link-comments" href="#comments">
		<svg aria-hidden="true" focusable="false" width="19" height="20" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-comment"></use></svg>		<span class="share-link-text">
			Join the Discussion		</span>
	</a>
</li>
			
<li class="share-link share-link-dl">
	<a href="https://dl.acm.org/doi/10.1145/3613903">
		<svg aria-hidden="true" focusable="false" width="21" height="21" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-digital-library"></use></svg>		<span class="share-link-text">
			View in the ACM Digital Library		</span>
		<svg aria-hidden="true" focusable="false" width="14" height="9" fill="var(--cacm--symbol--fill)" class="icon-dl"><use href="#am-symbol-icon-arrow-right"></use></svg>	</a>
</li>
	</ul>
		</div>
	</div>
</header>

<section class="article-table-of-contents" data-component="articleToc">
			<ol class="article-table-of-contents__list">
			<ul>
<li><a href="#sec1">Introduction</a></li>
<li><a href="#sec2">Background</a></li>
<li><a href="#sec5">Virtualization Primitives</a></li>
<li><a href="#sec11">Hypervisor Design</a></li>
<li><a href="#sec15">Implementation</a></li>
<li><a href="#sec19">Evaluation</a></li>
<li><a href="#sec24">Related Work</a></li>
<li><a href="#sec25">Conclusion</a></li>
<li><a href="#sec26">Acknowledgments</a></li>
<li><a href="#references">References</a></li>
</ul>
		</ol>
	</section>
		<div class="article-contents">
			
<a class="article-connected-content" href="https://cacm.acm.org/opinion/technical-perspective-the-software-centric-approach-of-synergy/">
	Read the related Technical Perspective	<svg aria-hidden="true" focusable="false" width="24.88" height="16" fill="var(--wp--preset--color--cacm-link-blue)"><use href="#am-symbol-icon-arrow-right"></use></svg></a>

<div class="article-content entry-content">
		<article><div class="body" lang="en"><section id="sec1" class="sec"><h3>Abstract</h3><div class="article-key-insights"><p>FPGAs are increasingly common in modern applications, and cloud providers now support on-demand FPGA acceleration in datacenters. Applications in datacenters run on virtual infrastructure, where consolidation, multi-tenancy, and workload migration enable economies of scale that are fundamental to the provider’s business. However, a general strategy for virtualizing FPGAs has yet to emerge. While manufacturers struggle with hardware-based approaches, we propose a compiler/runtime-based solution called SYNERGY. We show a compiler transformation for Verilog programs that produces code able to yield control to software at sub-clock-tick granularity according to the semantics of the original program. SYNERGY uses this property to efficiently support core virtualization primitives: suspend and resume, program migration, and spatial/temporal multiplexing, on hardware which is available today. We use SYNERGY to virtualize FPGA workloads across a cluster of Intel SoCs and Xilinx FPGAs on Amazon F1. The workloads require no modification, run within 3–4x of unvirtualized performance, and incur a modest increase in FPGA fabric usage.</p></div><h2 class="heading"><span class="caption-label">1. </span>Introduction</h2><p id="p-1">Field-Programmable Gate Arrays (FPGAs) combine the functional efficiency of hardware with the programmability of software. FPGAs can exceed CPU performance by orders of magnitude<a class="reference-link xref xref-bibr" href="#bib20" data-jats-ref-type="bibr" data-jats-rid="bib20"><sup>20</sup></a> and offer lower cost and time to market than ASICs. FPGAs have become a compelling acceleration alternative for machine learning,<a class="reference-link xref xref-bibr" href="#bib4" data-jats-ref-type="bibr" data-jats-rid="bib4"><sup>4</sup></a> databases,<a class="reference-link xref xref-bibr" href="#bib14" data-jats-ref-type="bibr" data-jats-rid="bib14"><sup>14</sup></a> graph processing,<a class="reference-link xref xref-bibr" href="#bib17" data-jats-ref-type="bibr" data-jats-rid="bib17"><sup>17</sup></a> and communication.<a class="reference-link xref xref-bibr" href="#bib8" data-jats-ref-type="bibr" data-jats-rid="bib8"><sup>8</sup></a> In datacenters, FPGAs serve diverse hardware needs with a single technology. Amazon provides F1 instances with large FPGAs attached and Microsoft deploys FPGAs in their new datacenters.</p><p id="p-2">Virtualization is fundamental to datacenters. It decouples software from hardware, enabling economies of scale through consolidation. However, a standard technique for virtualizing FPGAs has yet to emerge. There are no widely agreed upon methods for supporting key primitives such as <i>workload migration</i> (suspending and resuming a hardware program or relocating it between FPGAs mid-execution) or <i>multitenancy</i> (multiplexing multiple hardware programs on a single FPGA). Better virtualization support is required for FPGAs to become a mainstream accelerator technology.</p><p id="p-3">Virtualizing FPGAs is difficult because they lack a well-defined interposable <i>application binary interface</i> (ABI) and state capture primitives. On CPUs, hardware registers are restricted to a small, static set and access to data is abstracted through virtual memory, making it trivial to save and restore state. In contrast, the state of an FPGA program is distributed throughout its reprogrammable fabric in a <i>program-</i> and <i>hardware-dependent</i> fashion, making it inaccessible to the OS. Without knowing how programs are compiled for an FPGA, there is no way to share the FPGA with other programs or to relocate programs mid-execution. FPGA vendors are pursuing hardware-based solutions to enable sharing by partitioning the device into smaller, isolated fabrics. However, lacking state capture primitives, this does not solve the fundamental problem and cannot support features like workload migration.</p><p id="p-4">We argue that the right place to support FPGA virtualization is in a combined compiler/runtime environment. Our system, SYNERGY, combines a <i>just-in-time</i> (JIT) runtime for Verilog, canonical interfaces to OS-managed resources, and an OS-level protection layer to abstract and isolate shared resources. The key insight behind SYNERGY is that a compiler can <i>transparently</i> re-write Verilog code to compensate for the missing ABI and explicitly expose application state to the OS. The core technique in SYNERGY is a static analysis to transform the user’s code into a distributed-system-like <i>intermediate representation</i> (IR) consisting of monadic subprograms which can be moved back and forth mid-execution between a software interpreter and native FPGA execution. This is possible because the transformations produce code that can trap to software at arbitrary execution points without violating the semantics of Verilog.</p><p id="p-5">SYNERGY’s first contribution is a set of compiler transformations to produce code that can be interrupted at <i>sub-clock-tick granularity</i> (§<a class="xref xref-sec" href="#sec5" data-jats-ref-type="sec" data-jats-rid="sec5">3</a>) according to the semantics of the original program. This allows SYNERGY to support a large class of <i>unsynthesizable</i> Verilog. Traditional Verilog uses unsynthesizable language constructs for testing and debugging in a simulator. SYNERGY uses them to expose interfaces to OS-managed resources and to start, stop, and save the state of a program at any point in its execution. This allows SYNERGY to perform context switch and workload migration without hardware support or modifications to Verilog.</p><p id="p-6">SYNERGY’s second contribution is a new technique for FPGA multi-tenancy (§<a class="xref xref-sec" href="#sec11" data-jats-ref-type="sec" data-jats-rid="sec11">4</a>). SYNERGY introduces a hypervisor layer into the compiler’s runtime which can transparently combine the sub-program representations from multiple applications into a single hardware program by interleaving asynchronous data and control requests between each of those instances and the FPGA. In contrast to hardware-based approaches, manipulating each instance’s state is straightforward, as the hypervisor has access to every instance’s source and knows how it is mapped onto the device.</p><p id="p-7">SYNERGY’s final contribution is a compiler backend targeting an OS-level protection layer for process isolation, fair scheduling, and cross-platform compatibility (§<a class="xref xref-sec" href="#sec15" data-jats-ref-type="sec" data-jats-rid="sec15">5</a>). Recent FPGA-OS proposals introduce interfaces for state capture for context switch.<a class="reference-link xref xref-bibr" href="#bib9" data-jats-ref-type="bibr" data-jats-rid="bib9"><sup>9</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#bib16" data-jats-ref-type="bibr" data-jats-rid="bib16"><sup>16</sup></a> A major obstacle to using these systems is the requirement that the developer implement those state capture interfaces. SYNERGY satisfies the state capture requirement transparently by using compiler analysis to identify the set of variables that comprise a program’s state and emitting code to interact with state capture and quiescence interfaces. For applications which natively support such mechanisms, SYNERGY can dramatically reduce the overhead for context switch and migration.</p><p id="p-8">Our SYNERGY prototype extends the Cascade<a class="reference-link xref xref-bibr" href="#bib21" data-jats-ref-type="bibr" data-jats-rid="bib21"><sup>21</sup></a> JIT compiler and composes it with the AmorphOS<a class="reference-link xref xref-bibr" href="#bib9" data-jats-ref-type="bibr" data-jats-rid="bib9"><sup>9</sup></a> FPGA OS. We demonstrate the ability to suspend and resume programs running on a cluster of Intel SoCs and Xilinx FPGAs running on Amazon’s F1 cloud instances, to transition applications between them, and to temporally and spatially multiplex both devices efficiently with strong OS-level isolation guarantees. This is done without exposing the architectural differences between the platforms, extending the Verilog language, or modifying the programs. We achieve performance within 3–4<code class="monospace">x</code> of unvirtualized code with a reasonable fabric cost.</p></section><section id="sec2" class="sec"><h2 class="heading"><span class="caption-label">2. </span>Background</h2><p id="p-9">Verilog is one of two standard HDLs used to program FPGAs. VHDL is essentially isomorphic. Verilog consists of <i>synthesizable</i> and <i>unsynthesizable</i> constructs. Synthesizable Verilog describes computation which can be lowered onto an FPGA. Unsynthesizable Verilog includes tasks such as print statements, which are more expressive and aid in debugging, but must be executed in software.</p><p id="p-10">Verilog programs are declarative and organized hierarchically in units called <i>modules</i>. Figure <a class="xref xref-fig" href="#F1" data-jats-ref-type="fig" data-jats-rid="F1">1</a> shows an example Verilog module. The interface to a module is defined in terms of its input/output ports (<code class="monospace">clock</code>, <code class="monospace">res</code>). Its semantics are defined in terms of arbitrary-width wires (<code class="monospace">x</code>,<code class="monospace">y</code>) and registers (<code class="monospace">r</code>), logic gates (for example, <code class="monospace">&amp;</code>), arithmetic (for example, <code class="monospace">+</code>), and nested sub-modules (<code class="monospace">sm</code>). The value of a wire is derived from its inputs (lines 5, 21), whereas a register is updated at discrete intervals (lines 6, 11, 13).</p><figure id="F1" class="fig" data-jats-position="float"><div class="image-container">
			<a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig01.jpg" data-type="image" data-caption="Figure 1. " href="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig01.jpg">
				<img decoding="async" class="graphic" title="Figure 1. " src="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig01.jpg" alt="" data-image-id="F1" data-image-type="figure" />
			</a>
		</div><figcaption><span class="caption-label">Figure 1. </span> <span class="p">A simple Verilog module. Verilog supports a combination of sequential and concurrent semantics.</span><div class="figcaption-footer"> </div></figcaption></figure><p id="p-12">Verilog supports sequential and concurrent semantics. Continuous assignments (lines 5, 21) are scheduled when the value of their right-hand-side changes while procedural blocks (lines 9–19) are scheduled when their guard is satisfied (for example, <code class="monospace">clock</code> changes from 0 to 1). Only a <code class="monospace">begin/end</code> block guarantees sequential execution; statements in a <code class="monospace">fork/join</code> block may be evaluated in any order. There are two types of assignments to registers: blocking (<code class="monospace">=</code>) and non-blocking (<code class="monospace">&lt;=</code>). Blocking assignments execute immediately, whereas non-blocking assignments wait until all continuous assignments and control blocks are finished.</p><p id="p-13">When used idiomatically, these semantics map directly onto hardware primitives: wires <i>appear</i> to change value instantly and registers <i>appear</i> to change value with the clock. However, unsynthesizable statements have no analogue. The print statement on line 18 is non-deterministic and can be interleaved with any assignment in lines 10–14. Likewise, the first execution of lines 12 and 14 can be interleaved with the assignment on line 5. While the assignment on line 11 is visible immediately, the one on line 13 is only performed after every block and assignment has been scheduled.</p><section id="sec3" class="sec"><h3 class="heading"><span class="caption-label">2.1 </span>Cascade</h3><p id="p-14">Cascade is the first JIT compiler for Verilog. Cascade parses and adds Verilog to a program one line at a time, with side effects appearing immediately. While JIT compilation is orthogonal to SYNERGY, Cascade’s runtime techniques are a fundamental building block. Cascade transforms programs to produce code which can trap into the Cascade runtime at the end of the logical clock tick. These traps are used to handle unsynthesizable statements in a way that is consistent with Verilog’s scheduling semantics, even during hardware execution. SYNERGY improves upon this to trap into the runtime at sub-clock-tick granularity according to the semantics of the original program and to enable context switch (§<a class="xref xref-sec" href="#sec5" data-jats-ref-type="sec" data-jats-rid="sec5">3</a>).</p><p id="p-15">Cascade manages programs at module granularity. Its IR expresses a distributed system of Verilog <i>sub-programs</i>, each corresponding to a module in the user’s program. A sub-program’s state is represented by a data structure known as an <i>engine</i>. Sub-programs start as low-performance, software-simulated engines that are replaced over time by high-performance FPGA-resident engines. The IR’s constrained ABI enables engines to be relocated through messages sent over the runtime’s data/control plane. <code class="monospace">Get/set</code> messages read and write an engine’s inputs, outputs, and program variables. <code class="monospace">Evaluate/update</code> messages instruct an engine to run until no more continuous assigns or procedural blocks can be scheduled, and to latch the result of non-blocking assignments, respectively.</p><p id="p-16">Unsynthesizable traps are placed in a queue and evaluated between clock ticks, when the engine state has fixed-pointed and the program is in a consistent state. This limits support for unsynthesizable Verilog to output-only. For example, print statements can occur at any point in a program, but their side effects are only made visible between clock-ticks. There is no way to schedule an interrupt between the statements in a <code class="monospace">begin/end</code> block, block on the result, and continue execution. SYNERGY removes these limitations.</p></section><section id="sec4" class="sec"><h3 class="heading"><span class="caption-label">2.2 </span>AmorphOS</h3><p id="p-17">AmorphOS is an FPGA runtime infrastructure which supports cross-program protection and compatibility at very high degrees of multi-tenancy. AmorphOS enables hardware programs to scale dynamically in response to FPGA load and availability. AmorphOS introduces an FPGA process abstraction called <i>Morphlets</i>, which access OS-managed resources through a shell-like component called a hull. The hull acts as an isolation boundary and a compatibility layer, enabling AmorphOS to increase utilization by co-locating several Morphlets in a single reconfigurable <i>zone</i> without compromising security. AmorphOS leaves the problems of efficient context switch, over-subscription, and support for multiple FPGAs mostly unsolved by relying on a compilation cache and a programmer-exposed quiescence interface.</p><p id="p-18">AmorphOS’s quiescence interface forces the programmer to write state-capture code (§<a class="xref xref-sec" href="#sec1" data-jats-ref-type="sec" data-jats-rid="sec1">1</a>), which requires explicitly identifying live state. The interface is simple to support for request-response style programs such as DNN inference acceleration, but difficult for programs that can execute unbounded sequences of instructions, such as a RISC core. This can subject an OS-scheduler to arbitrary latency based on a program’s implementation and introduces the need for forced revocation mechanisms as a fallback. Transparent state capture mechanisms which insulate the programmer from low-level details of on-fabric state are not supported.</p></section></section><section id="sec5" class="sec"><h2 class="heading"><span class="caption-label">3. </span>Virtualization Primitives</h2><p id="p-19">In this Section, we describe a sound transformation for Verilog that allows a program to yield control at sub-clock-tick granularity. This transformation allows SYNERGY to support the entire unsynthesizable Verilog standard from hardware, including <code class="monospace">$save</code> and <code class="monospace">$restart</code>, which are necessary for supporting workload migration. We frame this discussion with a file IO case study.</p><section id="sec6" class="sec"><h3 class="heading"><span class="caption-label">3.1 </span>Motivating Example: File I/O</h3><p id="p-20">Consider the program shown in Figure <a class="xref xref-fig" href="#F2" data-jats-ref-type="fig" data-jats-rid="F2">2</a>, which uses unsynthesizable IO tasks to sum the values contained in a file. The program opens the file (line 2) and, on every clock tick, attempts to read a 32-bit value (line 7). When the program reaches the end-of-file, it prints the sum and returns to the host (lines 8–10). Otherwise, it adds the value to the running sum and continues (line 12). While this program is simple, its structure is typical of applications that perform streaming computation over large data-sets.</p><figure id="F2" class="fig" data-jats-position="float"><div class="image-container">
			<a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig02.jpg" data-type="image" data-caption="Figure 2. " href="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig02.jpg">
				<img decoding="async" class="graphic" title="Figure 2. " src="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig02.jpg" alt="" data-image-id="F2" data-image-type="figure" />
			</a>
		</div><figcaption><span class="caption-label">Figure 2. </span> <span class="p">Motivating example. A Verilog program that uses unsynthesizable <code class="monospace">IO</code> to sum the values in a large file.</span><div class="figcaption-footer"> </div></figcaption></figure><p id="p-22">The key obstacle to supporting this program is that the IO tasks introduce data-dependencies within a single clock-tick. The end-of-file check on line 8 depends on the result of the read operation on line 7, as does the assignment on line 12. Because these operations interact with the file system, we must not only pause the execution of the program mid-cycle while control is transferred to the host, but also block for an arbitrary amount of time until the host produces a result. Our solution is to transform the program into a state machine which implements a co-routine style semantics. While a programmer could adopt this idiom, it would harm both readability and maintainability.</p></section><section id="sec7" class="sec"><h3 class="heading"><span class="caption-label">3.2 </span>Scheduling Transformations</h3><p id="p-23">SYNERGY uses several transformations to establish the invariant that all procedural logic appears in a single control statement. Any <code class="monospace">fork/join</code> block may be replaced by an equivalent <code class="monospace">begin/end</code> block, as the sequential semantics of the latter are a valid scheduling of the former. Also, any nested set of <code class="monospace">begin/end</code> blocks may be flattened into a single block as there are no scheduling constraints implied by nested blocks. Next, we combine every procedural control statement in the program into a single statement called <i>the core</i>. The core is guarded by the union of the events that guard each individual statement. This is sound, as Verilog only allows disjunctive guards. Next, we set the body of the core to a new <code class="monospace">begin/end</code> block containing the conjunction of the bodies of each individual block. This is sound as well, as sequential execution is a valid scheduling of active procedural control statements. Finally, we guard each conjunct with a name-mangled version of its original guard (details to follow) as all of the conjuncts would otherwise be executed when the core is triggered. These transformations are sound, even for programs with multiple clock domains.</p></section><section id="sec8" class="sec"><h3 class="heading"><span class="caption-label">3.3 </span>Control Transformations</h3><p id="p-24">Additional transformations modify the control structure of the core so that it is compatible with the Cascade ABI. Recall that the Cascade ABI requires that all of the inputs to an IR sub-program, <i>including clocks</i>, will be communicated through <code class="monospace">set</code> messages which may be separated by many native clock cycles on the target device. Thus we declare state to hold the previous values of variables that appear in the core’s guard, and wires that capture their semantics in the original program (for example, <code class="monospace">__pos_x</code> is true when a <code class="monospace">set</code> message changes <code class="monospace">x</code> from false to true). We also declare new variables (<code class="monospace">__state</code> and <code class="monospace">__task</code>) to track the state of the core and whether a system task requires the attention of the runtime. Finally, we replace the core’s guard by a posedge trigger for the native clock on the target device (<code class="monospace">__clk</code>).</p></section><section id="sec9" class="sec"><h3 class="heading"><span class="caption-label">3.4 </span>State Machine Transformations</h3><p id="p-25">The body of the core is lowered onto a state machine with the following semantics. States consist of synthesizable statements, terminated by either unsynthesizable tasks or the guard of an <code class="monospace">if</code> or <code class="monospace">case</code> statement. A new state is created for each branch of a conditional statement, and an SSA-style phi state is used to rejoin control flow.</p><p id="p-26">A compiler has flexibility in how it chooses to lower the resulting state machine onto Verilog text. Figure <a class="xref xref-fig" href="#F3" data-jats-ref-type="fig" data-jats-rid="F3">3</a> shows one possible implementation. Each state is materialized as an <code class="monospace">if</code> statement that performs the logic associated with the state, takes a transition, and sets the <code class="monospace">__task</code> register if the state ended in an unsynthesizable statement. Control enters the first state when the variable associated with the original guard (<code class="monospace">__pos_clock</code>) evaluates to true, and continues via the fall-through semantics of Verilog until a task is triggered. When this happens, a runtime can take control, place its results (if any) in the appropriate hardware location, and yield back to the target device by asserting the <code class="monospace">__cont</code> signal. When control enters the final state, the program asserts the <code class="monospace">__done</code> signal, indicating that there is no further work. Collectively, these steps represent the compute portion of the <code class="monospace">evaluate</code> and <code class="monospace">update</code> requests required by the ABI.</p><figure id="F3" class="fig" data-jats-position="float"><div class="image-container">
			<a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig03.jpg" data-type="image" data-caption="Figure 3. " href="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig03.jpg">
				<img decoding="async" class="graphic" title="Figure 3. " src="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig03.jpg" alt="" data-image-id="F3" data-image-type="figure" />
			</a>
		</div><figcaption><span class="caption-label">Figure 3. </span> <span class="p">The motivating example after modification to yield control to the runtime at the sub-clock-tick granularity.</span><div class="figcaption-footer"> </div></figcaption></figure></section><section id="sec10" class="sec"><h3 class="heading"><span class="caption-label">3.5 </span>Workload Migration</h3><p id="p-28">With these transformations, support for the <code class="monospace">$save</code> and <code class="monospace">$restart</code> system tasks is straightforward. Both can be materialized as traps into a runtime compatible with the Cascade ABI. The former prompts the runtime to save the state of the program through a series of <code class="monospace">get</code> requests, and the latter prompts a sequence of <code class="monospace">set</code> requests. Either statement can be triggered via normal program execution or an eval statement. Once a program’s state is read out, it can be suspended, migrated to another machine, and resumed.</p></section></section><section id="sec11" class="sec"><h2 class="heading"><span class="caption-label">4. </span>Hypervisor Design</h2><p id="p-29">In this section, we describe SYNERGY’s support for the two primary forms of hardware multiplexing: <i>spatial</i> (where two programs run simultaneously on the same fabric) and <i>temporal</i> (where two programs share resources using timeslice scheduling). SYNERGY provides an indirection layer that allows multiple runtime instances to share a compiler at the hypervisor layer.</p><section id="sec12" class="sec"><h3 class="heading"><span class="caption-label">4.1 </span>Program Coalescing</h3><p id="p-30">Figure <a class="xref xref-fig" href="#F4" data-jats-ref-type="fig" data-jats-rid="F4">4</a> shows a sketch of SYNERGY during an execution in which two applications share a single hardware fabric. In addition to the scheduler and data/control plane introduced in §<a class="xref xref-sec" href="#sec2" data-jats-ref-type="sec" data-jats-rid="sec2">2</a>, we have called out the compilers associated with both the runtime instance running those applications, and the SYNERGY hypervisor. These compilers are responsible for lowering a sub-program onto a target-specific engine that satisfies Cascade’s distributed-system ABI.</p><figure id="F4" class="fig" data-jats-position="float"><div class="image-container">
			<a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig04.jpg" data-type="image" data-caption="Figure 4. " href="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig04.jpg">
				<img decoding="async" class="graphic" title="Figure 4. " src="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig04.jpg" alt="" data-image-id="F4" data-image-type="figure" />
			</a>
		</div><figcaption><span class="caption-label">Figure 4. </span> <span class="p">The SYNERGY virtualization layer. The hypervisor combines sub-programs from multiple applications onto a single target (1–6). A handshake protocol establishes state-safe interrupts in the scheduler (A–E).</span><div class="figcaption-footer"> </div></figcaption></figure><p id="p-32">The compiler in the runtime instance connects to the hypervisor (1), which runs on a known port. It sends the code for a sub-program over the connection, where it is passed to the native hardware compiler in the hypervisor, which produces a target-specific implementation of an engine and places it on the FPGA fabric (2). The hypervisor responds with a unique identifier representing the engine (3) and the runtime’s compiler creates an engine which remains permanently in software and is configured with the unique identifier (4). The resulting engine interacts with the runtime as usual. However, its implementation of the Cascade ABI simply forwards requests across the network to the hypervisor (5) and blocks further execution until a reply is obtained.</p><p id="p-33">The key idea that makes this possible is that the compiler in the hypervisor has access to the source code for every sub-program in every connected instance. This allows the compiler to support multitenancy by combining the source code for each sub-program into a single monolithic program. Whenever the text of any sub-program changes, the combined program is recompiled to support the new logic. Whenever an application finishes executing, all of its sub-programs are flagged for removal on the next recompilation. The implementation of this combined program is straightforward. The text of the sub-programs is placed in modules named after their unique hypervisor identifier. The combined program concatenates these modules together and routes ABI requests to the appropriate module based on their identifier. By isolating both sub-program code and communication, the FPGA fabric can be shared securely.</p><p id="p-34">The overhead of the SYNERGY hypervisor depends primarily on the application. While regular communication can become a bottleneck, optimizations<a class="reference-link xref xref-bibr" href="#bib21" data-jats-ref-type="bibr" data-jats-rid="bib21"><sup>21</sup></a> can reduce the ABI requests between the runtime and an engine to a tolerable level. For batch-style applications, fewer than one ABI request per second is required, enabling near-native performance even for programs separated from the hypervisor by a network connection. In contrast, applications that invoke frequent ABI calls (for example, for file I/O) will have overheads that scale with the frequency of interaction. While our discussion presents a hypervisor which compiles all of its sub-programs to FPGA fabric, this is not fundamental. The virtualization layer nests, and it is both possible and performant for a hypervisor to delegate the compilation of a sub-program to a second hypervisor (6), say if the device is full.</p></section><section id="sec13" class="sec"><h3 class="heading"><span class="caption-label">4.2 </span>Scheduling State-Safe Compilation</h3><p id="p-35">The SYNERGY hypervisor schedules ABI requests sequentially to avoid resource contention. The one exception is compilation, which can take a very long time to complete. If compilation were serialized between ABI requests, it could render applications non-interactive. But scheduling compilation asynchronously leads to a key implementation challenge: changing the text of one instance’s sub-programs requires that the entire FPGA be reprogrammed, destroying all connected instances’ state. The solution is to schedule these destructive events when all connected instances are between logical clock-ticks and have saved their state.</p><p id="p-36">Figure <a class="xref xref-fig" href="#F4" data-jats-ref-type="fig" data-jats-rid="F4">4</a> shows the handshake protocol used to establish these invariants. Compilation requests are scheduled asynchronously (A), and run until they would do something destructive. The hypervisor then sends a request to every connected runtime instance (B) to schedule an interrupt between their logical clock-ticks when they are in a consistent state (C). The interrupt causes the instances to send <code class="monospace">get</code> requests to SYNERGY (D) to save their program state. When they have finished, the instances send a reply indicating it is safe to reprogram the device (E) and block until they receive an acknowledgment. Compilation proceeds after the final reply. The device is reprogrammed and the handshake finishes in the opposite fashion. The hypervisor informs the instances it is finished, they send <code class="monospace">set</code> requests to restore their state on the target device and control proceeds as normal.</p></section><section id="sec14" class="sec"><h3 class="heading"><span class="caption-label">4.3 </span>Multitenancy</h3><p id="p-37">Collectively, these techniques suffice to enable multitenancy. Spatial multiplexing is accomplished by combining the sub-programs from each connected runtime into a single monolithic program on the target device. Temporal multiplexing is accomplished by serializing ABI requests that involve an IO resource (say, a connection to an in-memory dataset) which is in use by another sub-program. Sharing preserves tenant protection boundaries using AmorphOS, which provides support for isolating sub-programs sharing the FPGA fabric (§<a class="xref xref-sec" href="#sec4" data-jats-ref-type="sec" data-jats-rid="sec4">2.2</a>).</p></section></section><section id="sec15" class="sec"><h2 class="heading"><span class="caption-label">5. </span>Implementation</h2><p id="p-38">Our implementation of SYNERGY comprises the hypervisor described in §<a class="xref xref-sec" href="#sec11" data-jats-ref-type="sec" data-jats-rid="sec11">4</a>, compilation passes which enable sub-clock-tick granularity support for the unsynthesizable primitives described in §<a class="xref xref-sec" href="#sec5" data-jats-ref-type="sec" data-jats-rid="sec5">3</a>, and both Intel and AmorphOS backends.</p><section id="sec16" class="sec"><h3 class="heading"><span class="caption-label">5.1 </span>Intel Backends</h3><p id="p-39">Our implementation of SYNERGY extends Cascade’s support for the DE10 Nano SoC to the family of Intel devices that feature reprogrammable fabric and an ARM CPU. The core feature these targets share is support for Intel’s Avalon interface for memory-mapped IO. This allows us to lower the transformations described in §<a class="xref xref-sec" href="#sec5" data-jats-ref-type="sec" data-jats-rid="sec5">3</a> onto a Verilog module that converts accesses on the Avalon interface into ABI requests.</p><p id="p-40">Adding support for a new Intel backend amounts to compiling this module in a hardware context which contains an Avalon memory-mapped master whose control registers are <code class="monospace">mmap</code>’ed into the same process space as the runtime or hypervisor. Unlike the AmorphOS backend described below, our DE10 backend does not yet support the AmorphOS protection layer.</p></section><section id="sec17" class="sec"><h3 class="heading"><span class="caption-label">5.2 </span>AmorphOS Backends</h3><p id="p-41">SYNERGY uses a similar strategy for supporting multiple AmorphOS backends. We lower the transformations described in §<a class="xref xref-sec" href="#sec5" data-jats-ref-type="sec" data-jats-rid="sec5">3</a> onto a Verilog module implementing the AmorphOS CntrlReg interface. The module runs as a Morphlet inside the AmorphOS hull, which provides cross-domain protection and thus preserves tenant isolation boundaries. The SYNERGY hypervisor communicates with the Morphlet via a library from AmorphOS. This makes adding support for a new AmorphOS backend as simple as bringing AmorphOS up on that target.</p><p id="p-42">A key difference between the DE10 and F1 is the size and speed of the reprogrammable fabric they provide. Each F1 FPGA has 10<code class="monospace">x</code> more LUTs and operates 5<code class="monospace">x</code> faster than a DE10. This enables SYNERGY to accelerate larger applications, but also makes achieving timing closure challenging. SYNERGY adopts two solutions. The first is to pipeline access to program variables which are modified by <code class="monospace">get/set</code> requests. For writes, SYNERGY adds buffer registers between the AmorphOS hull and the variables. For reads, SYNERGY builds a tree with the program’s variables at the leaves and the hull at the trunk. By adding buffer registers at certain branches, this logic is removed from the critical timing path.</p><p id="p-43">The second solution is to iteratively reduce the target device frequency until the design does meets timing. This is automated by SYNERGY’s build scripts, which can also preserve synthesis, placement, and routing data to help offset the cost of performing multiple compiles.</p></section><section id="sec18" class="sec"><h3 class="heading"><span class="caption-label">5.3 </span>Quiescence Interface</h3><p id="p-44">AmorphOS provides a quiescence interface that notifies applications when they will lose access to the FPGA (for example, during reconfiguration), allowing them to quiesce and back up their state accordingly. SYNERGY supports this interface by handling the implementation of execution control and state management for developers. By default, all program variables are considered <code class="monospace">non_volatile</code>, and will be saved and restored automatically.</p><p id="p-45">For applications that implement quiescence, SYNERGY introduces an optional, non-standard <code class="monospace">$yield</code> task, shown in Figure <a class="xref xref-fig" href="#F5" data-jats-ref-type="fig" data-jats-rid="F5">5</a>. Developers can assert <code class="monospace">$yield</code> to signal that the program has entered an application-specific consistent state. When present, SYNERGY will only perform state-safe compilations at the end of a logical clock tick in which <code class="monospace">$yield</code> was asserted. The use of <code class="monospace">$yield</code> causes stateful program variables to be considered <i>volatile</i> by default. Volatile variables are ignored by state-safe compilations, making it is the user’s responsibility to restore or reset their values at the beginning of each logical clock tick following an invocation of <code class="monospace">$yield</code>. Users may override this behavior by annotating a variable as <code class="monospace">non_volatile</code>.</p><figure id="F5" class="fig" data-jats-position="float"><div class="image-container">
			<a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig05.jpg" data-type="image" data-caption="Figure 5. " href="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig05.jpg">
				<img decoding="async" class="graphic" title="Figure 5. " src="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig05.jpg" alt="" data-image-id="F5" data-image-type="figure" />
			</a>
		</div><figcaption><span class="caption-label">Figure 5. </span> <span class="p">The <code class="monospace">$yield</code> task enables SYNERGY’s quiescence interface. Volatile variables must be managed by the user.</span><div class="figcaption-footer"> </div></figcaption></figure></section></section><section id="sec19" class="sec"><h2 class="heading"><span class="caption-label">6. </span>Evaluation</h2><p id="p-47">We evaluated SYNERGY using a combination of Intel DE10 SoCs and Amazon F1 cloud instances. The DE10s consist of a Cyclone V device with an 800 MHz dual core ARM processor, reprogrammable fabric of 110K LUTs, 50 MHz clock, and 1 GB of shared DDR3 memory. SYNERGY’s DE10 backend was configured to generate bitstreams using Intel’s Quartus Lite Compiler and to interact with the DE10s’ FPGA fabric via a soft-IP implementation of an Avalon Memory-Mapped master. The F1 cloud instances support multiple Xilinx UltraScale+ VU9Ps running at 250 MHz and four 16GB DDR4 channels. SYNERGY’s F1 backend was configured to use build tools adapted from the F1 toolchain and to communicate with the instances’ FPGA fabric over PCIe.</p><p id="p-48">Table <a class="xref xref-table" href="#T1" data-jats-ref-type="table" data-jats-rid="T1">1</a> summarizes the benchmarks used in our evaluation, a combination of batch and streaming computations. The ability to handle file IO directly from hardware made the latter easy to support, as developing these benchmarks amounted to repurposing testbench code designed for debugging. Benchmarks were compiled prior to running experiments to prime SYNERGY&#8217;s bitstream caches. This is appropriate as SYNERGY’s goal is to provide virtualization support for applications which have spent sufficient time in development to have converged on a stable design.</p><figure id="T1" class="table-wrap" data-jats-position="float"><div class="caption"><span class="caption-label">Table 1. </span> <span class="p">Benchmarks were chosen to represent a mix of batch- and streaming-style computation (marked <code class="monospace">*</code>).</span></div><div class="table-container"><table class="table table-bordered table-condensed table-hover" data-jats-frame="hsides" data-jats-rules="rows"><colgroup> <col align="left" valign="top" /> <col align="left" valign="top" /> </colgroup><thead style="vertical-align: bottom;"><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Description</th></tr></thead><tbody><tr><td style="text-align: left;">Adpcm</td><td style="text-align: left;">Pulse-code modulation encoder/decoder</td></tr><tr><td style="text-align: left;">bitcoin</td><td style="text-align: left;">Bitcoin mining accelerator</td></tr><tr><td style="text-align: left;">df</td><td style="text-align: left;">Double-precision arithmetic circuits</td></tr><tr><td style="text-align: left;">mips32</td><td style="text-align: left;">Bubble-sort on a 32-bit MIPS processor</td></tr><tr><td style="text-align: left;">nw*</td><td style="text-align: left;">DNA sequence alignment</td></tr><tr><td style="text-align: left;">regex*</td><td style="text-align: left;">Streaming regular expression matcher</td></tr></tbody></table></div></figure><section id="sec20" class="sec"><h3 class="heading"><span class="caption-label">6.1 </span>Workload Migration</h3><p id="p-50">Figure <a class="xref xref-fig" href="#F6" data-jats-ref-type="fig" data-jats-rid="F6">6</a> plots <code class="monospace">bitcoin</code>’s performance as it is moved between software and hardware on two different target architectures. This workflow is typical of suspend and resume style virtualization.</p><figure id="F6" class="fig" data-jats-position="float"><div class="image-container">
			<a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig06.jpg" data-type="image" data-caption="Figure 6. " href="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig06.jpg">
				<img decoding="async" class="graphic" title="Figure 6. " src="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig06.jpg" alt="" data-image-id="F6" data-image-type="figure" />
			</a>
		</div><figcaption><span class="caption-label">Figure 6. </span> <span class="p">Suspend and Resume. <code class="monospace">Bitcoin</code> is executed on a DE10 target, suspended, saved, and resumed on <code class="monospace">F1</code>.</span><div class="figcaption-footer"> </div></figcaption></figure><p id="p-52">The application begins execution in a new instance of SYNERGY and, after running briefly in software, transitions to hardware execution on a DE10 (<i>t</i> = 5) where it achieves a peak throughput of 16M nonces evaluated per second. At (<i>t</i> = 15) we emit a signal which causes the instance to evaluate a <code class="monospace">$save</code> task. Control then transitions temporarily to software as the runtime evacuates the program’s state. The application’s throughput drops significantly during this window, but quickly returns to steady-state as control returns to hardware (<i>t</i> = 22). SYNERGY is then terminated (<i>t</i> = 30), and similar process is initiated on an F1 instance (<i>t</i> = 39). In this case, the instance evaluates a <code class="monospace">restart</code> task to restore the context which was saved on the DE10 (<i>t</i> = 50). Due to the larger, higher performance hardware on F1, the program achieves a higher throughput (83M), but suffers from higher performance degradation during the <code class="monospace">restart</code> as it takes longer to reconfigure.</p><p id="p-53">Figure <a class="xref xref-fig" href="#F7" data-jats-ref-type="fig" data-jats-rid="F7">7</a> plots the performance of a 32-bit MIPS processor consisting of registers, a datapath, and on-chip memory. The CPU repeatedly randomizes and sorts an in-memory array, with execution transitioning between two FPGAs. This workload is typical of long-running batch computations which are coalesced to improve datacenter utilization. The curves show two different execution contexts: one where the program is migrated between nodes in a cluster of DE10s, and one where it is migrated between F1 instances. The timing of key events is synchronized to highlight the differences between the environments. In both cases control begins in software and transitions shortly thereafter to hardware (<i>t</i> = 2,4) where the targets achieve throughputs of 14M and 41M instructions per second, respectively. At (<i>t</i> = 15) we emit a signal which causes both contexts to evaluate <code class="monospace">$save/$restart</code> tasks as the program is moved between FPGAs. A short time later (<i>t</i> = 20), performance returns to peak. Performance degradation during hardware/software transitions is more pronounced for <code class="monospace">mips32</code>, with the virtual frequency temporarily lowering to 2K on F1. This is partially due to the large amount of state which must be managed by <code class="monospace">get/set</code> requests (the state of a MIPS processor consists of its registers, data memory, and instruction memory).</p><figure id="F7" class="fig" data-jats-position="float"><div class="image-container">
			<a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig07.jpg" data-type="image" data-caption="Figure 7. " href="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig07.jpg">
				<img decoding="async" class="graphic" title="Figure 7. " src="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig07.jpg" alt="" data-image-id="F7" data-image-type="figure" />
			</a>
		</div><figcaption><span class="caption-label">Figure 7. </span> <span class="p">Hardware Migration. <code class="monospace">Mips32</code> begins execution on one target and is migrated mid-execution to another.</span><div class="figcaption-footer"> </div></figcaption></figure></section><section id="sec21" class="sec"><h3 class="heading"><span class="caption-label">6.2 </span>Multitenancy</h3><p id="p-55">Figure <a class="xref xref-fig" href="#F8" data-jats-ref-type="fig" data-jats-rid="F8">8</a> plots the performance of two streaming-style computations on a DE10. Both read inputs from data files that are too large to store on-chip. The first (<code class="monospace">regex</code>) reads in characters and generates statistics on the stream using a regular expression matching algorithm. The second (<code class="monospace">nw</code>) reads in DNA sequences and evaluates how well they match using a tile-based alignment algorithm.</p><figure id="F8" class="fig" data-jats-position="float"><div class="image-container">
			<a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig08.jpg" data-type="image" data-caption="Figure 8. " href="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig08.jpg">
				<img decoding="async" class="graphic" title="Figure 8. " src="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig08.jpg" alt="" data-image-id="F8" data-image-type="figure" />
			</a>
		</div><figcaption><span class="caption-label">Figure 8. </span> <span class="p">Temporal Multiplexing. <code class="monospace">Regex</code> and <code class="monospace">nw</code> are timeslice scheduled to resolve contention on off-device <code class="monospace">IO</code>.</span><div class="figcaption-footer"> </div></figcaption></figure><p id="p-57">The regular expression matcher begins execution in a new instance of SYNERGY and, at time (<i>t</i> = 10), transitions to hardware where it achieves a peak throughput of 500,000 reads per second. At (<i>t</i> = 15), the sequence aligner begins execution in a second instance of SYNERGY. For the next few seconds, the performance of the matcher is unaffected. At (<i>t</i> = 24), the aligner transitions to hardware and the hypervisor is forced to temporally multiplex the execution of both applications, as they now contend on a common IO path between software and hardware. During the period where both applications are active (<i>t</i> = 24 – 60), the matcher’s throughput drops to slightly less than 50%. This is due to the hypervisor’s use of round-robin scheduling and the fact that the primitive read operations performed by the matcher (characters) require less time to run to completion than the primitive read operations performed by the aligner (strings).</p><p id="p-58">At (<i>t</i> = 60), the sequence aligner completes execution, and the throughput for the matcher returns to its peak value shortly thereafter. Compared to previous examples, the time required to transition between performance regimes is slightly more pronounced. This is due to SYNERGY’s use of adaptive refinement<a class="reference-link xref xref-bibr" href="#bib21" data-jats-ref-type="bibr" data-jats-rid="bib21"><sup>21</sup></a> to determine the time spent in hardware execution before yielding control back to the REPL. It takes several seconds after the aligner finishes execution for Cascade to adjust back to a schedule which achieves peak throughput while also maintaining interactivity.</p><p id="p-59">Figure <a class="xref xref-fig" href="#F9" data-jats-ref-type="fig" data-jats-rid="F9">9</a> plots the performance of some batch-style computations on an F1 instance. The first two applications read small inputs sets and transition to long-running computation before returning a result. The former (<code class="monospace">df</code>) performs double-precision floating-point computations characteristic of numeric simulations, and the latter (<code class="monospace">bitcoin</code>) is the miner described in §<a class="xref xref-sec" href="#sec20" data-jats-ref-type="sec" data-jats-rid="sec20">6.1</a>. The hypervisor is able to run both in parallel. The applications begin software execution in separate instances of SYNERGY (<i>t</i> = 0,22) and after transitioning to hardware (<i>t</i> = 2,24) achieve a virtual clock rate<a class="reference-link xref xref-bibr" href="#bib21" data-jats-ref-type="bibr" data-jats-rid="bib21"><sup>21</sup></a> of 83MHz. At (<i>t</i> = 42), another batch-style application that encodes and decodes audio data (<code class="monospace">adpcm</code>) begins execution in a new instance of SYNERGY. While the hypervisor can run this application in parallel with the first two, lowering its application logic onto the F1 instance causes the resulting design to no longer meet timing at the peak frequency of 250MHz. To accommodate all three applications, the global clock is set to 125MHz, reducing their virtual clock frequencies to 41MHz. The SYNERGY hypervisor hides the number of applications running simultaneously from the user. As a result, this can lead to unexpected performance regressions in our prototype. Future work can address this by running each application in an appropriate clock domain, with clock-crossing logic added automatically as needed.</p><figure id="F9" class="fig" data-jats-position="float"><div class="image-container">
			<a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig09.jpg" data-type="image" data-caption="Figure 9. " href="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig09.jpg">
				<img decoding="async" class="graphic" title="Figure 9. " src="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig09.jpg" alt="" data-image-id="F9" data-image-type="figure" />
			</a>
		</div><figcaption><span class="caption-label">Figure 9. </span> <span class="p">Spatial Multiplexing. <code class="monospace">Bitcoin</code>, <code class="monospace">df</code>, and <code class="monospace">adpcm</code> are co-scheduled on one device without contention.</span><div class="figcaption-footer"> </div></figcaption></figure></section><section id="sec22" class="sec"><h3 class="heading"><span class="caption-label">6.3 </span>Quiescence</h3><p id="p-61">Saving and restoring large volumes of state not only degrades reconfiguration performance (Figure <a class="xref xref-fig" href="#F7" data-jats-ref-type="fig" data-jats-rid="F7">7</a>) but also requires a large amount of device-side resources to implement (§ <a class="xref xref-sec" href="#sec23" data-jats-ref-type="sec" data-jats-rid="sec23">6.4</a>). SYNERGY’s quiescence interface allows developers to signal when a program is quiescent and which variables are stateful at that time. We found that most of our benchmarks had a large number of volatile variables, including 99%, 96%, and 71% of <code class="monospace">df</code>’s, <code class="monospace">bitcoin</code>’s, and <code class="monospace">mips32</code>’s state. For these applications, implementing quiescence resulted in an average LUT and FF savings of 50% and 15%, respectively. In our other benchmarks, 1<code class="monospace">/</code>8 to 1<code class="monospace">/</code>4 of the state was volatile. Implementing quiescence for them resulted in an average LUT and FF savings of 2% and 9%, respectively.</p></section><section id="sec23" class="sec"><h3 class="heading"><span class="caption-label">6.4 </span>Overheads</h3><p id="p-62">There are two major sources of overheads in programs constructed by SYNERGY. The first are discrete, nonfundamental overheads resulting from how programs are virtualized in hardware in the SYNERGY prototype. Implementing the semantics of the original program with the ability to pause execution in the middle of a virtual clock cycle involves toggling the virtual clock variable, evaluating relevant program logic, and latching variable assignments. When these are done in separate hardware cycles, there is a minimum 3<code class="monospace">x</code> performance overhead. This not a fundamental requirement and can be improved with future work on target-specific backends.</p><p id="p-63">The second source of overheads comes from the state access and execution control logic added by SYNERGY. As a baseline, we compile our benchmarks natively on AmorphOS, providing an upper bound on resource and frequency overheads. We also simulate a Cascade on AmorphOS baseline by compiling our benchmarks without system tasks, which avoids overheads introduced by our new state machine transformations. Finally, we modified our benchmarks to implement the quiescence protocol, allowing us to estimate the savings of exposing reconfiguration to developers and establishing a lower bound on state access overhead.</p><p id="p-64">We find that SYNERGY’s FF and LUT usage is generally 2–4<code class="monospace">x</code> and 1–6<code class="monospace">x</code> that of native, respectively (figures shown in the full paper). Overall, SYNERGY’s overheads are similar to Cascade’s, with quiescence annotations providing a savings of up to ~2<i>x</i>.</p><p id="p-65">Figure <a class="xref xref-fig" href="#F10" data-jats-ref-type="fig" data-jats-rid="F10">10</a> shows that SYNERGY does not reduce the design’s operating frequency in most cases. <code class="monospace">adpcm</code> is an exception, likely due to its use of system tasks from inside complex control logic. SYNERGY’s frequency overhead for <code class="monospace">mips32</code> is almost entirely due to forcing the use of FFs to implement RAMs, which is not a fundamental limitation. Compared to AmorphOS using FFs (AOS FF), SYNERGY was less than 6% slower despite supporting full state capture. When combined with the previous 3<code class="monospace">x</code> overhead, we find that SYNERGY’s overall execution overhead is within 3–4<code class="monospace">x</code> that of native.</p><figure id="F10" class="fig" data-jats-position="float"><div class="image-container">
			<a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig10.jpg" data-type="image" data-caption="Figure 10. " href="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig10.jpg">
				<img decoding="async" class="graphic" title="Figure 10. " src="https://cacm.acm.org/wp-content/uploads/2024/04/3613903_fig10.jpg" alt="" data-image-id="F10" data-image-type="figure" />
			</a>
		</div><figcaption><span class="caption-label">Figure 10. </span> <span class="p">Design frequency achieved in MHz.</span><div class="figcaption-footer"> </div></figcaption></figure></section></section><section id="sec24" class="sec"><h2 class="heading"><span class="caption-label">7. </span>Related Work</h2><p id="p-67">Primitives for FPGAs include sharing FPGA fabric,<a class="reference-link xref xref-bibr" href="#bib1" data-jats-ref-type="bibr" data-jats-rid="bib1"><sup>1</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#bib2" data-jats-ref-type="bibr" data-jats-rid="bib2"><sup>2</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#bib6" data-jats-ref-type="bibr" data-jats-rid="bib6"><sup>6</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#bib11" data-jats-ref-type="bibr" data-jats-rid="bib11"><sup>11</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#bib12" data-jats-ref-type="bibr" data-jats-rid="bib12"><sup>12</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#bib23" data-jats-ref-type="bibr" data-jats-rid="bib23"><sup>23</sup></a> spatial multiplexing,<a class="reference-link xref xref-bibr" href="#bib3" data-jats-ref-type="bibr" data-jats-rid="bib3"><sup>3</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#bib22" data-jats-ref-type="bibr" data-jats-rid="bib22"><sup>22</sup></a> memory virtualization,<a class="reference-link xref xref-bibr" href="#bib15" data-jats-ref-type="bibr" data-jats-rid="bib15"><sup>15</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#bib24" data-jats-ref-type="bibr" data-jats-rid="bib24"><sup>24</sup></a> preemption,<a class="reference-link xref xref-bibr" href="#bib16" data-jats-ref-type="bibr" data-jats-rid="bib16"><sup>16</sup></a> and interleaved hardwaresoftware task execution.<a class="reference-link xref xref-bibr" href="#bib22" data-jats-ref-type="bibr" data-jats-rid="bib22"><sup>22</sup></a> Core techniques include virtualizing FPGA fabric, including regions<a class="reference-link xref xref-bibr" href="#bib19" data-jats-ref-type="bibr" data-jats-rid="bib19"><sup>19</sup></a> and abstraction layers/overlays<a class="reference-link xref xref-bibr" href="#bib10" data-jats-ref-type="bibr" data-jats-rid="bib10"><sup>10</sup></a> Extending OS abstractions to FPGAs is an area of active research. ReconOS<a class="reference-link xref xref-bibr" href="#bib15" data-jats-ref-type="bibr" data-jats-rid="bib15"><sup>15</sup></a> extends eCos<a class="reference-link xref xref-bibr" href="#bib5" data-jats-ref-type="bibr" data-jats-rid="bib5"><sup>5</sup></a> with <i>hardware threads</i> similar to Hthreads.<a class="reference-link xref xref-bibr" href="#bib18" data-jats-ref-type="bibr" data-jats-rid="bib18"><sup>18</sup></a> Previous multi-application FPGA sharing proposals<a class="reference-link xref xref-bibr" href="#bib3" data-jats-ref-type="bibr" data-jats-rid="bib3"><sup>3</sup></a> restrict programming models or fail to provide isolation. OS primitives have been combined to form OSes for FPGAs<a class="reference-link xref xref-bibr" href="#bib7" data-jats-ref-type="bibr" data-jats-rid="bib7"><sup>7</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#bib15" data-jats-ref-type="bibr" data-jats-rid="bib15"><sup>15</sup></a> as well as FPGA hypervisors.<a class="reference-link xref xref-bibr" href="#bib19" data-jats-ref-type="bibr" data-jats-rid="bib19"><sup>19</sup></a> Chen et al. explore virtualization challenges when FPGAs are a shared resource;<a class="reference-link xref xref-bibr" href="#bib2" data-jats-ref-type="bibr" data-jats-rid="bib2"><sup>2</sup></a> AmorphOS<a class="reference-link xref xref-bibr" href="#bib9" data-jats-ref-type="bibr" data-jats-rid="bib9"><sup>9</sup></a> provides an OS-level management layer to concurrently share FPGAs among mutually distrustful processes. ViTAL<a class="reference-link xref xref-bibr" href="#bib25" data-jats-ref-type="bibr" data-jats-rid="bib25"><sup>25</sup></a> exposes a single-FPGA abstraction for scale-out acceleration over multiple FPGAs; unlike SYNERGY, it exposes a homogeneous abstraction of the hardware to enable offline compilation. The Optimus<a class="reference-link xref xref-bibr" href="#bib16" data-jats-ref-type="bibr" data-jats-rid="bib16"><sup>16</sup></a> hypervisor supports spatial and temporal sharing of FPGAs attached to the host memory bus, but does virtualize reconfiguration capabilities. Coyote<a class="reference-link xref xref-bibr" href="#bib13" data-jats-ref-type="bibr" data-jats-rid="bib13"><sup>13</sup></a> is a shell for FPGAs which supports both spatial and temporal multiplexing as well as communication and virtual memory management. While sharing goals with these systems, SYNERGY differs fundamentally from them by virtualizing FPGAs at the language level <i>in addition</i> to providing access to OS-managed resources.</p></section><section id="sec25" class="sec"><h2 class="heading"><span class="caption-label">8. </span>Conclusion</h2><p id="p-68">FPGAs are emerging in datacenters so techniques for virtualizing them are urgently needed to enable them as a practical resource for on-demand hardware acceleration. SYNERGY is a compiler/runtime solution that supports multi-tenancy and workload migration on hardware which is available <i>today</i>.</p></section><section id="sec26" class="sec"><h2 class="heading"><span class="caption-label">9. </span>Acknowledgments</h2><p id="p-69">This research was supported by NSF grants CNS-1846169 and CNS-2006943, and U.S. Department of Energy, National Nuclear Security Administration Award Number DENA0003969.</p></section></div><footer class="back"></footer></article>
</div>
		</div>
		<footer class="article-footer">
			
<section class="article-references" data-component="accordion" data-slide-to-refs="true">
	<a name="references"></a>
	<button class="accordion-controller" aria-expanded="false">
		<span class="article-references__title">
			References		</span>
		<span class="accordion-controller-icon">
			<svg aria-hidden="true" focusable="false" width="16" height="16" fill="var(--wp--preset--color--cacm-blue)"><use href="#am-symbol-icon-chevron-down"></use></svg>		</span>
	</button>
	<ul class="article-references__text accordion-content">
		<section id="references" class="ref-list-container">
<h2 class="heading">References</h2>
<ul id="ref-list1" class="ref-list">
<li class="ref">
<div id="bib1" class="citation"><span class="label">1.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Byma</span>, <span class="given-names">S. </span></span><span class="etal">et al.</span>  </span><span class="article-title">FPGAs in the cloud: Booting virtualized hardware accelerators with openstack</span>. In <span class="source"><em>Proceedings of the 2014 IEEE 22nd Intern. Symp. on Field-Programmable Custom Computing Machines</em></span>. <span class="publisher-name">IEEE Computer Society</span>, <span class="publisher-loc">Washington, DC, USA</span>, <span class="year">2014</span>, <span class="fpage">109</span>–<span class="lpage">116</span>.</span></div>
</li>
<li class="ref">
<div id="bib2" class="citation"><span class="label">2.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Chen</span>, <span class="given-names">F. </span></span><span class="etal">et al.</span> </span><span class="article-title">Enabling FPGAs in the cloud</span>. In <em><span class="source">Proceedings of the 11th ACM Conf. on Computing Frontiers</span>.</em> <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, <span class="year">2014</span>, <span class="fpage">3:1</span>–<span class="lpage">3:10</span>.</span></div>
</li>
<li class="ref">
<div id="bib3" class="citation"><span class="label">3.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Chen</span>, <span class="given-names">L.</span></span>, <span class="string-name"><span class="surname">Marconi</span>, <span class="given-names">T.</span></span>, and <span class="string-name"><span class="surname">Mitra</span>, <span class="given-names">T.</span></span>  </span><span class="article-title">Online scheduling for multi-core shared reconfigurable fabric</span>. In <em><span class="source">Proceedings of the Conf. on Design, Automation and Test in Europe</span>.</em> <span class="publisher-name">EDA Consortium</span>, <span class="publisher-loc">San Jose, CA, USA</span>, <span class="year">2012</span>, <span class="fpage">582</span>–<span class="lpage">585</span>.</span></div>
</li>
<li class="ref">
<div id="bib4" class="citation"><span class="label">4.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Chung</span>, <span class="given-names">E. </span></span><span class="etal">et al.</span> </span><span class="source">Serving DNNs in Real Time at Datacenter Scale with Project Brainwave</span>. <span class="publisher-name">IEEE</span>, March <span class="year">2018</span>.</span></div>
</li>
<li class="ref">
<div id="bib5" class="citation"><span class="label">5.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Domahidi</span>, <span class="given-names">A.</span></span>, <span class="string-name"><span class="surname">Chu</span>, <span class="given-names">E.</span></span>, and <span class="string-name"><span class="surname">Boyd</span>, <span class="given-names">S.</span></span>  </span><span class="article-title">ECOS: An SOCP solver for embedded systems</span>. In<em> Proceedings of the 2013 European <span class="source">Control Conf.</span></em> <span class="publisher-name">IEEE</span>, <span class="year">2013</span>, <span class="fpage">3071</span>–<span class="lpage">3076</span>.</span></div>
</li>
<li class="ref">
<div id="bib6" class="citation"><span class="label">6.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Fahmy</span>, <span class="given-names">S.A.</span></span>, <span class="string-name"><span class="surname">Vipin</span>, <span class="given-names">K.</span></span>, and <span class="string-name"><span class="surname">Shreejith</span>, <span class="given-names">S.</span></span>  </span><span class="article-title">Virtualized FPGA accelerators for efficient cloud computing</span>. In <span class="source"><em>Proceedings of the 2015 IEEE 7th Intern. Conf. on Cloud Computing Technology and Science</em></span>. <span class="publisher-name">IEEE Computer Society</span>, <span class="publisher-loc">Washington, DC, USA</span>, <span class="year">2015</span>, <span class="fpage">430</span>–<span class="lpage">435</span></span></div>
</li>
<li class="ref">
<div id="bib7" class="citation"><span class="label">7.</span> <span class="mixed-citation" data-jats-publication-type="other"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Hamilton</span>, <span class="given-names">B.K.</span></span>, <span class="string-name"><span class="surname">Inggs</span>, <span class="given-names">M.</span></span>, and <span class="string-name"><span class="surname">So</span>, <span class="given-names">H.K.H.</span></span>  </span><span class="article-title">Scheduling mixed-architecture processes in tightly coupled FPGA-CPU reconfigurable computers</span>. In P<em>roceedings of the <span class="source">IEEE 22nd Annual Intern. Symp. on </span></em><span class="source"><em>Field-Programmable Custom Computing Machines,</em> May 2014,  240–240</span>.</span></div>
</li>
<li class="ref">
<div id="bib8" class="citation"><span class="label">8.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Kapitza</span>, <span class="given-names">R. </span></span><span class="etal">et al.</span></span> <span class="article-title">CheapBFT: Resource-efficient byzantine fault tolerance</span>. In <span class="source"><em>Proceedings of the 7th ACM European Conf. on Computer Systems</em></span>. <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, <span class="year">2012</span>, <span class="fpage">295</span>–<span class="lpage">308</span>.</span></div>
</li>
<li class="ref">
<div id="bib9" class="citation"><span class="label">9.</span> <span class="mixed-citation" data-jats-publication-type="other"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Khawaja</span>, <span class="given-names">A. </span></span><span class="etal">et al.</span></span> <span class="article-title">Sharing, protection, and compatibility for reconfigurable fabric with amorphos</span>. In <em>Proceedings of the </em><span class="source"><em>13th USENIX Symp. on Operating Systems Design and Implementation</em>, </span><span class="year">2018</span>, <span class="fpage">107</span>–<span class="lpage">127</span>.</span></div>
</li>
<li class="ref">
<div id="bib10" class="citation"><span class="label">10.</span> <span class="mixed-citation" data-jats-publication-type="journal"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Kirchgessner</span>, <span class="given-names">R.</span></span>, <span class="string-name"><span class="surname">George</span>, <span class="given-names">A.D.</span></span>, and <span class="string-name"><span class="surname">Stitt</span>, <span class="given-names">G.</span></span>  </span><span class="article-title">Low-overhead FPGA middleware for application portability and productivity</span>. <em><span class="source">ACM Trans. Reconfigurable Technol. Syst. </span><span class="volume">8</span></em>, <span class="issue">4</span>, (Sept. <span class="year">2015)</span>, <span class="fpage">21:1</span>–<span class="lpage">21:22</span>.</span></div>
</li>
<li class="ref">
<div id="bib11" class="citation"><span class="label">11.</span> <span class="mixed-citation" data-jats-publication-type="other"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Knodel</span>, <span class="given-names">O.</span></span>, <span class="string-name"><span class="surname">Lehmann</span>, <span class="given-names">P.</span></span>, and <span class="string-name"><span class="surname">Spallek</span>, <span class="given-names">R.G.</span></span>  </span><span class="article-title">RC3E: Reconfigurable accelerators in data centres and their provision by adapted service models</span>. In <em>Proceedings of the</em><span class="source"><em> IEEE 9th Intern. Conf. on Cloud Computing</em> (</span>June <span class="year">2016)</span>, <span class="fpage">19</span>–<span class="lpage">26</span>.</span></div>
</li>
<li class="ref">
<div id="bib12" class="citation"><span class="label">12.</span> <span class="mixed-citation" data-jats-publication-type="other"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Knodel</span>, <span class="given-names">O.</span></span> and <span class="string-name"><span class="surname">Spallek</span>, <span class="given-names">R.G.</span></span>  </span><span class="article-title">Rc3e: Provision and management of reconfigurable hardware accelerators in a cloud environment</span>. <span class="source">CoRR, abs/1508.06843</span>, <span class="year">2015</span>.</span></div>
</li>
<li class="ref">
<div id="bib13" class="citation"><span class="label">13.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Korolija</span>, <span class="given-names">D.</span></span>, <span class="string-name"><span class="surname">Roscoe</span>, <span class="given-names">T.</span></span>, and <span class="string-name"><span class="surname">Alonso</span>, <span class="given-names">G.</span></span>  </span><span class="article-title">Do OS abstractions make sense on FPGAs?</span> In <em>Proceedings of the </em><span class="source"><em>14th USENIX Symp. on Operating Systems Design and Implementation</em>.</span> <span class="publisher-name">USENIX Association</span>, Nov. <span class="year">2020</span>, <span class="fpage">991</span>–<span class="lpage">1010</span>.</span></div>
</li>
<li class="ref">
<div id="bib14" class="citation"><span class="label">14.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Li</span>, <span class="given-names">S. </span></span><span class="etal">et al.</span> </span><span class="article-title">Architecting to achieve a billion requests per second throughput on a single key-value store server platform</span>. In <em><span class="source">Proceedings of the 42nd Annual Intern. Symp. on Computer Architecture</span></em>. <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, <span class="year">2015</span>, <span class="fpage">476</span>–<span class="lpage">488</span>.</span></div>
</li>
<li class="ref">
<div id="bib15" class="citation"><span class="label">15.</span> <span class="mixed-citation" data-jats-publication-type="journal"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Lübbers</span>, <span class="given-names">E.</span></span> and <span class="string-name"><span class="surname">Platzner</span>, <span class="given-names">M.</span></span>  </span><span class="article-title">ReconOS: Multithreaded programming for reconfigurable computers</span>. <em><span class="source">ACM Trans. Embed. Comput. Syst. </span><span class="volume">9</span></em>, <span class="issue">1</span>, (Oct. <span class="year">2009)</span>, <span class="fpage">8:1</span>–<span class="lpage">8:33</span>.</span></div>
</li>
<li class="ref">
<div id="bib16" class="citation"><span class="label">16.</span> <span class="mixed-citation" data-jats-publication-type="other"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Ma</span>, <span class="given-names">J. </span></span><span class="etal">et al.</span></span> <span class="article-title">A hypervisor for shared-memory FPGA platforms</span>. In <em><span class="source">Proceedings of the 25th Intern. Conf. on Architectural Support for Programming Languages and Operating Systems</span></em>, <span class="year">2020</span>.</span></div>
</li>
<li class="ref">
<div id="bib17" class="citation"><span class="label">17.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Oguntebi</span>, <span class="given-names">T.</span></span> and <span class="string-name"><span class="surname">Olukotun</span>, <span class="given-names">K.</span></span>  </span><span class="article-title">GraphOps: A dataflow library for graph analytics acceleration</span>. In <em><span class="source">Proceedings of the 2016 ACM/SIGDA Intern. Symp. on Field-Programmable Gate Arrays</span>.</em> <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, <span class="year">2016</span>, <span class="fpage">111</span>–<span class="lpage">117</span>.</span></div>
</li>
<li class="ref">
<div id="bib18" class="citation"><span class="label">18.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Peck</span>, <span class="given-names">W. </span></span><span class="etal">et al.</span></span> <span class="article-title">Hthreads: A computational model for reconfigurable devices</span>. In <span class="source">FPL</span>. <span class="publisher-name">IEEE</span>, <span class="year">2006</span>, <span class="fpage">1</span>–<span class="lpage">4</span>.</span></div>
</li>
<li class="ref">
<div id="bib19" class="citation"><span class="label">19.</span> <span class="mixed-citation" data-jats-publication-type="other"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Pham</span>, <span class="given-names">K.D. </span></span><span class="etal">et al.</span>  </span><span class="article-title">Microkernel hypervisor for a hybrid ARM-FPGA platform</span>. In <em>Proceedings of the <span class="source">IEEE 24th Intern. Conf. on</span> </em><span class="source"><em>Application-Specific Systems, Architectures and Processors,</em> June 2013, pages 219–226</span>.</span></div>
</li>
<li class="ref">
<div id="bib20" class="citation"><span class="label">20.</span> <span class="mixed-citation" data-jats-publication-type="other"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Putnam</span>, <span class="given-names">A. </span></span><span class="etal">et al.</span> </span><span class="article-title">A reconfigurable fabric for accelerating large-scale datacenter services</span>. In <em>Proceedings of the <span class="source">41st Annual Intern. Symp. on Computer Architecture, </span></em>June <span class="year">2014</span>.</span></div>
</li>
<li class="ref">
<div id="bib21" class="citation"><span class="label">21.</span> <span class="mixed-citation" data-jats-publication-type="other"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Schkufza</span>, <span class="given-names">E.</span></span>, <span class="string-name"><span class="surname">Wei</span>, <span class="given-names">M.</span></span>, and <span class="string-name"><span class="surname">Rossbach</span>, <span class="given-names">C.J.</span></span>  </span><span class="article-title">Just-in-time compilation for verilog: A new technique for improving the FPGA programming experience</span>. In <span class="source"><em>Proceedings of the 24th Intern. Conf. on Architectural Support for Programming Languages and Operating Systems,</em> (Providence, RI, USA, April 13-17, 2019)</span>, <span class="fpage">271</span>–<span class="lpage">286</span>.</span></div>
</li>
<li class="ref">
<div id="bib22" class="citation"><span class="label">22.</span> <span class="mixed-citation" data-jats-publication-type="other"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Wassi</span>, <span class="given-names">G. </span></span><span class="etal">et al.</span> </span><span class="article-title">Multi-shape tasks scheduling for online multitasking on FPGAs</span>. In <em>Proceedings of the <span class="source">2014 9th Intern. Symp. on </span></em><span class="source"><em>Reconfigurable and Communication-Centric Systems-on-Chip</em> (May 2014), 1–7.</span></span></div>
</li>
<li class="ref">
<div id="bib23" class="citation"><span class="label">23.</span> <span class="mixed-citation" data-jats-publication-type="other"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Weerasinghe</span>, <span class="given-names">J.</span></span>, <span class="string-name"><span class="surname">Abel</span>, <span class="given-names">F.</span></span>, <span class="string-name"><span class="surname">Hagleitner</span>, <span class="given-names">C.</span></span>, and <span class="string-name"><span class="surname">Herkersdorf</span>, <span class="given-names">A.</span></span>  </span><span class="article-title">Enabling FPGAs in hyperscale data centers</span>. In <em>Proceedings of the </em><span class="source"><em>2015 IEEE 12th Intl Conf on Ubiquitous Intelligence and Computing</em> and <em>Proceedings of the 2015 IEEE 12th Intl Conf on Autonomic and Trusted Computing</em> and <em>Proceedings of the 2015 IEEE 15th Intl Conf on Scalable Computing and Communications and Its Associated Workshops</em> (Beijing, China, Aug. 10-14, 2015)</span>, <span class="fpage">1078</span>–<span class="lpage">1086</span>.</span></div>
</li>
<li class="ref">
<div id="bib24" class="citation"><span class="label">24.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Winterstein</span>, <span class="given-names">F. </span></span><span class="etal">et al.</span></span> <span class="article-title">Matchup: Memory abstractions for heap manipulating programs</span>. In <em><span class="source">Proceedings of the 2015 ACM/SIGDA Intern. Symp. on Field-Programmable Gate Arrays</span>.</em> <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, <span class="year">2015</span>, <span class="fpage">136</span>–<span class="lpage">145</span>.</span></div>
</li>
<li class="ref">
<div id="bib25" class="citation"><span class="label">25.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Zha</span>, <span class="given-names">Y.</span></span> and <span class="string-name"><span class="surname">Li</span>, <span class="given-names">J.</span></span>  </span><span class="article-title">Virtualizing FPGAs in the cloud</span>. In <em>Proceedings of the ACM <span class="source">2020 Conf. on Architectural Support for Programming Languages and Operating Systems</span></em>.</span></div>
</li>
</ul>
</section>
	</ul>
</section>
<section id="authors" class="article-authors" data-component="accordion">
	<button class="accordion-controller" aria-expanded="false">
		<span class="article-authors__title">
			About the Authors		</span>
		<span class="accordion-controller-icon">
			<svg aria-hidden="true" focusable="false" width="16" height="16" fill="var(--wp--preset--color--cacm-blue)"><use href="#am-symbol-icon-chevron-down"></use></svg>		</span>
	</button>
	<div class="article-authors__info accordion-content">
		<div class="article-authors__info-text">
			<section id="sec27" class="biography">
<p id="p-1"><b>Joshua Landgraf</b> (jland@cs.utexas.edu), University of Texas at Austin, TX, USA.</p>
<p id="p-2"><b>Tiffany Yang</b> (tiffanyyang@utexas.edu), University of Texas at Austin, TX, USA.</p>
<p id="p-3"><b>Will Lin</b> (w5lin@ucsd.edu), University of California, San Diego, CA, USA. This work was done while he was at the University of Texas, Austin.</p>
<p id="p-4"><b>Christopher J. Rossbach</b> (rossbach@cs.utexas.edu), University of Texas at Austin and VMware Research Group, Austin, TX, USA.</p>
<p id="p-5"><b>Eric Schkufza</b> (eric.schkufza@gmail.com), Graft, Inc., San Francisco, CA, USA. This work was done while he was at VMWare Research Group.</p>
</section>
		</div>
	</div>
</section>

<ul class="share">
	
<li class="share-link" data-component="share">
	<a href="#" class="share-toggle">
		<svg aria-hidden="true" focusable="false" width="19" height="18" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-share"></use></svg>		<span class="share-link-text">
			Share		</span>
	</a>
	<ul class="share-menu" aria-hidden="true">
		<li>
			<a href="https://twitter.com/intent/tweet?url=https://cacm.acm.org/research/compiler-driven-fpga-virtualization-with-synergy/&#038;text=Compiler-Driven%20FPGA%20Virtualization%20with%20SYNERGY" target="_blank">
				Twitter			</a>
		</li>
		<li>
			<a href="http://www.reddit.com/submit?url=https://cacm.acm.org/research/compiler-driven-fpga-virtualization-with-synergy/&#038;title=Compiler-Driven%20FPGA%20Virtualization%20with%20SYNERGY" target="_blank">
				Reddit			</a>
		</li>
		<li>
			<a href="https://news.ycombinator.com/submitlink?u=https://cacm.acm.org/research/compiler-driven-fpga-virtualization-with-synergy/&#038;t=Compiler-Driven%20FPGA%20Virtualization%20with%20SYNERGY" target="_blank">
				Hacker News			</a>
		</li>
	</ul>
</li>
			
<li class="share-link share-link-pdf">
	<a href="https://dl.acm.org/doi/pdf/10.1145/3613903" target="_blank">
		<svg aria-hidden="true" focusable="false" width="19" height="20" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-pdf-download"></use></svg>		<span class="share-link-text">
			Download PDF		</span>
	</a>
</li>
		
<li class="share-link share-link-print" data-component="print">
	<a href="#" class="print">
		<svg aria-hidden="true" focusable="false" width="19" height="20" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-print"></use></svg>		<span class="share-link-text">
			Print		</span>
	</a>
</li>
		
<li class="share-link share-link-discussion" data-component="share">
	<a class="share-link-comments" href="#comments">
		<svg aria-hidden="true" focusable="false" width="19" height="20" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-comment"></use></svg>		<span class="share-link-text">
			Join the Discussion		</span>
	</a>
</li>
	</ul>
		</footer>
		<div class="article-authors-digital-library">
			<section class="article-submission">
	<div class="article-submission__cta">
		<div class="article-submission__cta-container">
			<p class="article-submission__cta-title">
				Submit an Article to CACM			</p>
			<p class="article-submission__cta-text">
				CACM welcomes unsolicited <a href="https://cacm.acm.org/author-guidelines/#CACMsubmission">submissions</a> on topics of relevance and value to the computing community.			</p>
		</div>
	</div>
</section>

<section class="article-digital-library">
	<div class="article-digital-library__article-info">
		<p class="article-digital-library__intro-text">
			You Just Read		</p>
		<h4 class="article-digital-library__title">
			Compiler-Driven FPGA Virtualization with SYNERGY		</h4>
					<a class="article-digital-library__link" href="https://dl.acm.org/doi/10.1145/3613903">
				<svg aria-hidden="true" focusable="false" width="21" height="21" fill="var(--wp--preset--color--cacm-black)"><use href="#am-symbol-icon-digital-library"></use></svg>				View in the ACM Digital Library				<svg aria-hidden="true" focusable="false" width="14" height="9" fill="var(--wp--preset--color--cacm-black)" class="icon-dl"><use href="#am-symbol-icon-arrow-right"></use></svg>			</a>
			</div>
	<div class="article-digital-library__copyright-info">
		<p>© 2024 Copyright held by theowner/author(s).</p>
			</div>
</section>
		</div>
		<div class="article-sidebar">
			<section class="article-doi">
	<h3 class="article-doi__heading">DOI</h3>
	10.1145/3613903</section>

<section class="article-related">
	<div class="article-related-content">
		<h3 class="article-related__heading">Related Reading</h3>
		<!-- Related reading post list -->
		<ul>
							<li class="article-related-item">
					<p class="article-related-section">
						<a href="https://cacm.acm.org/section/research/">Research and Advances</a>					</p>
					<p class="article-related-title">
						<a href="https://cacm.acm.org/research/a-view-of-the-parallel-computing-landscape/">
							A View of the Parallel Computing Landscape						</a>
					</p>
					<p class="article-related-topic">
						<a href="https://cacm.acm.org/category/architecture-and-hardware/">Architecture and Hardware</a>					</p>
				</li>
					</ul>
	</div>
</section>

<div class="ad ad-mobile ad--is-loading" data-component="ad" data-platform="mobile" data-show-ad="false">
		<div class="cacm-ad-unit">
		<p class="ad-label">Advertisement</p>
		<div class="ad-unit" data-pipeline-id="684700" data-dimension-id="599027"></div>
		<noscript><a href="https://acm.nui.media/pipeline/684700/0/cc?z=acm"><img src="https://acm.nui.media/pipeline/684700/0/vc?z=acm&#038;dim=599027&#038;kw=&#038;click=&#038;abr=$imginiframe" alt="" ></a></noscript>
	</div>
	</div>

<div class="ad ad-desktop ad--is-loading" data-component="ad" data-platform="desktop" data-show-ad="false">
		<div class="cacm-ad-unit">
		<p class="ad-label">Advertisement</p>
		<div class="ad-unit" data-pipeline-id="684700" data-dimension-id="599027"></div>
		<noscript><a href="https://acm.nui.media/pipeline/684700/0/cc?z=acm"><img src="https://acm.nui.media/pipeline/684700/0/vc?z=acm&#038;dim=599027&#038;kw=&#038;click=&#038;abr=$imginiframe" alt="" ></a></noscript>
	</div>
	</div>
		</div>
		
<section class="article-comments">
	<div class="article-comments__inner container">
		<h3 class="article-comments__heading">
			Join the Discussion (0)		</h3>
		
<section class="cta-join-the-discussion" id="article-discussion">
	<div class="cta-join-the-discussion__box">
		<h4 class="cta-join-the-discussion__heading">Become a Member or Sign In to Post a Comment</h4>
		<div class="cta-join-the-discussion__button-group">
			<a class="cta-join-the-discussion__button cta-join-the-discussion__button--login" href="https://cacm.acm.org/wp-login.php?saml_sso">Sign In</a>
			<a class="cta-join-the-discussion__button cta-join-the-discussion__button--signup" href="https://accounts.acm.org/">Sign Up</a>
		</div>
	</div>
</section>
		
<div id="comments" class="comments-area">

	
		<div id="respond" class="auth-comment-form" data-component="authCommentForm" data-replytocom="0">
		<div class="auth-comment-form__contents">
			<span class="auth-comment-form__loader">
				<svg version="1.1" id="L9" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 100 100" enable-background="new 0 0 0 0" xml:space="preserve">
					<path fill="var(--wp--preset--color--cacm-blue)" d="M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50">
						<animateTransform
							attributeName="transform"
							attributeType="XML"
							type="rotate"
							dur="1s"
							from="0 50 50"
							to="360 50 50"
							repeatCount="indefinite" />
					</path>
				</svg>
			</span>
		</div>
	</div>

</div><!-- #comments -->
	</div>
</section>

		<section
			class="post-list the-latest"
			data-layout="grid-three-up"
			data-component="postList"
		>
							
		<header class="section-header ">
			<h3				class="section-header__heading"
			>
									<a class="section-header__heading-link" href="/?s=">
						The Latest from CACM					</a>
							</h3>
							<div class="section-header__readmore">
					<a class="section-header__readmore-link" href="/?s=" aria-label="
						Explore more from The Latest from CACM					">
						<span class="section-header__readmore-text">Explore More</span>
						<span class="section-header__readmore-icon"><svg aria-hidden="true" focusable="false" width="14" height="9"><use href="#am-symbol-icon-arrow-right"></use></svg></span>
					</a>
				</div>
								</header>

					
			<div class="">
				<div class="post-list__content"><div class="post-list__item">
	<article id="post-756401" class="post-list__post post-756401 post type-post status-publish format-standard has-post-thumbnail hentry category-architecture-and-hardware section-blogcacm">
		<div class="post-list__post-content">
			<div class="post-list__post-text">
									<div class="post-list__post-eyebrow">
						<a href="https://cacm.acm.org/section/blogcacm/">BLOG@CACM</a>																			<span class="post-list__post-timestamp"><span class="posted-on"> May 10 2024</span></span>
																	</div>
													<p class="post-list__post-heading">
						<a href="https://cacm.acm.org/blogcacm/how-we-lost-the-internet/">How We Lost the Internet</a>
					</p>
												<div class="post-list__post-meta-group">
											<div class="post-list__post-byline">
							 <a href="https://cacm.acm.org/author/micah-d-beck/" title="Posts by Micah D. Beck" class="author url fn" rel="author">Micah D. Beck</a> and <a href="https://cacm.acm.org/author/terry-r-moore/" title="Posts by Terry R. Moore" class="author url fn" rel="author">Terry R. Moore</a>						</div>
																<span class="post-list__post-topic"><a href="https://cacm.acm.org/category/architecture-and-hardware/">Architecture and Hardware</a></span>
									</div>
			</div>
							<figure class="post-list__post-figure">
					<a href="https://cacm.acm.org/blogcacm/how-we-lost-the-internet/" aria-label="How We Lost the Internet" aria-hidden="true" tabindex="-1">
													<div class="image-wrapper image-wrapper--widescreen"><img width="1024" height="576" src="https://cacm.acm.org/wp-content/uploads/2024/05/050824.BLOG_.How-We-Lost-S.jpg" class="attachment-full size-full" alt="Credit: Shutterstock cracked display screen, illustration" decoding="async" srcset="https://cacm.acm.org/wp-content/uploads/2024/05/050824.BLOG_.How-We-Lost-S.jpg 2400w, https://cacm.acm.org/wp-content/uploads/2024/05/050824.BLOG_.How-We-Lost-S.jpg?resize=300,169 300w, https://cacm.acm.org/wp-content/uploads/2024/05/050824.BLOG_.How-We-Lost-S.jpg?resize=768,432 768w, https://cacm.acm.org/wp-content/uploads/2024/05/050824.BLOG_.How-We-Lost-S.jpg?resize=1024,576 1024w, https://cacm.acm.org/wp-content/uploads/2024/05/050824.BLOG_.How-We-Lost-S.jpg?resize=1536,864 1536w, https://cacm.acm.org/wp-content/uploads/2024/05/050824.BLOG_.How-We-Lost-S.jpg?resize=2048,1152 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></div>											</a>
				</figure>
					</div>
	</article>
</div>

<div class="post-list__item">
	<article id="post-756329" class="post-list__post post-756329 post type-post status-publish format-standard has-post-thumbnail hentry category-software-engineering-and-programming-languages section-blogcacm">
		<div class="post-list__post-content">
			<div class="post-list__post-text">
									<div class="post-list__post-eyebrow">
						<a href="https://cacm.acm.org/section/blogcacm/">BLOG@CACM</a>																			<span class="post-list__post-timestamp"><span class="posted-on"> May 9 2024</span></span>
																	</div>
													<p class="post-list__post-heading">
						<a href="https://cacm.acm.org/blogcacm/vendor-software-solutions-in-a-cloudy-world/">Vendor Software Solutions in a Cloudy World</a>
					</p>
												<div class="post-list__post-meta-group">
											<div class="post-list__post-byline">
							 <a href="https://cacm.acm.org/author/doug-meil/" title="Posts by Doug Meil" class="author url fn" rel="author">Doug Meil</a>						</div>
																<span class="post-list__post-topic"><a href="https://cacm.acm.org/category/software-engineering-and-programming-languages/">Software Engineering and Programming Languages</a></span>
									</div>
			</div>
							<figure class="post-list__post-figure">
					<a href="https://cacm.acm.org/blogcacm/vendor-software-solutions-in-a-cloudy-world/" aria-label="Vendor Software Solutions in a Cloudy World" aria-hidden="true" tabindex="-1">
													<div class="image-wrapper image-wrapper--widescreen"><img width="1024" height="576" src="https://cacm.acm.org/wp-content/uploads/2024/05/050724.BLOG_.Vendor-Software-S.jpg" class="attachment-full size-full" alt="Credit: Shutterstock datacenter in the clouds, cloud-computing concept, illustration" decoding="async" srcset="https://cacm.acm.org/wp-content/uploads/2024/05/050724.BLOG_.Vendor-Software-S.jpg 2400w, https://cacm.acm.org/wp-content/uploads/2024/05/050724.BLOG_.Vendor-Software-S.jpg?resize=300,169 300w, https://cacm.acm.org/wp-content/uploads/2024/05/050724.BLOG_.Vendor-Software-S.jpg?resize=768,432 768w, https://cacm.acm.org/wp-content/uploads/2024/05/050724.BLOG_.Vendor-Software-S.jpg?resize=1024,576 1024w, https://cacm.acm.org/wp-content/uploads/2024/05/050724.BLOG_.Vendor-Software-S.jpg?resize=1536,864 1536w, https://cacm.acm.org/wp-content/uploads/2024/05/050724.BLOG_.Vendor-Software-S.jpg?resize=2048,1152 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></div>											</a>
				</figure>
					</div>
	</article>
</div>

<div class="post-list__item">
	<article id="post-756284" class="post-list__post post-756284 post type-post status-publish format-standard has-post-thumbnail hentry category-computing-applications category-hci section-news">
		<div class="post-list__post-content">
			<div class="post-list__post-text">
									<div class="post-list__post-eyebrow">
						<a href="https://cacm.acm.org/section/news/">News</a>																			<span class="post-list__post-timestamp"><span class="posted-on"> May 7 2024</span></span>
																	</div>
													<p class="post-list__post-heading">
						<a href="https://cacm.acm.org/news/whither-bcis/">Whither BCIs?</a>
					</p>
												<div class="post-list__post-meta-group">
											<div class="post-list__post-byline">
							 <a href="https://cacm.acm.org/author/sandrine-ceurstemont/" title="Posts by Sandrine Ceurstemont" class="author url fn" rel="author">Sandrine Ceurstemont</a>						</div>
																<span class="post-list__post-topic"><a href="https://cacm.acm.org/category/computing-applications/">Computing Applications</a></span>
									</div>
			</div>
							<figure class="post-list__post-figure">
					<a href="https://cacm.acm.org/news/whither-bcis/" aria-label="Whither BCIs?" aria-hidden="true" tabindex="-1">
													<div class="image-wrapper image-wrapper--widescreen"><img width="1024" height="576" src="https://cacm.acm.org/wp-content/uploads/2024/05/050624.News_.Whither-BCIG.jpg" class="attachment-full size-full" alt="Credit: Getty Images human head with color motion trails, illustration" decoding="async" srcset="https://cacm.acm.org/wp-content/uploads/2024/05/050624.News_.Whither-BCIG.jpg 2400w, https://cacm.acm.org/wp-content/uploads/2024/05/050624.News_.Whither-BCIG.jpg?resize=300,169 300w, https://cacm.acm.org/wp-content/uploads/2024/05/050624.News_.Whither-BCIG.jpg?resize=768,432 768w, https://cacm.acm.org/wp-content/uploads/2024/05/050624.News_.Whither-BCIG.jpg?resize=1024,576 1024w, https://cacm.acm.org/wp-content/uploads/2024/05/050624.News_.Whither-BCIG.jpg?resize=1536,864 1536w, https://cacm.acm.org/wp-content/uploads/2024/05/050624.News_.Whither-BCIG.jpg?resize=2048,1152 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></div>											</a>
				</figure>
					</div>
	</article>
</div>

</div>			</div>

		</section>

		
<div class="cta-membership cta-membership--no-js" data-component="ctaMembership">
	
		<section class="cta-become-a-member">
			<div class="cta-become-a-member__inner container">
				<h3					class="cta-become-a-member__heading">
					Shape the Future of Computing				</h3>
									<p class="cta-become-a-member__description">
						ACM encourages its members to take a direct hand in shaping the future of the association. There are more ways than ever to get involved.					</p>
													<a class="cta-become-a-member__link" href="https://www.acm.org/about-acm/get-involved">
						Get Involved											</a>
							</div>
		</section>

		
		<section class="cta-open-access">
			<div class="cta-open-access__inner container">
				<h3					class="cta-open-access__heading">
					Communications of the ACM (CACM) is now a fully Open Access publication.				</h3>
									<p class="cta-open-access__description">
						By opening CACM to the world, we hope to increase engagement among the broader computer science community and encourage non-members to discover the rich resources ACM has to offer.					</p>
													<a class="cta-open-access__link" href="https://cacm.acm.org/news/cacm-is-becoming-open-access">
						Learn More											</a>
							</div>
		</section>

		</div>

	
</article><!-- #post-## -->

			</main>
		</div>
	</div><!-- #content -->

	<footer id="colophon" class="site-footer">
		<div class="site-footer__inner container">
			<div class="site-footer__columns">
				<div class="site-footer__column site-footer__column-branding">
					<a class="site-footer__logo" aria-label="Home" href="https://cacm.acm.org">
						<svg aria-hidden="true" focusable="false" width="548" height="88" fill="#FFF"><use href="#am-symbol-cacm-logo"></use></svg>					</a>
					<nav class="social-navigation">
		<ul class="social-navigation__list">
		<li>
			<a href="https://twitter.com/cacmmag">
				<span class="screen-reader-only">CACM on Twitter</span>
				<svg aria-hidden="true" focusable="false" width="38" height="38" fill="#fff"><use href="#am-symbol-icon-social-twitter"></use></svg>			</a>
		</li>
		<li>
			<a href="https://www.reddit.com/user/TheOfficialACM">
				<span class="screen-reader-only">CACM on Reddit</span>
				<svg aria-hidden="true" focusable="false" width="38" height="38" fill="#fff"><use href="#am-symbol-icon-social-reddit"></use></svg>			</a>
		</li>
		<li>
			<a href="https://www.linkedin.com/groups/36836/">
				<span class="screen-reader-only">CACM on LinkedIn</span>
				<svg aria-hidden="true" focusable="false" width="38" height="38" fill="#fff"><use href="#am-symbol-icon-social-linkedin"></use></svg>			</a>
		</li>
	</ul>
</nav>
				</div>
				<div class="site-footer__column site-footer__column-topics">
					
<div class="site-footer__topics-menu">
			<p class="site-footer__heading">
			Topics		</p>
		<ul class="site-footer__topics-menu__list">
												<li>
					<a href="https://cacm.acm.org/category/architecture-and-hardware/">
						Architecture and Hardware					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/artificial-intelligence-machine-learning/">
						Artificial Intelligence and Machine Learning					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/computer-history/">
						Computer History					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/computing-applications/">
						Computing Applications					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/computing-profession/">
						Computing Profession					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/data-and-information/">
						Data and Information					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/education/">
						Education					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/hci/">
						HCI					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/philosophy-of-computing/">
						Philosophy of Computing					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/security-and-privacy/">
						Security and Privacy					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/society/">
						Society					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/software-engineering-and-programming-languages/">
						Software Engineering and Programming Languages					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/systems-and-networking/">
						Systems and Networking					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/theory/">
						Theory					</a>
				</li>
							</ul>
	</div>
				</div>
				<div class="site-footer__column site-footer__column-about">
					<div class="site-footer__menu-magazine">
						<p class="site-footer__heading">Magazine</p>
						<ul id="menu-magazine-footer" class="site-footer__menu-magazine-menu"><li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217988"><a href="/issue/latest/" id="menu-link-10">Latest Issue</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217989"><a href="/issues/" id="menu-link-11">Magazine Archive</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224644"><a href="https://cacm.acm.org/editorial-staff-board/" id="menu-link-12">Editorial Staff and Board</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-751386"><a href="https://cacm.acm.org/author-guidelines#CACMsubmission" id="menu-link-13">Submit an Article</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224585"><a href="https://cacm.acm.org/feeds-2/" id="menu-link-14">Alerts &#038; Feeds</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224645"><a href="https://cacm.acm.org/author-guidelines/" id="menu-link-15">Author Guidelines</a></li>
</ul>					</div>
					<div class="site-footer__menu-communications">
						<p class="site-footer__heading">Communications of the ACM</p>
						<ul id="menu-communications-footer" class="site-footer-communications-menu"><li id="menu-item-224637" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224637"><a href="https://cacm.acm.org/about-us/" id="menu-link-16">About Us</a></li>
<li id="menu-item-224664" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224664"><a href="https://cacm.acm.org/faq/" id="menu-link-17">Frequently Asked Questions</a></li>
<li id="menu-item-224638" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224638"><a href="https://cacm.acm.org/contact-us/" id="menu-link-18">Contact Us</a></li>
<li id="menu-item-217972" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217972"><a href="https://www.acm.org/publications/advertising" id="menu-link-19">For Advertisers</a></li>
<li id="menu-item-224639" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224639"><a href="https://cacm.acm.org/join-acm/" id="menu-link-20">Join ACM</a></li>
</ul>					</div>
				</div>
			</div>
			<div class="site-footer__info">
				<div class="site-footer__info__inner">
					<p class="site-footer__info-copyright"><small>
						&copy; 2024 Communications of the ACM. All Rights Reserved. 						</small></p>
					<div class="menu-policy-menu-container"><ul id="menu-policy-footer" class="site-footer__info-policy-list"><li id="menu-item-217993" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217993"><a href="https://www.acm.org/cookie-notice" id="menu-link-21">Cookie Notice</a></li>
<li id="menu-item-217994" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217994"><a href="https://www.acm.org/about-acm/privacy-policy" id="menu-link-22">Privacy Policy</a></li>
</ul></div>				</div>
			</div>
		</div>
	</footer><!-- #colophon -->
</div><!-- #page -->

<script type="text/javascript" src="https://cacm.acm.org/wp-content/themes/cacm/client/build/js/global.bundle.min.js?ver=e97a984b44ccc756957f" id="cacm-global-js"></script>
<script type="text/javascript" src="https://cacm.acm.org/wp-includes/js/dist/vendor/wp-polyfill-inert.min.js?ver=3.1.2" id="wp-polyfill-inert-js"></script>
<script type="text/javascript" src="https://cacm.acm.org/wp-includes/js/dist/vendor/regenerator-runtime.min.js?ver=0.14.0" id="regenerator-runtime-js"></script>
<script type="text/javascript" src="https://cacm.acm.org/wp-includes/js/dist/vendor/wp-polyfill.min.js?ver=3.15.0" id="wp-polyfill-js"></script>
<script type="text/javascript" src="https://cacm.acm.org/wp-includes/js/dist/hooks.min.js?ver=2810c76e705dd1a53b18" id="wp-hooks-js"></script>
<script type="text/javascript" src="https://cacm.acm.org/wp-includes/js/dist/i18n.min.js?ver=5e580eb46a90c2b997e6" id="wp-i18n-js"></script>
<script type="text/javascript" id="wp-i18n-js-after">
/* <![CDATA[ */
wp.i18n.setLocaleData( { 'text direction\u0004ltr': [ 'ltr' ] } );
/* ]]> */
</script>
<script type="text/javascript" id="cacm-article-js-extra">
/* <![CDATA[ */
var cacmLocalVars = {"restCommentsUrl":"https:\/\/cacm.acm.org\/wp-json\/wp\/v2\/comments","restCommentFormUrl":"https:\/\/cacm.acm.org\/wp-json\/cacm-plugin\/v1\/comment\/form\/754572"};
/* ]]> */
</script>
<script type="text/javascript" src="https://cacm.acm.org/wp-content/themes/cacm/client/build/js/article.bundle.min.js?ver=d863802f3d5afd2c7cfb" id="cacm-article-js"></script>
<script type="text/javascript" src="https://cacm.acm.org/wp-includes/js/comment-reply.min.js?ver=6.5.3" id="comment-reply-js" async="async" data-wp-strategy="async"></script>
<script type="text/javascript" src="https://stats.wp.com/e-202420.js" id="jetpack-stats-js" data-wp-strategy="defer"></script>
<script type="text/javascript" id="jetpack-stats-js-after">
/* <![CDATA[ */
_stq = window._stq || [];
_stq.push([ "view", JSON.parse("{\"v\":\"ext\",\"blog\":\"212686646\",\"post\":\"754572\",\"tz\":\"-4\",\"srv\":\"cacm.acm.org\",\"hp\":\"vip\",\"j\":\"1:13.3.1\"}") ]);
_stq.push([ "clickTrackerInit", "212686646", "754572" ]);
/* ]]> */
</script>


<!-- Mopinion Pastea.se  start --><script type="text/javascript">(function(){var id="Sh2m7XRvbVWoA8uJG6g2wIBNDLfpsOxFx1ciwKwo";var js=document.createElement("script");js.setAttribute("type","text/javascript");js.setAttribute("src","//deploy.mopinion.com/js/pastease.js");js.async=true;document.getElementsByTagName("head")[0].appendChild(js);var t=setInterval(function(){try{Pastease.load(id);clearInterval(t)}catch(e){}},50)})();</script> <!-- Mopinion Pastea.se end -->

</body>
</html>
