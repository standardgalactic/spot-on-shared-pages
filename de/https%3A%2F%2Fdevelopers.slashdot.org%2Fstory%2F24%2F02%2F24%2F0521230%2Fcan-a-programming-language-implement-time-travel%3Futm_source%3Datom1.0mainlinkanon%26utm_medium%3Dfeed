<!-- html-header type=current begin -->
	
	<!DOCTYPE html>
	
	<html lang="en">
	<head>
	<!-- Render IE9 -->
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

	

	<script id="before-content" type="text/javascript">
(function () {
    if (typeof window.sdmedia !== 'object') {
         window.sdmedia = {};
    }
    if (typeof window.sdmedia.site !== 'object') {
        window.sdmedia.site = {};
    }

    var site = window.sdmedia.site;
    site.rootdir = "//slashdot.org";
}());

var pageload = {
	pagemark: '568222094304397023',
	before_content: (new Date).getTime()
};
function pageload_done( $, console, maybe ){
	pageload.after_readycode	= (new Date).getTime();
	pageload.content_ready_time	= pageload.content_ready - pageload.before_content;
	pageload.script_ready_time	= pageload.after_readycode - pageload.content_ready;
	pageload.ready_time		= pageload.after_readycode - pageload.before_content;
	// Only report 1% of cases.
	maybe || (Math.random()>0.01) || $.ajax({ type: 'POST', data: {
		op: 'page_profile',
		pagemark: pageload.pagemark,
		dom: pageload.content_ready_time,
		js: pageload.script_ready_time
	} });
}
</script>
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
	
		<title>'Can a Programming Language Implement Time Travel?' - Slashdot</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	  
		<meta name="description" content="Stack Overflow's blog reports on a new programming language called Mariposa. 

They call it a &#34;toy&#34; programming language, &#34;created as a way to play around with a novel or odd feature, like variable assignment outside of the normal order of execution &amp;mdash; more colloquially, time travel.&#34;


Compute...">
	    
		<meta name="twitter:card" content="summary">
		<meta name="twitter:site" content="@slashdot">
		<meta name="twitter:domain" content="developers.slashdot.org">
		<meta property="og:url" content="https://developers.slashdot.org/story/24/02/24/0521230/can-a-programming-language-implement-time-travel?utm_source=rss1.0mainlinkanon&utm_medium=feed">
	    
		<meta property="og:title" content="'Can a Programming Language Implement Time Travel?' - Slashdot">
		<meta property="og:description" content="Stack Overflow's blog reports on a new programming language called Mariposa. 

They call it a &#34;toy&#34; programming language, &#34;created as a way to play around with a novel or odd feature, like variable assignment outside of the normal order of execution &amp;mdash; more colloquially, time travel.&#34;


Compute...">
	  
	
	
		<meta property="og:image" content="https://a.fsdn.com/sd/topics/programming_64.png">
	
		<meta property="fb:admins" content="100000696822412">
		<meta property="fb:page_id" content="267995220856">
	
		<meta name="viewport" content="width=1000, user-scalable=yes, minimum-scale=0, maximum-scale=10.0" />
		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black">
	
		<link rel="canonical" href="https://developers.slashdot.org/story/24/02/24/0521230/can-a-programming-language-implement-time-travel">
		
		<link rel="alternate" media="only screen and (max-width: 640px)" href="https://m.slashdot.org/story/425296" >
	

		<!--[if IE 8]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie8-classic.ssl.css?a23c9cce1cf8807f" ><![endif]-->
		<link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/classic.ssl.css?a23c9cce1cf8807f" >
		<!--[if IE 7]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie7-classic.ssl.css?a23c9cce1cf8807f" ><![endif]-->
	
	
	



	
	<!--  -->

	
	

	
	<!-- SMACKS: NEW CSS -->
	<link rel="stylesheet" href="//a.fsdn.com/sd/css/app.css?a23c9cce1cf8807f">

	<script src="//a.fsdn.com/con/js/sftheme/cmp2.js?2024-01"></script>
	<script src="https://slashdot.org/country.js"></script>
	<script>
		window.bizx.cmp.init({
			cmp_id: 12126,
			geo: window,
			gam_gdpr_technical_delivery: true,
			
		});
	</script>
	<link rel="stylesheet" href="//a.fsdn.com/con/css/sftheme/sandiego/cmp.css?2020-06-11" type="text/css">

	<script type='text/javascript'>
var _gaq = _gaq || [];
</script>

<script>
window.SD = {};
window.SD.Ads = {};

bizx.cmp.ifConsent('', ['all'], function () {
    var bt = 'https://btloader.com/tag?o=5098683085881344&upapi=true';
    bizx.cmp.embedScript(bt, true);
    window.addEventListener('AcceptableAdsInit', function (e) {
      if(e.detail) {
        console.log('acceptable ads on');
        SD.Ads.acceptable_ads_active = true;
      } else {
        console.log('acceptable ads off');
        SD.Ads.acceptable_ads_active = false;
      }
    });
});
</script>



         
   
   

<script type="text/javascript" id="pbjs_script" data-dom="https://d3tglifpd8whs6.cloudfront.net"  src="https://d3tglifpd8whs6.cloudfront.net/js/prebid/slash-story/slash-story.min.js"></script>
<script type='text/javascript'>
    /*global performance */
    var googletag = window.googletag || {};
    googletag.cmd = googletag.cmd || [];

		window.SD.Ads.slotsById = {};
		window.SD.Ads.idsByPath = {};

		window.SD.Ads.visibleTime = {};
		window.SD.Ads.Helpers = {};

		//window.SD = SD;

    bizx.cmp.ifConsent('', ['all','prebid'], function(){
        window.bizxPrebid.Ads.initPrebid(window.bizxPrebid.adUnits);
    }, function() {
		// no 'prebid' consent (e.g. region without prebid consent string support) but try GPT directly
		bizx.cmp.ifConsent('', ['all', 'google-ads'], function () {
			bizx.cmp.embedScript('https://securepubads.g.doubleclick.net/tag/js/gpt.js');
		});
	});
</script>

<!-- prep GPT ads -->
<script type='text/javascript'>
(function() {
	function page_type (loc) {
		/*
		only four page types:
		- Story
		- Poll
		- Homepage (/ only)
		- Other (but AdOps wants 'Homepage' again)
		*/
		var path = loc.pathname;
		var just_the_root = /^\/?$/.test(path);
		var story_or_poll = /^\/(story(?=\/)|submission(?=\/)|poll(?=\/|Booth|s\b))/i.exec(path);

		var page_type = just_the_root ? 'homepage'
			: story_or_poll ? story_or_poll[1]
				: 'other'

		// exceptions
		if (page_type.toLowerCase() === 'submission')
			page_type = 'story'; // submissions are like stories, right?
		else if (page_type.toLowerCase() === 'other')
			page_type = 'homepage'; // this one might move out of here

		return page_type;
	}

	function page_section(loc) {
		//var greek = ['alpha', 'beta', 'gamma', 'delta'].join('|');
		//var hostwise = '^([a-z]+)(?:-(?:'+greek+'))?\\.(?:slashdot\\.org|\\.xb\\.sf\\.net)$';
		var pathwise = '^/(?:(recent|popular|blog)|stories/([^/]+))';
		var rootwise = '^\/?$';

		//var hostwisely = new RegExp(hostwise,'i').exec(loc.hostname);
		var pathwisely = new RegExp(pathwise, 'i').exec(loc.pathname);
		var rootwisely = new RegExp(rootwise, 'i').exec(loc.pathname);

		var section = (rootwisely && 'homepage')
			|| (pathwisely && (pathwisely[1] || pathwisely[2]))
			|| ''
		;

		return section.replace(/[^_a-z]/ig, '');
	}

	function single_size(size) {
		return '' + size[0] + 'x' + size[1];
	}

	function sz_sz(sz) {
		var str = '';
		var sizes = [];
		if (sz[0] instanceof Array) {
			for (size in sz) {
				sizes.push(single_size(sz[size]));
			}
			return sizes.join(',');
		} else {
			return single_size(sz);
		}
	}

	function unique_tpc_array(array1, array2) {
		var j = array1.concat(array2);
		j.forEach(function (v, i, a) {
			a[i] = v.replace(/[^_a-z]/ig, '');
		});
		return j.filter(function (v, i, a) {
			return v != '' && a.indexOf(v) === i;
		});
	}

	/* LEGEND:
		- 'sz' = "size"
		- 'npt' = "no page type" in ad unit name
	*/
	var tags = {
		'728x90_A': {'sz': [[728, 90], [970, 90], [970, 250], [980, 66]]},
		'728x90_B': {'sz': [728, 90]},
		'728x90_C': {'sz': [728, 90], 'skip': {'homepage': 1}},
		'HubIcon_200x90_A': {'sz': [[200, 90], [220, 90]]},
		'PowerSwitch_980x66_A': {'sz': [980, 66], 'skip': {'homepage': 1}},
		'PollPeel': {'sz': [200, 90], 'skip': {'homepage': 1}},
		//'VideoWidget_300x250': { 'sz': [300, 250], 'npt': 1 },
		'300x250_A': {'sz': [[300, 250], [300, 600], [300, 1050]]},
		'300x250_B': {'sz': [[300, 250], [300, 600]]},
		'300x250_C': {'sz': [[300, 250], [300, 600]]},
		'300x250_D': {'sz': [[300, 250], [300, 600]]},
		'Pulse_300x600_A': {'sz': [300, 600]},
		//'Polls_Detail_300x250_A': { 'sz': [[300, 250], [300, 600]], 'npt': 1 },
		//'Poll_300x250_A': { 'sz': [[300, 250], [300, 600]], 'npt': 1 },
		//'SD_Story_1x1': { 'sz': [1, 1] },
		'1x1': {'sz': [1, 1]}
	};

	//var network_path = '/41014381/Slashdot/';
	var network_path = '/41014381/Slashdot/';
	var tag_name_prefix = 'SD';
	var tag_name_linkage = '_';
	var tag_name_pagetype = page_type(location);
	var tag_topic = page_section(location);
	if (tag_name_pagetype == 'poll') {
		tag_name_pagetype = 'Poll';
	}
	var before_tag_pagetyped = network_path
		+ tag_name_prefix
		+ tag_name_linkage
		+ tag_name_pagetype
		+ tag_name_linkage
	;
	var before_tag_pagetypeless = network_path
		+ tag_name_prefix
		+ tag_name_linkage
		/* + tag_name_pagetype */
		/* + tag_name_linkage */
	;

		//can be safely called
		googletag.cmd.push(function () {

			function remove_sticky_top() {
				setTimeout(function () {
					$('#div-gpt-ad-728x90_a').parent('div').addClass('adwrap-viewed-banner');
					$('#div-gpt-ad-728x90_a').addClass('viewableImpression');
				}, 1000);
			}

			function remove_sticky_railad() {
				setTimeout(function () {
					$('#slashboxes .adwrap-unviewed').addClass('adwrap-viewed-railad');
					$('.railad').addClass('viewableImpression');
				}, 1000);
			}

			function viewable_imp(slot) {
				for (var i in slot) {
					remove_sticky_top();
					remove_sticky_railad();
					if (typeof slot[i] !== 'string') continue;
					switch (slot[i]) {
						//case "/41014381/Slashdot/SD_homepage_728x90_A":
						//case "/41014381/Slashdot/SD_story_728x90_A":
						//case "/41014381/Slashdot/SD_Poll_728x90_A":
						//case "/41014381/Slashdot/SD_homepage_728x90_Ref_A":
						//case "/41014381/Slashdot/SD_story_728x90_Ref_A":
						//case "/41014381/Slashdot/SD_Poll_728x90_Ref_A":
						//remove_sticky_top();
						//break;
						//case "/41014381/Slashdot/SD_homepage_300x250_A":
						//case "/41014381/Slashdot/SD_story_300x250_A":
						//case "/41014381/Slashdot/SD_Poll_300x250_A":
						//case "/41014381/Slashdot/SD_homepage_300x250_Ref_A":
						//case "/41014381/Slashdot/SD_story_300x250_Ref_A":
						//case "/41014381/Slashdot/SD_Poll_300x250_Ref_A":
						//remove_sticky_railad();
						//break;
					}
					//if(slot[i] === "/41014381/Slashdot/SD_homepage_728x90_A") remove_sticky_top();
					//if(slot[i] === "/41014381/Slashdot/SD_homepage_300x250_A") remove_sticky_railad();
				}
			}

			function define_me_a_slot(tag) {
				if (tags[tag].skip && tags[tag].skip[tag_name_pagetype])
					return;
				var sandbox_regex = /\.xb\.sf\.net$/i;
				var full_name = tags[tag].npt  // "no page type"
					? before_tag_pagetypeless + tag
					: before_tag_pagetyped + tag
				;
				var div_id = 'div-gpt-ad-' + tag.toLowerCase();
				// extend jQuery and get URL query params
				jQuery.extend({
					getQueryParameters: function (str) {
						return (str || document.location.search).replace(/(^\?)/, '').split("&").map(function (n) {
							return n = n.split("="), this[n[0]] = n[1], this
						}.bind({}))[0];
					}
				});

				var queryParams = $.getQueryParameters();

				if (queryParams.source === 'autorefresh') {
					full_name = full_name.replace(/(\d+x\d+)/, '$1_Ref');
					//console.log('TAG NAME: ', full_name);
				}

				var slot = googletag.defineSlot(
					full_name,
					tags[tag].sz,
					div_id
				);

				service = slot.addService(googletag.pubads());

				window.SD.Ads.slotsById[div_id] = slot;
				window.SD.Ads.idsByPath[full_name] = div_id;

				service.setTargeting('sz', tags[tag].sz);

				
				var frontend_tpc = tag_topic.split(",");
				var backend_tpc = [ "programming", "developers" ];

				var tpc_final = unique_tpc_array(frontend_tpc, backend_tpc);
				service.setTargeting('tpc', tpc_final);
				if (location.hostname.match(sandbox_regex)) {
					service.setTargeting('test', 'adops');
				}

			}

		for (tag in tags) {
			define_me_a_slot(tag, false);
		}


			googletag.pubads().addEventListener('slotVisibilityChanged', window.SD.Ads.visibilityChangedTracker);


		googletag.pubads().addEventListener('impressionViewable', function(event) {
			viewable_imp(event.slot);
		    });

                googletag.pubads().setTargeting('requestSource', 'GPT');
		googletag.pubads().enableAsyncRendering();
		

		googletag.pubads().collapseEmptyDivs();
		window.bizxPrebid.SAFEFRAMES = true;
		window.SD.Ads.setupAdRefresh();
		bizxPrebid.Ads.pushToGoogle();
		googletag.enableServices();
	});
})();


/* Ad-Refresh code */
window.SD.Ads.visibilityChangedTracker = function(event) {
	var id = event.slot.getSlotElementId();
	if (!window.SD.Ads.visibleTime.hasOwnProperty(id)) {
		window.SD.Ads.visibleTime[id] = {
			visible: false,
			prevVisibleTotal: 0,
			wasVisibleBeforePageBgd: false,
			reloadCount: 0
		};
	}
	var timeinfo = window.SD.Ads.visibleTime[id];
	if (event.inViewPercentage >= 50 && !document.hidden) {
		if (!timeinfo.visible) {
			timeinfo.visible = performance.now();
		}
	} else {
		if (timeinfo.visible) {
			timeinfo.prevVisibleTotal += performance.now() - timeinfo.visible;
			timeinfo.visible = false;
		}
	}
};

window.SD.Ads.setupAdRefresh = function() {
	document.addEventListener('visibilitychange', function () {
		for (var id in window.SD.Ads.visibleTime) {
			if (window.SD.Ads.visibleTime.hasOwnProperty(id)) {
				var timeinfo = window.SD.Ads.visibleTime[id];
				if (document.hidden) {
					timeinfo.wasVisibleBeforePageBgd = !!timeinfo.visible;
					if (timeinfo.visible) {
						timeinfo.prevVisibleTotal += performance.now() - timeinfo.visible;
						timeinfo.visible = false;
					}
				} else if (!document.hidden && timeinfo.wasVisibleBeforePageBgd) {
					timeinfo.visible = performance.now();
				}
			}
		}
	}, false);

	// after 30 sec, start checking every second for reload
	var LIMIT_MS = 30000;
	setTimeout(function () {
		//
		setInterval(function () {
			if (document.hidden) {
				return;
			}
			for (var id in window.SD.Ads.visibleTime) {
				if (window.SD.Ads.visibleTime.hasOwnProperty(id)) {
					var timeinfo = window.SD.Ads.visibleTime[id];
					if (timeinfo.visible &&
						timeinfo.prevVisibleTotal + (performance.now() - timeinfo.visible) >= LIMIT_MS &&
						timeinfo.reloadCount < 50
					) {
						timeinfo.reloadCount++;
						timeinfo.visible = false;
						timeinfo.prevVisibleTotal = 0;
						window.SD.Ads.Helpers.refreshBids([id]);
					}
				}
			}
		}, 1000);
	}, LIMIT_MS);
};

window.SD.Ads.Helpers.refreshBids = function (reloadIds) {
		console.log('AD REFRESH: refreshBids', reloadIds);
		pbjs.que.push(function () {
			for (var i = reloadIds.length-1; i >= 0; i--) {
				var id = reloadIds[i];
				// clear out winner status from earlier auctions
				if (bizxPrebid.Ads.prebidWinners[id]) {
					delete bizxPrebid.Ads.prebidWinners[id];
				}
				// if has complement (hubicon), remove it since they are just house ads and can cause funky layouts if this leaderboard is refreshed to a different size
				var path = window.SD.Ads.slotsById[id].getAdUnitPath();
				/*var complement = gptadComplements[path];
				if (complement) {
					var complement_shortname = complement[0];
					var complement_path = "/41014381/SD/" + complement_shortname;
					var slot = window.SD.Ads.slotsById[window.SD.Ads.idsByPath[complement_path]];
					if (slot) {
						googletag.destroySlots([slot]);
						var $wrappedAd = $(window.SD.Ads.Helpers.getContainerIDFromPath(complement_path));
						$wrappedAd.remove();
						delete gptadComplements[path];
					}
				}*/

			}

			pbjs.requestBids({
				timeout: window.bizxPrebid.PREBID_TIMEOUT,
				adUnitCodes: reloadIds,
				bidsBackHandler: function () {
					var reloadSlots = reloadIds.map(function(id) { return window.SD.Ads.slotsById[id]; });

					// clear out previous sizing attrs, as they may change after refresh
/*
					for (var i = 0; i < reloadSlots.length; i++) {
						var $wrappedAd = $(window.SD.Ads.Helpers.getContainerIDFromPath(reloadSlots[i].getAdUnitPath()));
						var classes = $wrappedAd.attr('class').split(' ');
						for (var j = 0; j < classes.length; j++) {
							if (classes[j].indexOf('sz_') >= 0) {
								$wrappedAd.removeClass(classes[j]);
							}
						}
					}
*/
					pbjs.setTargetingForGPTAsync(reloadIds);
					googletag.pubads().refresh(reloadSlots);
				}
			});
		});
	}
</script>

<!-- CrossPixel -->
<script type="text/javascript">
if (window.is_euro_union === 0) {
    bizx.cmp.ifConsent('', ['all'], function(){
        try{(function(){ var cb = new Date().getTime(); var s = document.createElement("script"); s.defer = true; s.src = "//tag.crsspxl.com/s1.js?d=2397&cb="+cb; var s0 = document.getElementsByTagName('script')[0]; s0.parentNode.insertBefore(s, s0); })();}catch(e){}
    });
}
</script>




<!-- AdBlock Check -->
<script>
var sdAdBlockActive = true;
</script>
<script async src="//a.fsdn.com/sd/js/scripts/adsbanner.js?a23c9cce1cf8807f"></script>
</head>

<body class="anon firehose ">

	
	<script src="//a.fsdn.com/sd/all-minified.js?a23c9cce1cf8807f" type="text/javascript"></script>
	
	
	<script type="text/javascript">
(function(){
var regexp=/\s*(?:\d+|many)\s+more\s*/i;

	
	var auto_more_count = 1;

	function auto_more(){
		var $more_link = $('#more-experiment a');
		$more_link.each(function(){
			var $lastitem = $('#firehoselist>article.fhitem:visible:last');
			if ( Bounds.intersect(window, $lastitem) ) {
			
			
				!--auto_more_count && (auto_more=undefined);
				// don't allow a call till the next paginate gets built and |more_possible|
				$(document).unbind('scroll', call_auto_more);
			}
		});
	};

	function call_auto_more(){ auto_more && auto_more(); }
	

$('#more-experiment a').
	live('more-possible', function( event ){
		var $more_link=$(this);
		if ( regexp.test($more_link.text()) ) {
		
			$(document).bind('scroll', call_auto_more);
		} else {
			$(document).unbind('scroll', call_auto_more);
		
		}
	});
})();
</script>
	<!--[if lt IE 9]><script src="//a.fsdn.com/sd/html5.js"></script><![endif]-->
	
	
	<!-- index2_variant ||-->
		<script>
	if (window.is_euro_union === 0) {
            bizx.cmp.ifConsent('', ['all'], function () {
                (function (s,o,n,a,r,i,z,e) {s['StackSonarObject']=r;s[r]=s[r]||function(){
                (s[r].q=s[r].q||[]).push(arguments)},s[r].l=1*new Date();i=o.createElement(n),
                z=o.getElementsByTagName(n)[0];i.async=1;i.src=a;z.parentNode.insertBefore(i,z)
                })(window,document,'script','https://www.stack-sonar.com/ping.js','stackSonar');
                stackSonar('stack-connect', '66');
            });
        }
	</script>
        <!-- jobbio !-->

        <script type="text/javascript">
        bizx.cmp.ifConsent('', ['all'], function () {
        var j_script = document.createElement('script')
        j_script.setAttribute('src', 'https://widgets.jobbio.com/partner_fluid_widgets_v1.6.1/display.min.js')
        j_script.setAttribute('id','jobbio-display-script')
        j_script.setAttribute('async','')
        j_script.onload = function handle(){
        if (document.getElementById('bottom-masonry')){
            jobbio_display.widget({
                slug: 'slashdot-jobs',
                container: 'bottom-masonry',
                style: 'masonry',
                count: 6,
                type: 'multiple',
                content: 'jobs',
                searchTerm: '',
            });
        }

        jobbio_display.widget({
            slug: 'slashdot-jobs',
            container: 'horizontal',
            style: 'horizontal',
            count: 4,
            type: 'multiple',
            content: 'jobs',
            searchTerm: '',
        })
        if (document.getElementById('sidebar-j')){
            jobbio_display.widget({
                slug: 'slashdot-jobs',
                container: 'sidebar-j',
                style: 'sidebar',
                count: 6,
                type: 'multiple',
                content: 'jobs',
                searchTerm: '',
            });
        }

        }
        document.head.appendChild(j_script);
        })
        </script>
        <!-- mailchimp newsletter !-->
        <script id="mcjs">
        if (document.domain.match(/^(tech\.)?slashdot\.org$|\.xb\./)) {
            bizx.cmp.ifConsent('', ['all'], function () {
                !function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,"script","https://chimpstatic.com/mcjs-connected/js/users/aab6529d3675bd877963a652d/fc2aefbb539f9ecd8f1ab4cee.js");    
            });
        }
        </script>
		<!-- html-header type=current end --><!-- header type=current begin -->
	
	
	
	<link rel="top"       title="News for nerds, stuff that matters" href="//slashdot.org/" >
<link rel="search"    title="Search Slashdot" href="//developers.slashdot.org/search.pl">
<link rel="alternate" title="Slashdot RSS" href="https://rss.slashdot.org/Slashdot/slashdotDevelopers" type="application/rss+xml">
	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">

	
		<div id="top_parent"></div>
		<a name="topothepage"></a>
		
		<div class="container">
			<div class="nav-wrap">
				<nav class="nav-primary" role="navigation" aria-label="Global Navigation">
					<h1 class="logo">
	<a href="//slashdot.org"><span>Slashdot</span></a>
</h1>

<ul class="nav-site">
	<li><a href="//slashdot.org"><i class="icon-book" title="Stories"></i><span>Stories</span></a></li>
	<li>
		<ul class="filter-firehose">
			<li class="nav-label">Firehose <i class="icon-angle-right"></i></li>
			<li><a href="//slashdot.org/recent">All</a></li>
			<li><a href="//slashdot.org/popular">Popular</a></li>
		</ul>
	</li>
	<li><a href="//slashdot.org/polls"><i class="icon-chart-bar" title="Polls"></i><span>Polls</span></a></li>

	<!--
	<li><a href="//ask.slashdot.org"><i class="icon-question-circle"></i><span>Ask</span></a></li>
	
	<li><a href="//events.slashdot.org"><i class="icon-calendar"></i><span>Events</span></a></li>
	-->
	<li><a href="https://slashdot.org/software/"><i class="sd-mini"></i> <span>Software</span></a></li>
        <li><a href="//slashdot.org/newsletter"><span>Newsletter</span></a></li>
        <li><a href="//slashdot.org/jobs" rel="nofollow"><span>Jobs</span></a></li>
</ul>
<a href="//slashdot.org/submission" class="btn btn-success">Submit</a>
				</nav>
				<nav class="nav-user" role="navigation" aria-label="user access and account controls">
					<form id="search" class="form-inline nav-search-form" method="get" action="//slashdot.org/index2.pl">
<!-- //developers.slashdot.org/index2.pl" -->
	<div class="form-group">
		<label class="sr-only" for="sitesearch">Search Slashdot</label>
		<div class="input-group">
			<input type="text" id="" class="" name="fhfilter" value="" placeholder="Search">
		</div>
	</div>
	<button type="submit" class="btn icon-search"></button>
</form>
<ul class="user-access">
	
		
			<li >
				<a href="//slashdot.org/my/login"  onclick="show_login_box(); return false;"><i class="icon-login"></i><span> Login</span></a>
				
			</li>
		
	
		
			<li class="nav-label">or</li>
		
	
		
			<li >
				<a href="//slashdot.org/my/newuser"  ><i class="icon-user-add"></i><span> Sign up</span></a>
				
			</li>
		
	
</ul>
				</nav>
			</div>
			<div class="nav-secondary-wrap">
				<nav class="nav-secondary" role="secondary-navigation">
	<ul>
		<li class="nav-label">Topics: </li>
		<li><a href="//devices.slashdot.org">Devices</a></li>
		<li><a href="//build.slashdot.org">Build</a></li>
		<li><a href="//entertainment.slashdot.org">Entertainment</a></li>
		<li><a href="//technology.slashdot.org">Technology</a></li>
		<li><a href="//slashdot.org/?fhfilter=opensource">Open Source</a></li>
		<li><a href="//science.slashdot.org">Science</a></li>
		<li><a href="//yro.slashdot.org">YRO</a></li>
		<!-- <li><a href="//slashdot.org/topics.pl">more...</a></li> -->
	</ul>
</nav>
<nav class="nav-social" role="social navigation">
	<ul>
		<li class="nav-label">Follow us:</li>
		<li><a href="https://rss.slashdot.org/Slashdot/slashdotMain" target="_blank" rel="nofollow"><i class="icon-rss-squared"></i><span class="sr-only">RSS</span></a></li>
		<li><a href="https://www.facebook.com/slashdot" target="_blank" rel="nofollow"><i class="icon-facebook-squared"></i><span class="sr-only">Facebook</span></a></li>
		<li><a href="https://www.linkedin.com/company/slashdot" target="_blank" rel="nofollow"><i class="icon-linkedin-squared"></i><span class="sr-only">LinkedIn</span></a></li>
		<li><a href="https://twitter.com/slashdot" target="_blank" rel="nofollow"><i class="icon-twitter-squared"></i><span class="sr-only">Twitter</span></a></li>
		<li><a href="https://www.youtube.com/channel/UCsW36751Gy-EAbHQwe9WBNw" target="_blank" rel="nofollow"><i class="icon-youtube-squared">
                    <!-- width="1792" height="1792" -->
                    <svg viewBox="0 260 1792 1260" xmlns="http://www.w3.org/2000/svg"><path d="M711 1128l484-250-484-253v503zm185-862q168 0 324.5 4.5t229.5 9.5l73 4q1 0 17 1.5t23 3 23.5 4.5 28.5 8 28 13 31 19.5 29 26.5q6 6 15.5 18.5t29 58.5 26.5 101q8 64 12.5 136.5t5.5 113.5v176q1 145-18 290-7 55-25 99.5t-32 61.5l-14 17q-14 15-29 26.5t-31 19-28 12.5-28.5 8-24 4.5-23 3-16.5 1.5q-251 19-627 19-207-2-359.5-6.5t-200.5-7.5l-49-4-36-4q-36-5-54.5-10t-51-21-56.5-41q-6-6-15.5-18.5t-29-58.5-26.5-101q-8-64-12.5-136.5t-5.5-113.5v-176q-1-145 18-290 7-55 25-99.5t32-61.5l14-17q14-15 29-26.5t31-19.5 28-13 28.5-8 23.5-4.5 23-3 17-1.5q251-18 627-18z"/></svg>
                </i><span class="sr-only">Youtube</span></a></li>
		<li><a href="https://mastodon.cloud/@slashdot" target="_blank" rel="me nofollow"><i class="icon-mastodon-squared">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M433 179.11c0-97.2-63.71-125.7-63.71-125.7-62.52-28.7-228.56-28.4-290.48 0 0 0-63.72 28.5-63.72 125.7 0 115.7-6.6 259.4 105.63 289.1 40.51 10.7 75.32 13 103.33 11.4 50.81-2.8 79.32-18.1 79.32-18.1l-1.7-36.9s-36.31 11.4-77.12 10.1c-40.41-1.4-83-4.4-89.63-54a102.54 102.54 0 0 1-.9-13.9c85.63 20.9 158.65 9.1 178.75 6.7 56.12-6.7 105-41.3 111.23-72.9 9.8-49.8 9-121.5 9-121.5zm-75.12 125.2h-46.63v-114.2c0-49.7-64-51.6-64 6.9v62.5h-46.33V197c0-58.5-64-56.6-64-6.9v114.2H90.19c0-122.1-5.2-147.9 18.41-175 25.9-28.9 79.82-30.8 103.83 6.1l11.6 19.5 11.6-19.5c24.11-37.1 78.12-34.8 103.83-6.1 23.71 27.3 18.4 53 18.4 175z"/></svg>
				</i><span class="sr-only">Mastodon</span></a></li>
		<li><a href="//slashdot.org/newsletter" target="_blank" rel="nofollow"><i class="icon-mail-squared"></i><span class="sr-only">Newsletter</span></a></li>
	</ul>
</nav>
			</div>
		</div>

		<section>
		
			<div class="message-bar" id="firehose-message-tray">
				<span class="icon-quote-left"></span>
				<p>
					
						
						Slashdot is powered by <strong><a href="//developers.slashdot.org/submission">your submissions</a></strong>, so send in your scoop
					
				</p>
			</div>
		
		
			<div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
		
		
			<div class="banner-wrapper">
				<div class="adwrap adwrap-unviewed banner-contain">
					
					<div id='div-gpt-ad-728x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_a');});</script></div>
					<div id='div-gpt-ad-hubicon_200x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-hubicon_200x90_a');});</script></div>
				</div>
			</div>
		
		<a name="main-articles"></a>
	
	<!-- header type=current end --><!-- body begin -->







	

	<style type="text/css">
menu, menu * {
	text-decoration:none;
}

menu[type=context] {
	display:none;
	position:absolute;
	z-index:10000;
}

menu[type=context]:not(.brief) {
	background-color:#dfdfdf;
	margin:0;
	padding:2px 0.5em;
	border-style:solid;
	border-width:1px;
	border-color:#eeeeee #aaaaaa #aaaaaa #eeeeee;
	-moz-border-radius-topright:.7em;
	-webkit-border-top-right-radius: 0.7em 0.7em;
}

menu.full[type=context] > a.slash-hover:first-child {
	-moz-border-radius-topright:.6em;
	-webkit-border-top-right-radius: 0.6em 0.6em;
}



menu.brief[type=context] > a {
	-moz-border-radius:.6em;
	-webkit-border-radius: 0.6em;
	color:#ffffff;
	background-color:#000000;
}

/*
span.briefmenu a.tag:not(.datatype) {
    padding-left:.5em;
}
*/




/* #tag-menu a, #feedback-menu a  { */
menu.tag-menu-admin a {
	display:list-item;
	list-style:none;
	text-align:left;
	font-weight:bold;
	color:black;
	padding:0.1em 0.5em;
	margin:-0.1em -0.5em;
	cursor:pointer;
}


.tags .edit-bar { position:relative; }
article aside .share .addthis_toolbox { display:block; width:60px; float:left; }
article aside.view_mode .share { min-width:120px; padding-top:.5em; }
#firehose.list article header h2 {padding-left: 20px; !important}
.novote .vote { display:none; }

.vote > a, .votedup > a, .voteddown > a {
	display:inline-block;
	height:22px;
	width:22px;
	margin: 2px 10px 0 0;
	color:rgb(255,255,255);
	text-decoration:none;
	line-height:22px;
	text-align:center;
	font-weight:bold;
	font-size:14px;
	border-width:1px;
	border-style:solid;
	border-color:rgba(0,0,0,0.5);
}

.vote > a, .votedup > a, .voteddown > a {color:rgb(0,0,0);}

article.fhitem-submission h2 .vote > a, article.fhitem-submission h2 .votedup > a, article.fhitem-submission h2 .voteddown > a { border-color:rgba(0,0,0,0.15); }
.vote .up, .vote .down, .votedup .up, .votedup .down, .voteddown .up, .voteddown .down { border-radius: 4px; -moz-border-radius: 4px; -webkit-border-radius: 4px; /* text-shadow:0 0 2px #000000; }*/}
article:not(.fhitem-story) .vote .up,article:not(.fhitem-story) .vote .down,article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .votedup .down,article:not(.fhitem-story) .voteddown .up,article:not(.fhitem-story) .voteddown .down { /*text-shadow:none !important; */}
.voteddown .down, .votedup .up { margin-right: 10px; text-indent:2px; line-height:24px; }
article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .voteddown .down {background: rgb(174,174,174);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(174,174,174)), to(rgb(193,193,193)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(193,193,193), rgb(174,174,174) 100%);color:rgb(0,0,0);}
article.fhitem-story .votedup .up,article.fhitem-story .voteddown .down {background: rgb(0,66,66);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(0,53,53)), to(rgb(0,102,102)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(0,102,102), rgb(0,53,53) 100%);}




#tag-menu span.var-tag {
font-weight:normal;
color:#444444;
}

menu.reasons-menu a {
padding:0 .25em 0 .25em;
font-size:80%;
-moz-border-radius:.5em;
-webkit-border-radius:.5em;
cursor:pointer;
}

menu.reasons-menu a:hover {
background:rgb(153,153,153);
background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102);
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102)));
color:#fff;
text-decoration:none;
font-weignt:normal;
}

article.fhitem-story menu.reasons-menu a:hover {
background:#002323 !important;
background:-moz-linear-gradient(100% 100% 90deg, #002323, #005353 70%) repeat scroll 0 0 #002323 !important;
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#005353), to(#002323)) !important;
}


menu.reasons-menu {
	display:none;
	margin:0;
	padding:0;
}

div.fhitem h3 menu.reasons-menu {
margin:0.25em 0 0;
}

div.fhitem h3 menu.reasons-menu a.tag {
font-size:.8em;
}

#tag-menu a.slash-hover,
#feedback-menu a.slash-hover,

.tag-display span.tag:hover,
.tag-display span.tag.trigger {
	color:white;
	background-color:rgb(0, 85, 85);
}

#tag-menu a.slash-hover span.var-tag {
	color:#eee;
}

.tag-entry.default {
        color:#ccc;
}

.brief .nix {
	margin-top:-1.35em;
	margin-left:0px;
	margin-top:-1.15em;
	text-decoration:none;
	line-height:1.35em;
	padding:0 2px;
	-moz-border-radius:.6em 0 0 .6em;
	-webkit-border-radius:.6em 0 0 .6em;
	-o-border-radius:.6em 0 0 .6em;
	border-radius:.6em 0 0 .6em;
    color:#fff !important;
    background:transparent !important;
}

.brief .nix:hover {
    background:rgb(153,153,153) !important;
    background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102) !important;
    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102))) !important;
}

</style>

<menu id="nix-reasons" style="display:none">
	<a class="tag">binspam</a><a class="tag">dupe</a><a class="tag">notthebest</a><a class="tag">offtopic</a><a class="tag">slownewsday</a><a class="tag">stale</a><a class="tag">stupid</a>
</menu>
<menu id="nod-reasons" style="display:none">
	<a class="tag">fresh</a><a class="tag">funny</a><a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">maybe</a>
</menu>
<menu id="comment-nix-reasons" style="display:none">
	<a class="tag">offtopic</a><a class="tag">flamebait</a><a class="tag">troll</a><a class="tag">redundant</a><a class="tag">overrated</a>
</menu>
<menu id="comment-nod-reasons" style="display:none">
	<a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">informative</a><a class="tag">funny</a><a class="tag">underrated</a>
</menu>

<menu id="tag-nod-reasons" style="display:none">
	<a class="tag">descriptive</a>
</menu>
<menu id="feedback-menu" class="tag-menu-admin" type="context">
	<a class="tag">typo</a><a class="tag">dupe</a><a class="tag">error</a>
</menu>
<menu id="tag-menu" class="tag-menu-admin none" type="context">

<!--	<a data-op="!" class="nix">!<span class="var-tag hide"></span></a>-->

</menu>

<script type="text/javascript">
$(function(){
var $CURRENT_MENU, $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/, IE7=/^7\.0/, TAG_PREFIX=/^\/tag\//;

function get_tag_name( $tag ){
	return ($tag.attr('href') || '').replace(TAG_PREFIX, '') || $tag.text().toLowerCase();
}

function trigger_menu( e, selector, $menu, menu_content ){
	var $target=$(original_target(e, selector)), in_use=$target.is('.trigger');
	if ( $CURRENT_MENU ) {
		$CURRENT_MENU.menu('cancel', e);
		$CURRENT_MENU = null;
	}

	if ( !in_use ) {
		menu_content && $menu.stop(true, true).hide().html(menu_content);
		($CURRENT_MENU=$menu).menu('context', e);
	}
	return !in_use;
}

function open_menu( trigger, $menu ){
	var $trigger=$(trigger), $fhitem=$trigger.closest('.fhitem');
	$fhitem.length && user_intent('interest', $fhitem[0]);

	$menu.appendTo(document.body).css({ opacity:0 }).show();

	var 	right	= $fhitem.offset().left + $fhitem.width(),
		global	= $trigger.offset(),
		local	= $menu.offsetParent().offset();

	// Ugly IE position hack required:
	$.browser.msie && IE7.test($.browser.version) && (local.top = 0);

	// pin the menu (horizontally) on-screen
	global.left = Math.min(global.left, right-$menu.width());

	$trigger.addClass('trigger');
	$menu.css({
		position:	'absolute',
		top:		global.top - local.top + $trigger.height(),
		left:		global.left - local.left,
		opacity:	1
	});
}

function close_menu( trigger, $menu ){
	$menu.hide();
	$(trigger).removeClass('trigger');
	($CURRENT_MENU===$menu) && ($CURRENT_MENU=false);
}

/* T2 tag context-menu */
var $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/;


    var user_is_admin = 0;



$('a[rel=tag]').live('mousedown',function(ea){
    window.open(this.href);
    return false;
})

$('.tag-bar .disagree').live('mousedown',function(ee){
	var fhitem = $(original_target(ee)).closest('.fhitem')[0],
		command = ('!' + $(original_target(ee)).attr("data-tag")).replace(NOTNOT, '');
    try { Tags.submit(fhitem, command); } catch ( err ) {  }
    return false;
})



$('a[rel=tag]').
	live('mousedown', function( e ){
        
            return true;
        

	}).
	live('click', function( e ){
		if ( !logged_in ) {
			var	target	= original_target(e),
				tag	= $(target).text();
			addfhfilter(tag);
		}
		e.preventDefault();
		return false;
	});

$TAG_MENU.menu({
	cssNamespace: 'slash',
	liveTriggers: true,
	clickDuration: 300,

	start: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			context	= firehose_settings && firehose_settings.viewtitle;

		// Insert the tagname into the menu items where needed.
		$TAG_MENU.find('span.var-tag').text(tag);
		$TAG_MENU.find('a.nix').attr('title','not ' + tag);


			// non-admins may only delete their own tags
		$TAG_MENU.find('a[data-op="-"]').toggle($tag.is('.my'));
	

		// *tagname* in *viewtitle*
		$TAG_MENU.find('a[data-op="="]').toggle(!!context);
		context && $TAG_MENU.find('span.var-view').text(context);

		open_menu($tag, $TAG_MENU);
	},

	select: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			op	= $(ui.event.target).attr('data-op'),
			fhitem,
			command;

		// Global for positioning other things.
		$related_trigger = $tag;

		switch ( op ) {
			case '=':
				addfhfilter(tag);
				break;

			default:
				fhitem = $tag.closest('.fhitem')[0];
				command = (op + tag).replace(NOTNOT, '');
				try { Tags.submit(fhitem, command); } catch ( err ) {  }
				break;
		}
	},

	stop: function( e, ui ){ close_menu(ui.trigger, $TAG_MENU); }
});




/* T2 feedback context-menu */



/* T2 datatype context-menu (admin-only) */






});
</script>

	

<!-- SMACKS: BEGIN STORY CONTENT -->
<div class="container">
	<!--SMACKS: BEGING CENTER COLUMN -->
	<div class="main-wrap has-rail-right">
		<div class="main-content">
			<div class="grid_24 a2 ">
			</div>
			<div id="firehose" class="nothumbs">
			<div id="firehoselist" class="fhroot fleft  grid_24">
				<div id="announcement">
  <div id="announcementText" style="display: none;"> <a href="https://slashdot.org/newsletter" rel="nofollow"><strong>Sign up for the Slashdot newsletter!</strong></a> OR <a href="https://jobs.slashdot.org/?source=boiler_plate&utm_source=boiler_plate&utm_medium=content&utm_campaign=bp_referral" rel="nofollow">check out the new Slashdot job board to browse remote jobs or jobs in your area</a><br><br></strong>Do you develop on GitHub? You can keep using GitHub but automatically <a href="https://sourceforge.net/p/forge/documentation/GitHub%20Importer/" rel="nofollow"><strong>sync your GitHub releases to SourceForge</a></strong> quickly and easily with <strong><a href="https://sourceforge.net/p/import_project/github/" rel="nofollow">this tool</a></strong> so your projects have a backup location, and get your project in front of SourceForge's nearly 20 million monthly users. It takes less than a minute. Get new users downloading your project releases today!</span><br></div>
  <a href="" class="btn-close" title="don't show me this again" onclick="closeAnnouncement(); return false;">&times;</a>
</div>


<script type="text/javascript">

if (!$.cookie('hide_sitenotice_36')) {
	$('#announcement').fadeIn(300);
}

function closeAnnouncement() {
	$('#announcement').fadeOut(300);
	$.cookie('hide_sitenotice_36', 'true', { path: '/', domain: 'slashdot.org', expires: 1 });
}
</script>
				<article id="firehose-173142156" data-fhid="173142156" data-fhtype="story" class="fhitem fhitem-story article usermode thumbs grid_24">
		<span class="sd-info-block" style="display: none">
			<span class="sd-key-firehose-id">173142156</span>
			<span class="type">story</span>
			
		</span>







	
	

<header>
	
		<span class="topic" id="topic-173142156">
			<a href="//developers.slashdot.org/index2.pl?fhfilter=programming" onclick="return addfhfilter('programming');">
			
				<img src="//a.fsdn.com/sd/topics/programming_64.png" width="64" height="64" alt="Programming" title="Programming">
			
		</a>
		</span>
	

	<h2 class="story">
		

		

		
		

		

		

		

		<span id="title-173142156" class="story-title"> <a   href="//developers.slashdot.org/story/24/02/24/0521230/can-a-programming-language-implement-time-travel">'Can a Programming Language Implement Time Travel?'</a> <span class=" no extlnk"><a class="story-sourcelnk" href="https://stackoverflow.blog/2024/02/12/can-a-programming-language-implement-time-travel/"  title="External link - https://stackoverflow.blog/2024/02/12/can-a-programming-language-implement-time-travel/" target="_blank"> (stackoverflow.blog) </a></span></span>

		
		
		<!--<span class="comments commentcnt-173142156" >77</span>-->
		

		
		<!-- comment bubble -->
		
			<span class="comment-bubble"><a href="//developers.slashdot.org/story/24/02/24/0521230/can-a-programming-language-implement-time-travel#comments" title="">77</a></span>
		
	</h2>
	<div class="details" id="details-173142156">
		<span class="story-details">
		<span class="story-views">
			<span class="sodify" onclick="firehose_set_options('color', 'red')" title="Filter Firehose to entries rated red or better"></span><span class="icon-beaker pop1 " alt="Popularity" title="Filter Firehose to entries rated red or better" onclick="firehose_set_options('color', 'red')"><span></span></span> 
		</span>
		</span>
		<span class="story-byline">
	
				
			Posted
				by 
		
		
			
				  EditorDavid
			
		
		

		
		
		<time id="fhtime-173142156" datetime="on Saturday February 24, 2024 @11:34AM">on Saturday February 24, 2024 @11:34AM</time>
		
		
			 from the <span class="dept-text">back-to-the-future</span> dept.
		
		</span>
	</div>
</header>

<div class="body" id="fhbody-173142156">
	
		
	

	
		
		<div id="text-173142156" class="p">
			
		 	
				Stack Overflow's blog <a href="https://stackoverflow.blog/2024/02/12/can-a-programming-language-implement-time-travel/">reports on a new programming language called Mariposa</a>.<br> <br>

They call it a "toy" programming language, "created as a way to play around with a novel or odd feature, like variable assignment outside of the normal order of execution &mdash; more colloquially, time travel."

<i>
Computer science has long sought to reason about time in electronic systems, thanks to a consistent interest in concurrency and real-time messaging... Mariposa allows you to manipulate the order of execution by assigning an instant to a variable, then setting the context of that instance. Here's a basic example, taken from <a href="https://github.com/ambulancja/mariposa">the Mariposa readme</a>:<br> <br>

<em>x = 1<br>
t = now()<br>
print(x)<br>
at t:<br>
  x = 2</em>
<br> <br>

According to the normal order of operations, this code should print "1". But because t is assigned to the instance in the second line, any modifications specified within an at t: block are applied immediately, and this code prints "2"...<br> <br>

While Mariposa caught a fair amount of attention recently, it's not the first implementation of time travel in programming. There is a Haskell package appropriately called <a href="https://hackage.haskell.org/package/tardis">tardis</a>, which creates two state transformers: one travels forward in time and one backward. As the docs explain, "The most concise way to explain it is this: getPast retrieves the value from the latest sendFuture, while getFuture retrieves the value from the next sendPast." One function's past is another one's future.</i> <br>

The article explores "the history and future of other programming paradigms" applying logic to time, including interval temporal logic systems as well as "modeling, analysis, and verification languages/tools that allow temporal and state modeling without requiring temporal logic understanding."<br>
		 	
		</div>

		

		

		
			
		
	</div>
	<aside class="grid_24 view_mode">
		
			<div class="units-12 story-detail-tags">
				<span id="sharethis-173142156" class="">
					
						

						

					
				</span>

				<div class="story-tags">
					<div class="tright tw">
						
							<span class="tright tags">
								
									<menu type="toolbar" class="edit-bar">
		<span id="tagbar-173142156" class="tag-bar none">
			
		</span>
		
		<!--
			<a class="edit-toggle" href="/my/login/" onclick="show_login_box();return false;">
				<span class="icon-tag btn collapse"></span>
			</a>
			-->
		
		
		<div class="tag-menu">
			<input class="tag-entry default" type="text" value="apply tags">
		</div>
		

		
		

	</menu>
								
							</span>
						
					</div>
				</div>
			</div>

			
				
				
				
			 	
					<section class="grid_24" id="newa2footerv2">
						<div class="grid_6 pr">
							<h3><a title="Previous story" href="//science.slashdot.org/story/24/02/24/0615242/5000-pound-satellite-successfully-deorbited-wednesday?sdsrc=prev">&larr;</a></h3>
						</div>
						<div class="grid_12 rl">
							<h3>You may like to read:</h3>
						</div>
						<div class="grid_6 ns">
							<h3><a title="Next story" href="//hardware.slashdot.org/story/24/02/24/0541201/15-million-toshiba-laptop-adapters-recalled-over-burn-and-fire-risks?sdsrc=next">&rarr;</a></h3>
						</div>
						<div class="grid_6">
							<span class="c">
								<a href="//science.slashdot.org/story/24/02/24/0615242/5000-pound-satellite-successfully-deorbited-wednesday?sdsrc=prev">5,000-Pound Satellite Successfully 'Deorbited' Wednesday </a>
							</span>
						</div>
						<div class="grid_12">
							<span class="c">
								
									
									
									
									

																				<h2><a href="//developers.slashdot.org/story/23/08/07/0136228/should-a-variables-type-come-after-its-name?sdsrc=popbyskid">Should a Variable's Type Come After Its Name?</a><br></h2>
																				<h2><a href="//developers.slashdot.org/story/23/09/02/1753239/are-scrums-a-cancer?sdsrc=popbyskid">Are Scrums a Cancer?</a><br></h2>
																				<h2><a href="//developers.slashdot.org/story/23/06/26/018234/34-of-ap-cs-students-couldnt-solve-this-java-based-2d-array-question?sdsrc=popbyskid">34% of AP CS Students Couldn't Solve This Java-Based 2D Array Question</a><br></h2>
																				<h2><a href="//developers.slashdot.org/story/23/06/03/1514212/nyt-its-the-end-of-computer-programming-as-we-know-it?sdsrc=popbyskid">NYT: It's the End of Computer Programming As We Know It</a><br></h2>
																				<h2><a href="//developers.slashdot.org/story/23/10/15/185245/ok-so-chatgpt-just-debugged-my-code-for-real?sdsrc=popbyskid">'OK, So ChatGPT Just Debugged My Code. For Real'</a><br></h2>
									
								
								
							</span>
						</div>
						<div class="grid_6">
							<span class="c">
								
									<a href="//hardware.slashdot.org/story/24/02/24/0541201/15-million-toshiba-laptop-adapters-recalled-over-burn-and-fire-risks?sdsrc=next">15 Million Toshiba Laptop Adapters Recalled Over Burn and Fire Risks</a>
								
							</span>
						</div>
					</section>
				
			
		
	</aside>
	



	</article>
			</div>
			</div>
		</div>
	</div>
	<!-- SMACKS: BEGIN RIGHT RAIL -->
	<aside id="slashboxes" class="rail-right">
		
                    <div id="slashboxesin" class="yui-b">
                            
                            
                            
                    </div>
		    <div class="railad adwrap-unviewed">
<div id='div-gpt-ad-300x250_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-300x250_a');});</script></div>
</div>
		
	</aside>
		<!-- SMACKS: END RIGHT RAIL -->
</div>
<!-- END STORY CONTENT -->

<!-- THIS IS THE LOCATION FOR THE NEW STORY_B CODE -->
<div class="adwrap">
<div id='div-gpt-ad-728x90_b'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_b');});</script></div>
</div>
<script type="text/javascript">
if (window.is_euro_union === 0) {
    if (sdAdBlockActive) {
        bizx.cmp.ifConsent('', ['all'], function () {
            $.ajax({
                url: '/ajax.pl?op=nel',
                type: 'POST',
                success: function(html){
                    if(html){
                        $('#firehoselist article').eq(0).after(html);
                    }
                }
            });
        });
    }
}
</script>
<!--------------------------->


<!-- SMACKS: BEGIN COMMENTS CONTAINER -->
<div class="container">
	<!-- SMACKS: BEGIN COMMENTS SECTION -->
	<div class="main-wrap">
        <div id='horizontal' class='jobbioapp' style="width:initial;margin-right:320px;"></div>
		<div class="main-content">
			<div id="comments" class="a2commentwrap">
			<div>
					<a name="comments"></a>
<div id="comments" class="container">
	<div class="main-wrap">
		<div class="main-content">
			<section class="d2incommentspl">
				<div class="commentwrap" id="commentwrap">
					
						<div class="commentBox">
							<div class="title hide">
								<h4>
									
										<span class="escape-link"><a href="//developers.slashdot.org/story/24/02/24/0521230/can-a-programming-language-implement-time-travel" title="Back to Article - 'Can a Programming Language Implement Time Travel?'">'Can a Programming Language Implement Time Travel?'</a></span>
									
									<span class="commentBoxLinks"><a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_d"></span> More</a>



	| <span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Reply</a>


	<a class="login"  href="//developers.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a></span>
								</h4>
							</div>
						</div>
					

					<section class="grid_24" id="d2header"><div>
						
							<h2 class="commentspl test"><a title="Back to Article - 'Can a Programming Language Implement Time Travel?'" href="//developers.slashdot.org/story/24/02/24/0521230/can-a-programming-language-implement-time-travel">'Can a Programming Language Implement Time Travel?'</a></h2>
						
						<nav class="grid_24">
							<div class="grid_14 widthauto">
							
						 		<span class="ind"></span><a class="btn first" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Post</a>
							
							<!-- <a href="//developers.slashdot.org/search.pl?op=comments&amp;sid=23236884" class="btn">Search <span class="totalcommentcnt">77</span> Comments</a> -->
							
								
									<a href="#" onclick="D2.ajaxFetchComments(0,1,'','',-1); return false" class="btn" id="d2loadall">Load All Comments</a>
								
							
							
								</div>
								<div class="grid_10 d1or2">
							

							
								<div id="d2out" class="horizontal rooted grid_15">
									<div id="d2act" class="hide">
										<div class="loki" id="gods">
											<script type="text/javascript">
												 $(function(){
													 D2.slider = new D2.Slider(
														 D2.user_threshold(),
														 D2.user_highlightthresh(),
														 'x'
													 );
												 });
											</script>
											<div id="bones" class="grid_12">
												<div class="ccw-count-container grid_24">
													<span id="ccw-full-count-text" class="grid_8 ccw-count-text tcenter"><span></span><span id="ccw-full-phrase">&nbsp;Full</span></span>
													<span id="ccw-abbr-count-text" class="grid_8 ccw-count-text"><span></span><span id="ccw-abbr-phrase">&nbsp;Abbreviated</span></span>
													<span id="ccw-hide-count-text" class="grid_8 ccw-count-text tleft"><span></span><span id="ccw-hide-phrase">&nbsp;Hidden</span></span>
												</div>
												<div id="ccw">
													<div id="ccw-body" class="ccw-core">
														<div id="ccw-panel-container" class="ccw-core">
															<div id="ccw-full-panel" class="ccw-panel">
																/Sea<div class="ccw-panel-border"></div>
																<div id="ccw-full-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
															<div id="ccw-abbr-panel" class="ccw-panel">
																<div class="ccw-panel-border"></div>
																<div id="ccw-abbr-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
															<div id="ccw-hide-panel" class="ccw-panel">
																<div id="ccw-hide-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
														</div>
														<div id="ccw-control" class="ccw-core">
															<div id="ccw-centering-rail" class="ccw-core">
																<div id="ccw-hide-bar-pos" class="ccw-core-pos">
																	<div id="ccw-hide-bar" class="ccw-bar">
																		<div id="ccw-hide-bar-tab" class="ccw-bar-tab"></div>
																		<div class="ccwa"></div>
																		<div class="ccwb"></div>
																		<div id="ccw-hide-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(HIDE_BAR, +1)"></div>
																		<div id="ccw-hide-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(HIDE_BAR, -1)"></div>
																	</div>
																</div>
																<div id="ccw-abbr-bar-pos" class="ccw-core-pos">
																	<div id="ccw-abbr-bar" class="ccw-bar">
																		<div id="ccw-abbr-bar-tab" class="ccw-bar-tab"></div>
																		<div class="ccwa"></div>
																		<div class="ccwb"></div>
																		<div id="ccw-abbr-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(ABBR_BAR, +1)"></div>
																		<div id="ccw-abbr-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(ABBR_BAR, -1)"></div>
																	</div>
																</div>
															</div>
														</div>
													</div>
													<div class="ccw-score-label grid_24">
														<div class="grid_3"><span class="sc">Score:</span></div>
														<div class="grid_3">5<span class="lg"></span></div>
														<div class="grid_3">4<span class="lg"></span></div>
														<div class="grid_3">3<span class="lg"></span></div>
														<div class="grid_3">2<span class="lg"></span></div>
														<div class="grid_3">1<span class="lg"></span></div>
														<div class="grid_3">0<span class="lg"></span></div>
														<div class="grid_3">-1<span class="lg"></span></div>
													</div>
												</div>
											</div>
											<div class="commentControlFooter">
												<a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_c"></span> More</a>



	| <span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Reply</a>


	<a class="login"  href="//developers.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a><div id="login_cover" class="hide" onclick="hide_login_box()"></div>
<div id="login_box" class="hide">
	<div id="login_box_content">
		<div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="//developers.slashdot.org/comments.pl?sid=23236884">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
		<div class="actions">
			<a class="ico close" href="#" onclick="hide_login_box(); return false"><span>Close</span></a>
		</div>
	</div>
</div>
<script type="text/javascript">logged_in = 0</script>
											</div>
											<div id="commentControlBoxStatus" class="hide"></div>
										</div>
									</div>
								</div>
							
							
							<a href="//developers.slashdot.org/search.pl?op=comments&amp;sid=23236884" class="ui-icon search_comments">Search <span class="totalcommentcnt">77</span> Comments</a>
							
								<a class="pref ui-icon-w" href="//developers.slashdot.org/users.pl" onclick="show_login_box(); $('#modal_box').addClass('login'); return false;">Log In/Create an Account</a>
							
						</div>
					</nav>
					<section id="besttabs" class="grid_24">
						<span class="legend">Comments Filter:</span>
						<ul class="besttabslist">
							<li class="active">
								<a href="#" data-filter-url="//developers.slashdot.org/story/24/02/24/0521230/can-a-programming-language-implement-time-travel#comments">All</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/02/24/0521230/can-a-programming-language-implement-time-travel/insightful-comments#comments">Insightful</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/02/24/0521230/can-a-programming-language-implement-time-travel/informative-comments#comments">Informative</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/02/24/0521230/can-a-programming-language-implement-time-travel/interesting-comments#comments">Interesting</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/02/24/0521230/can-a-programming-language-implement-time-travel/funny-comments#comments">Funny</a>
							</li>
						
					</ul>
					<script>
					(function($){
						$('#besttabs').show();
						$('.besttabslist').on('click', 'li a', function(e){
							e.preventDefault();
							var url = $(this).data('filter-url');
							//console.log('URL= ', url);
							$(this)
								.closest('ul').find('li').removeClass('active')
								.end()
								.closest('li').addClass('active');
							window.location = url;
						});
					})($j);
					</script>
			</section>
				<aside class="grid_24">
					<p>
						<small><strong>The Fine Print:</strong> The following comments are owned by whoever posted them.  We are not responsible for them in any way.</small>
					</p>
				</aside>
			</section>
			
		</div>
	</div>
</div><script src="//a.fsdn.com/sd/comments-minified.js?a23c9cce1cf8807f" type="text/javascript"></script>


<script type="text/javascript">
<!--
D2.d2_keybindings_disable()[191] = 1;
D2.boxStatus(1);
D2.comments({ 64265880: { uid: 1632063, pid: 0, read: 0, points: 2, kids: [ 64265972 ], opid: 0 }, 64265600: { uid: 1132591, pid: 64265582, subject: "Re:Ok...", read: 0, points: 1, kids: [ 64265778, 64265990, 64266066 ], opid: 64265582 }, 64265552: { uid: 666, pid: 0, read: 0, points: 0, kids: [ 64265580, 64265648, 64265822 ], opid: 0 }, 64265614: { uid: 88907, pid: 0, read: 0, points: 2, kids: [ 64265878 ], opid: 0 }, 64265532: { uid: 711126, pid: 64265512, subject: "Re:This is just a fancy way of bloating memory usa", read: 0, points: 0, kids: [ 64265536, 64265652, 64265970 ], opid: 64265512 }, 64265776: { uid: 666, pid: 0, read: 0, points: 0, kids: [ 64265828 ], opid: 0 }, 64265878: { uid: 326346, pid: 64265614, subject: "Re:Messing with causality is not \"time travel\"", read: 0, points: 2, kids: [ 64266134 ], opid: 64265614 }, 64267362: { uid: 197239, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64265568: { uid: 724646, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64265868: { uid: 599362, pid: 64265540, read: 0, points: 2, kids: [ 64267234 ], opid: 64265540 }, 64265848: { uid: 666, pid: 64265648, subject: "Re:ntpd.", read: 0, points: 0, kids: [  ], opid: 64265648 }, 64266570: { uid: 8381659, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64265652: { uid: 112790, pid: 64265532, subject: "Re:This is just a fancy way of bloating memory usa", read: 0, points: 5, kids: [ 64265658, 64265928, 64266664, 64266916 ], opid: 64265532 }, 64265650: { uid: 110704, pid: 64265582, subject: "Re:Ok...", read: 0, points: 1, kids: [  ], opid: 64265582 }, 64265582: { uid: 1180627, pid: 0, read: 0, points: 2, kids: [ 64265600, 64265650, 64265664 ], opid: 0 }, 64265778: { uid: 1180627, pid: 64265600, subject: "Re:Ok...", read: 0, points: 2, kids: [ 64266412 ], opid: 64265600 }, 64266058: { uid: 59147, pid: 64265774, subject: "Re: This is just a fancy way of bloating memory us", read: 0, points: 2, kids: [  ], opid: 64265774 }, 64265874: { uid: 326346, pid: 64265544, subject: "Re:Novel or odd feature?", read: 0, points: 3, kids: [ 64267140 ], opid: 64265544 }, 64266134: { uid: 629113, pid: 64265878, subject: "Re:Messing with causality is not \"time travel\"", read: 0, points: 2, kids: [  ], opid: 64265878 }, 64265706: { uid: 533084, pid: 64265580, subject: "Re:Shows what happens", read: 0, points: 2, kids: [  ], opid: 64265580 }, 64265928: { uid: 633283, pid: 64265652, subject: "Re:This is just a fancy way of bloating memory usa", read: 0, points: 2, kids: [  ], opid: 64265652 }, 64266040: { uid: 445176, pid: 64265550, subject: "Re:Race conditions as a features?", read: 0, points: 2, kids: [  ], opid: 64265550 }, 64265662: { uid: 666, pid: 0, read: 0, points: 0, kids: [  ], opid: 0 }, 64265550: { uid: 1279820, pid: 0, read: 0, points: 3, kids: [ 64265656, 64266040 ], opid: 0 }, 64266066: { uid: 874524, pid: 64265600, subject: "Re:Ok...", read: 0, points: 1, kids: [  ], opid: 64265600 }, 64266404: { uid: 736903, pid: 64265654, subject: "Re:A better alternative", read: 0, points: 2, kids: [  ], opid: 64265654 }, 64265654: { uid: 588767, pid: 0, read: 0, points: 2, kids: [ 64266404 ], opid: 0 }, 64265578: { uid: 666, pid: 64265536, subject: "Re:This is just a fancy way of bloating memory usa", read: 0, points: -1, kids: [  ], opid: 64265536 }, 64265644: { uid: 537051, pid: 64265638, subject: "Re:function == timeless", read: 0, points: 2, kids: [  ], opid: 64265638 }, 64265540: { uid: 95548, pid: 0, read: 0, points: 3, kids: [ 64265868 ], opid: 0 }, 64265884: { uid: 599362, pid: 64265638, read: 0, points: 2, kids: [  ], opid: 64265638 }, 64265664: { uid: 811747, pid: 64265582, subject: "Re:Ok...", read: 0, points: 2, kids: [ 64266432 ], opid: 64265582 }, 64267046: { uid: 37702, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64266144: { uid: 10122078, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64265972: { uid: 666, pid: 64265880, subject: "Re:How would one attach the language to a DB?", read: 0, points: 0, kids: [  ], opid: 64265880 }, 64265774: { uid: 112790, pid: 64265658, subject: "Re: This is just a fancy way of bloating memory us", read: 0, points: 2, kids: [ 64266058 ], opid: 64265658 }, 64265646: { uid: 872868, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64265970: { uid: 640240, pid: 64265532, subject: "Re:This is just a fancy way of bloating memory usa", read: 0, points: 2, kids: [ 64265996 ], opid: 64265532 }, 64266916: { uid: 160982, pid: 64265652, subject: "Re:This is just a fancy way of bloating memory usa", read: 0, points: 2, kids: [  ], opid: 64265652 }, 64265656: { uid: 10459763, pid: 64265550, read: 0, points: 1, kids: [  ], opid: 64265550 }, 64265648: { uid: 110704, pid: 64265552, subject: "Re:ntpd.", read: 0, points: 1, kids: [ 64265848 ], opid: 64265552 }, 64265686: { uid: 675890, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64265828: { uid: 666, pid: 64265776, subject: "Re:At first...", read: 0, points: 0, kids: [ 64265888 ], opid: 64265776 }, 64266412: { uid: 736903, pid: 64265778, subject: "Re:Ok...", read: 0, points: 2, kids: [  ], opid: 64265778 }, 64267242: { uid: 453677, pid: 0, read: 0, points: 1, kids: [  ], opid: 0 }, 64265962: { uid: 874524, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64266130: { uid: 794424, pid: 64265894, subject: "Re:Novel or odd feature?", read: 0, points: 1, kids: [  ], opid: 64265894 }, 64265602: { uid: 242280, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64265822: { uid: 1787294, pid: 64265552, subject: "Re:ntpd.", read: 0, points: 2, kids: [ 64265844 ], opid: 64265552 }, 64266432: { uid: 110704, pid: 64265664, subject: "Re:Ok...", read: 0, points: 1, kids: [  ], opid: 64265664 }, 64265638: { uid: 537051, pid: 0, read: 0, points: 2, kids: [ 64265644, 64265884 ], opid: 0 }, 64265580: { uid: 666, pid: 64265552, read: 0, points: 0, kids: [ 64265706, 64265934 ], opid: 64265552 }, 64266460: { uid: 15451, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64266176: { uid: 10425332, pid: 64265536, subject: "Re:This is just a fancy way of bloating memory usa", read: 0, points: -1, kids: [ 64266500 ], opid: 64265536 }, 64267090: { uid: 10425332, pid: 64266500, subject: "Re: This is just a fancy way of bloating memory us", read: 0, points: -1, kids: [  ], opid: 64266500 }, 64265534: { uid: 2206452, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64265536: { uid: 666, pid: 64265532, subject: "Re:This is just a fancy way of bloating memory usa", read: 0, points: -1, kids: [ 64265578, 64266176 ], opid: 64265532 }, 64266500: { uid: 588132, pid: 64266176, read: 0, points: 2, kids: [ 64267090 ], opid: 64266176 }, 64265844: { uid: 666, pid: 64265822, subject: "Re:ntpd.", read: 0, points: 1, kids: [  ], opid: 64265822 }, 64265990: { uid: 811747, pid: 64265600, subject: "Re:Ok...", read: 0, points: 2, kids: [  ], opid: 64265600 }, 64265996: { uid: 15173, pid: 64265970, subject: "Re:This is just a fancy way of bloating memory usa", read: 0, points: 2, kids: [  ], opid: 64265970 }, 64265544: { uid: 583063, pid: 0, read: 0, points: 3, kids: [ 64265874, 64265894 ], opid: 0 }, 64266418: { uid: 736903, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64266876: { uid: 110704, pid: 64266658, subject: "Re:No. There's no time travel happening here", read: 0, points: 1, kids: [  ], opid: 64266658 }, 64265564: { uid: 1990110, pid: 0, read: 0, points: 5, kids: [  ], opid: 0 }, 64266556: { uid: 1301187, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64266658: { uid: 1024021, pid: 0, read: 0, points: 2, kids: [ 64266876 ], opid: 0 }, 64265512: { uid: 112790, pid: 0, read: 0, points: 3, kids: [ 64265532 ], opid: 0 }, 64265658: { uid: 588767, pid: 64265652, read: 0, points: 2, kids: [ 64265774 ], opid: 64265652 }, 64265690: { uid: 537183, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64265830: { uid: 9704014, pid: 0, read: 0, points: 0, kids: [  ], opid: 0 }, 64265934: { uid: 1725214, pid: 64265580, subject: "Re:Shows what happens", read: 0, points: 2, kids: [  ], opid: 64265580 }, 64265888: { uid: 599362, pid: 64265828, read: 0, points: 2, kids: [  ], opid: 64265828 }, 64267234: { uid: 6185656, pid: 64265868, subject: "Re: Seriously?", read: 0, points: 2, kids: [  ], opid: 64265868 }, 64266664: { uid: 682162, pid: 64265652, read: 0, points: 2, kids: [  ], opid: 64265652 }, 64265894: { uid: 1469707, pid: 64265544, subject: "Re:Novel or odd feature?", read: 0, points: 2, kids: [ 64266130 ], opid: 64265544 }, 64267140: { uid: 558884, pid: 64265874, read: 0, points: 2, kids: [  ], opid: 64265874 } });

D2.thresh_totals({6:{6:{1:77,3:0,2:0}},3:{6:{1:70,3:1,2:6},4:{1:70,3:6,2:1},3:{1:70,3:7,2:0},5:{1:70,3:2,2:5}},2:{6:{1:23,3:1,2:53},4:{1:23,3:6,2:48},3:{1:23,3:27,2:27},2:{1:23,3:54,2:0},5:{1:23,3:2,2:52}},1:{6:{1:13,3:1,2:63},4:{1:13,3:6,2:58},1:{1:13,3:64,2:0},3:{1:13,3:27,2:37},2:{1:13,3:55,2:9},5:{1:13,3:2,2:62}},4:{6:{1:75,3:1,2:1},4:{1:75,3:2,2:0},5:{1:75,3:2,2:0}},0:{6:{1:4,3:1,2:72},4:{1:4,3:6,2:67},1:{1:4,3:68,2:5},3:{1:4,3:27,2:46},0:{1:4,3:73,2:0},2:{1:4,3:55,2:18},5:{1:4,3:2,2:71}},"-1":{6:{1:0,3:1,2:76},3:{1:0,3:27,2:50},2:{1:0,3:55,2:22},1:{1:0,3:68,2:9},4:{1:0,3:6,2:71},0:{1:0,3:73,2:4},"-1":{1:0,3:77,2:0},5:{1:0,3:2,2:75}},5:{6:{1:75,3:1,2:1},5:{1:75,3:2,2:0}}});

D2.root_comment(0);
D2.root_comments([64265512,64265534,64265540,64265544,64265550,64265552,64265564,64265568,64265582,64265602,64265614,64265638,64265646,64265654,64265662,64265686,64265690,64265776,64265830,64265880,64265962,64266144,64266418,64266460,64266556,64266570,64266658,64267046,64267242,64267362]);
D2.root_comments_hash({64265880:1,64265552:1,64265614:1,64265776:1,64267362:1,64265686:1,64265568:1,64267242:1,64265962:1,64266570:1,64265602:1,64265638:1,64266460:1,64265582:1,64265534:1,64265662:1,64265544:1,64266418:1,64265550:1,64266658:1,64266556:1,64265564:1,64265512:1,64265654:1,64265690:1,64265830:1,64265540:1,64267046:1,64266144:1,64265646:1});

D2.d2_comment_order(0);
D2.user_uid(666);
D2.user_is_anon(1);
D2.user_is_admin(0);
D2.user_is_subscriber(0);
D2.user_smallscreen(0);
D2.user_threshold(1);
D2.user_highlightthresh(4);
D2.user_d2asp(0);

D2.discussion_id(23236884);

D2.d2_seen('64265512,20,2,2,4,4,6,2,12,4,10,2,2,18,2,12,24,6,2,2,2,2,2,2,2,4,2,22,4,16,68,2,2,44,6,2,14,4,20,6,4,2,4,4,6,34,6,28,8,2,18,6,44,18,8,64,4,10,32,228,8,6,14,28,40,56,14,88,6,212,40,130,44,50,94,8,120');
D2.more_comments_num(0);


//-->
</script>




	
	
	
	
		<ul id="commentlisting" class="d2">
			<li id="tree_64265512" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64265512" class="commentstatus"></div>
<div id="comment_64265512" class="cw">
	<div id="comment_top_64265512" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265512" name="comment_link_64265512" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265512" onclick="return D2.setFocusComment(64265512)" >This is just a fancy way of bloating memory usage</a>


		 	<span id="comment_score_64265512" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265512); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~RedK">RedK</a>  <span class="uid"><a href="//slashdot.org/~RedK">( 112790 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265512">		
		on Saturday February 24, 2024 @11:42AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265512">#64265512</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265512"><p>With multiple tagged instances of a variable.  Instead of a clean 64 bit int, now your "int" is a hashtable.</p><p>This isn't time travel.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265512">
<span class="ind"></span><a id="reply_link_64265512" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64265512" onclick="D2.replyTo(64265512); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=This is just a fancy way of bloating memory usage%20by%20RedK%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265512" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265512" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265512" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64265512" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64265512" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64265512"></div>

<ul id="group_64265512">
	<li id="hiddens_64265512" class="hide"></li>
</ul>

<ul id="commtree_64265512"><li id="tree_64265532" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64265532" class="commentstatus"></div>
<div id="comment_64265532" class="cw">
</div>

<div id="replyto_64265532"></div>

<ul id="group_64265532">
	<li id="hiddens_64265532" class="hide"></li>
</ul>

<ul id="commtree_64265532"><li id="tree_64265536" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64265536" class="commentstatus"></div>
<div id="comment_64265536" class="cw">
</div>

<div id="replyto_64265536"></div>

<ul id="group_64265536">
	<li id="hiddens_64265536" class="hide"></li>
</ul>

<ul id="commtree_64265536"><li id="tree_64265578" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64265578" class="commentstatus"></div>
<div id="comment_64265578" class="cw">
</div>

<div id="replyto_64265578"></div>

<ul id="group_64265578">
	<li id="hiddens_64265578" class="hide"></li>
</ul>

</li><li id="tree_64266176" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64266176" class="commentstatus"></div>
<div id="comment_64266176" class="cw">
</div>

<div id="replyto_64266176"></div>

<ul id="group_64266176">
	<li id="hiddens_64266176" class="hide"></li>
</ul>

<ul id="commtree_64266176"><li id="tree_64266500" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266500" class="commentstatus"></div>
<div id="comment_64266500" class="cw">
	<div id="comment_top_64266500" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266500" name="comment_link_64266500" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266500" onclick="return D2.setFocusComment(64266500)" >Re: This is just a fancy way of bloating memory us</a>


		 	<span id="comment_score_64266500" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266500); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~50000BTU_barbecue">50000BTU_barbecue</a>  <span class="uid"><a href="//slashdot.org/~50000BTU_barbecue">( 588132 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266500"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266500"><p>Any credible news on Chris's whereabouts these days?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266500">

</div>
</div>

<div id="replyto_64266500"></div>

<ul id="group_64266500">
	<li id="hiddens_64266500" class="hide"></li>
</ul>

<ul id="commtree_64266500"><li id="tree_64267090" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64267090" class="commentstatus"></div>
<div id="comment_64267090" class="cw">
</div>

<div id="replyto_64267090"></div>

<ul id="group_64267090">
	<li id="hiddens_64267090" class="hide"></li>
</ul>

</li><li id="hidestring_64266500"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64266500">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li></ul></li><li id="hidestring_64265536"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64265536">2 replies</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64265652" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64265652" class="commentstatus"></div>
<div id="comment_64265652" class="cw">
	<div id="comment_top_64265652" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265652" name="comment_link_64265652" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265652" onclick="return D2.setFocusComment(64265652)" >Re:This is just a fancy way of bloating memory usa</a>


		 	<span id="comment_score_64265652" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265652); return false"><span class=opt>Score:</span>5</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~RedK">RedK</a>  <span class="uid"><a href="//slashdot.org/~RedK">( 112790 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265652">		
		on Saturday February 24, 2024 @01:18PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265652">#64265652</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265652"><p>Explain how you think this is actually implemented then if you don't think this is just memory bloat, not actually time travel.</p><p>You think they managed to create FTL travel inside your computer to have a light signal travel back and forward in time to get values in memory at different times ?</p><p>Of course not.  When you say x = 1, it adds x to a hashtable in the default position.  When you then say t = now, it creates a timestamp label named t.  When you say "as of t, x = 2", all it does is insert 2 in the x hashtable in the t position, using the earlier created label.</p><p>Ain't no magic dude, it's computers.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265652">
<span class="ind"></span><a id="reply_link_64265652" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64265652" onclick="D2.replyTo(64265652); return false;">Reply to This</a> <span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=64265532" onclick="return D2.selectParent(64265532)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Re:This is just a fancy way of bloating memory usa%20by%20RedK%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265652" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265652" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265652" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64265652" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64265652" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64265652"></div>

<ul id="group_64265652">
	<li id="hiddens_64265652" class="hide"></li>
</ul>

<ul id="commtree_64265652"><li id="tree_64265658" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265658" class="commentstatus"></div>
<div id="comment_64265658" class="cw">
	<div id="comment_top_64265658" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265658" name="comment_link_64265658" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265658" onclick="return D2.setFocusComment(64265658)" >Re: This is just a fancy way of bloating memory us</a>


		 	<span id="comment_score_64265658" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265658); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~reanjr">reanjr</a>  <span class="uid"><a href="//slashdot.org/~reanjr">( 588767 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265658"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265658"><p>Well, one approach is for the compiler to handle the "now()" as a sort of sync point keyword. It then reorders the instructions accordingly. Other approaches might include virtual closures, similar to how a single JavaScript async function under the hood looks more like multiple chained functions sharing a closure scope.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265658">

</div>
</div>

<div id="replyto_64265658"></div>

<ul id="group_64265658">
	<li id="hiddens_64265658" class="hide"></li>
</ul>

<ul id="commtree_64265658"><li id="tree_64265774" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265774" class="commentstatus"></div>
<div id="comment_64265774" class="cw">
	<div id="comment_top_64265774" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265774" name="comment_link_64265774" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265774" onclick="return D2.setFocusComment(64265774)" >Re:</a>


		 	<span id="comment_score_64265774" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265774); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~RedK">RedK</a>  <span class="uid"><a href="//slashdot.org/~RedK">( 112790 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265774"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265774"><p>&gt; It then reorders the instructions accordingly.</p><p>Which would mean copying instructions in multiple place, sort of like a loop unroll, resulting in a bigger executable and thus still more memory usage.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265774">

</div>
</div>

<div id="replyto_64265774"></div>

<ul id="group_64265774">
	<li id="hiddens_64265774" class="hide"></li>
</ul>

<ul id="commtree_64265774"><li id="tree_64266058" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266058" class="commentstatus"></div>
<div id="comment_64266058" class="cw">
	<div id="comment_top_64266058" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266058" name="comment_link_64266058" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266058" onclick="return D2.setFocusComment(64266058)" >Re:</a>


		 	<span id="comment_score_64266058" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266058); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ceoyoyo">ceoyoyo</a>  <span class="uid"><a href="//slashdot.org/~ceoyoyo">( 59147 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266058"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266058"><p>No, you'd just run over the code with a preprocessor and untangle it.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266058">

</div>
</div>

<div id="replyto_64266058"></div>

<ul id="group_64266058">
	<li id="hiddens_64266058" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64265928" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265928" class="commentstatus"></div>
<div id="comment_64265928" class="cw">
	<div id="comment_top_64265928" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265928" name="comment_link_64265928" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265928" onclick="return D2.setFocusComment(64265928)" >Re:</a>


		 	<span id="comment_score_64265928" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265928); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~NFN_NLN">NFN_NLN</a>  <span class="uid"><a href="//slashdot.org/~NFN_NLN">( 633283 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265928"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265928"><p>&gt; Explain how you think this is actually implemented then if you don't think this is just memory bloat, not actually time travel.</p><p>You can't get something from nothing.  Otherwise I could store data in "time" instead of space for free.  Putting that aside, the important question is even with the memory bloat are there use cases for this?  I wouldn't expect an entire software platform to use this but maybe functions or code blocks where undoing operations make sense?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265928">

</div>
</div>

<div id="replyto_64265928"></div>

<ul id="group_64265928">
	<li id="hiddens_64265928" class="hide"></li>
</ul>

</li><li id="tree_64266664" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266664" class="commentstatus"></div>
<div id="comment_64266664" class="cw">
	<div id="comment_top_64266664" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266664" name="comment_link_64266664" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266664" onclick="return D2.setFocusComment(64266664)" >Re: This is just a fancy way of bloating memory us</a>


		 	<span id="comment_score_64266664" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266664); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Z00L00K">Z00L00K</a>  <span class="uid"><a href="//slashdot.org/~Z00L00K">( 682162 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266664"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266664"><p>To me this seems like one of those really nasty bugs you'd get that causes crashes and security issues.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266664">

</div>
</div>

<div id="replyto_64266664"></div>

<ul id="group_64266664">
	<li id="hiddens_64266664" class="hide"></li>
</ul>

</li><li id="tree_64266916" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266916" class="commentstatus"></div>
<div id="comment_64266916" class="cw">
	<div id="comment_top_64266916" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266916" name="comment_link_64266916" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266916" onclick="return D2.setFocusComment(64266916)" >Re:</a>


		 	<span id="comment_score_64266916" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266916); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~_merlin">_merlin</a>  <span class="uid"><a href="//slashdot.org/~_merlin">( 160982 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266916"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266916"><p>It basically works by calling a linked list of functions.  There are no hash tables involved.</p><ul>
<li>The "t = now()" creates an empty linked list, assigns it to the variable "t", and adds code to call all the functions in the list.</li><li>A function pointer to each "at t:" block is appended to the linked list referenced by "t".</li></ul><p>It's pretty simple.  The structure can be flattened as an optimisation to get rid of the linked lists.  There are no hash tables needed.  It's just a way to make code behave unintuitively.</p><p>I mean, th<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266916">

</div>
</div>

<div id="replyto_64266916"></div>

<ul id="group_64266916">
	<li id="hiddens_64266916" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64265970" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265970" class="commentstatus"></div>
<div id="comment_64265970" class="cw">
	<div id="comment_top_64265970" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265970" name="comment_link_64265970" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265970" onclick="return D2.setFocusComment(64265970)" >Re:</a>


		 	<span id="comment_score_64265970" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265970); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~aldousd666">aldousd666</a>  <span class="uid"><a href="//slashdot.org/~aldousd666">( 640240 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265970"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265970">It's not so dumb. This is a programming paradigm, as in, a way to specify how the computer will run in way that makes sense to the human writing the code. It still has to translate into regular actual code that runs, in a prescribed order, on a normal processor. It's like if we had a programming language that consisted entirely of beatnik poetry (there is such a language on esolangs dot org, check it out, it's entertaining,) it would still need to be translated into instructions, but perhaps the beatnik poe</div>
	</div>

	<div class="commentSub" id="comment_sub_64265970">

</div>
</div>

<div id="replyto_64265970"></div>

<ul id="group_64265970">
	<li id="hiddens_64265970" class="hide"></li>
</ul>

<ul id="commtree_64265970"><li id="tree_64265996" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265996" class="commentstatus"></div>
<div id="comment_64265996" class="cw">
	<div id="comment_top_64265996" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265996" name="comment_link_64265996" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265996" onclick="return D2.setFocusComment(64265996)" >Re:</a>


		 	<span id="comment_score_64265996" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265996); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~HiThere">HiThere</a>  <span class="uid"><a href="//slashdot.org/~HiThere">( 15173 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265996"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265996"><p>There's also a language, forger which one, the implements the "come_from" instructions.  (Come_from is the opposite of "goto".)</p><p>I doubt that Mariposa will find any major use cases, but it's an example of the "block universe" that programs run in.  I.e. everything is supposed to be totally deterministic, so there's nothing really surprising about "time travel" except that it's quite hard to reason about.  In a way it's like languages where every variable is immutable, but the variable names can be rebound to<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265996">

</div>
</div>

<div id="replyto_64265996"></div>

<ul id="group_64265996">
	<li id="hiddens_64265996" class="hide"></li>
</ul>

</li></ul></li><li id="hidestring_64265532"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64265532">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="hidestring_64265512"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64265512">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64265534" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265534" class="commentstatus"></div>
<div id="comment_64265534" class="cw">
	<div id="comment_top_64265534" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265534" name="comment_link_64265534" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265534" onclick="return D2.setFocusComment(64265534)" >if speed=88MPH then enable unit.fluxcapacitor</a>


		 	<span id="comment_score_64265534" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265534); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Joe_Dragon">Joe_Dragon</a>  <span class="uid"><a href="//slashdot.org/~Joe_Dragon">( 2206452 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265534"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265534"><p>if speed=88MPH then enable unit.fluxcapacitor</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265534">

</div>
</div>

<div id="replyto_64265534"></div>

<ul id="group_64265534">
	<li id="hiddens_64265534" class="hide"></li>
</ul>

</li><li id="tree_64265540" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64265540" class="commentstatus"></div>
<div id="comment_64265540" class="cw">
	<div id="comment_top_64265540" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265540" name="comment_link_64265540" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265540" onclick="return D2.setFocusComment(64265540)" >Seriously?</a>


		 	<span id="comment_score_64265540" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265540); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~backslashdot">backslashdot</a>  <span class="uid"><a href="//slashdot.org/~backslashdot">( 95548 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265540">		
		on Saturday February 24, 2024 @12:03PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265540">#64265540</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265540"><p>This should be fun to debug. Are they trying to increase programmer suicides or something?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265540">
<span class="ind"></span><a id="reply_link_64265540" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64265540" onclick="D2.replyTo(64265540); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Seriously?%20by%20backslashdot%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265540" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265540" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265540" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64265540" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64265540" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64265540"></div>

<ul id="group_64265540">
	<li id="hiddens_64265540" class="hide"></li>
</ul>

<ul id="commtree_64265540"><li id="tree_64265868" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265868" class="commentstatus"></div>
<div id="comment_64265868" class="cw">
	<div id="comment_top_64265868" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265868" name="comment_link_64265868" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265868" onclick="return D2.setFocusComment(64265868)" >Re: Seriously?</a>


		 	<span id="comment_score_64265868" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265868); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265868"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265868"><p>Just what I was thinking. This sort of paradigm would make BASIC "goto" sphagehetti code seem like something Knuth would be proud of.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265868">

</div>
</div>

<div id="replyto_64265868"></div>

<ul id="group_64265868">
	<li id="hiddens_64265868" class="hide"></li>
</ul>

<ul id="commtree_64265868"><li id="tree_64267234" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64267234" class="commentstatus"></div>
<div id="comment_64267234" class="cw">
	<div id="comment_top_64267234" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64267234" name="comment_link_64267234" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64267234" onclick="return D2.setFocusComment(64267234)" >Re:</a>


		 	<span id="comment_score_64267234" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64267234); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Don'tJoin">Don'tJoin</a>  <span class="uid"><a href="//slashdot.org/~Don'tJoin">( 6185656 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64267234"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64267234"><p>Don't bash on Basic. Besides the nostalgia c64 Basic invokes in me, it was rather okay as a language, not much worse than another procedural language.</p><p>But GOTO: c have it and even though I hardly ever use it, it is there and it has its own specific use cases, like exiting a loop and do something specific* for that case that can happen multiple times in that loop. Sure, it's an ugly hack, useful nonetheless, and should never be recommended to use.</p><p>* like unlocking mutexes, and "break" might not exit the loop b<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64267234">

</div>
</div>

<div id="replyto_64267234"></div>

<ul id="group_64267234">
	<li id="hiddens_64267234" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64265544" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64265544" class="commentstatus"></div>
<div id="comment_64265544" class="cw">
	<div id="comment_top_64265544" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265544" name="comment_link_64265544" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265544" onclick="return D2.setFocusComment(64265544)" >Novel or odd feature?</a>


		 	<span id="comment_score_64265544" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265544); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~SchroedingersCat">SchroedingersCat</a>  <span class="uid"><a href="//slashdot.org/~SchroedingersCat">( 583063 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265544">		
		on Saturday February 24, 2024 @12:03PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265544">#64265544</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265544">"created as a way to play around with a novel or odd feature, like variable assignment outside of the normal order of execution" - obviously, someone never dealt with C++ static initialization.</div>
	</div>

	<div class="commentSub" id="comment_sub_64265544">
<span class="ind"></span><a id="reply_link_64265544" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64265544" onclick="D2.replyTo(64265544); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Novel or odd feature?%20by%20SchroedingersCat%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265544" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265544" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265544" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64265544" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64265544" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64265544"></div>

<ul id="group_64265544">
	<li id="hiddens_64265544" class="hide"></li>
</ul>

<ul id="commtree_64265544"><li id="tree_64265874" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265874" class="commentstatus"></div>
<div id="comment_64265874" class="cw">
	<div id="comment_top_64265874" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265874" name="comment_link_64265874" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265874" onclick="return D2.setFocusComment(64265874)" >Re:</a>


		 	<span id="comment_score_64265874" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265874); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~93+Escort+Wagon">93 Escort Wagon</a>  <span class="uid"><a href="//slashdot.org/~93+Escort+Wagon">( 326346 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265874"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265874"><p>There are a lot of younger people out there (especially in the blog-o-verse) who have messed around with python for a few years and think that's made them coding experts. When they learn something new, they assume it's novel for everyone.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265874">

</div>
</div>

<div id="replyto_64265874"></div>

<ul id="group_64265874">
	<li id="hiddens_64265874" class="hide"></li>
</ul>

<ul id="commtree_64265874"><li id="tree_64267140" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64267140" class="commentstatus"></div>
<div id="comment_64267140" class="cw">
	<div id="comment_top_64267140" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64267140" name="comment_link_64267140" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64267140" onclick="return D2.setFocusComment(64267140)" >And what has Python ever given us in return?</a>


		 	<span id="comment_score_64267140" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64267140); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Latent+Heat">Latent Heat</a>  <span class="uid"><a href="//slashdot.org/~Latent+Heat">( 558884 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64267140"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64267140"><p>
Removed the semi colons and curly braces?
</p><p>
Well right!  It used to be you couldn't do a code review without confusing the control flow over some curly braces that weren't indented properly.
</p><p>
The libraries?
</p><p>
Right again.  I don't know how we ever got anything done without the libraries.
</p><p>
The Legions of inexperienced coders?
</p><p>
Well, everyone know you can drive costs down by hiring coders at low wages.  That goes without saying.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64267140">

</div>
</div>

<div id="replyto_64267140"></div>

<ul id="group_64267140">
	<li id="hiddens_64267140" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64265894" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265894" class="commentstatus"></div>
<div id="comment_64265894" class="cw">
	<div id="comment_top_64265894" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265894" name="comment_link_64265894" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265894" onclick="return D2.setFocusComment(64265894)" >Re:</a>


		 	<span id="comment_score_64265894" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265894); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~kmoser">kmoser</a>  <span class="uid"><a href="//slashdot.org/~kmoser">( 1469707 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265894"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265894">In other words, asynchronously. So, yeah, not new.</div>
	</div>

	<div class="commentSub" id="comment_sub_64265894">

</div>
</div>

<div id="replyto_64265894"></div>

<ul id="group_64265894">
	<li id="hiddens_64265894" class="hide"></li>
</ul>

<ul id="commtree_64265894"><li id="tree_64266130" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266130" class="commentstatus"></div>
<div id="comment_64266130" class="cw">
	<div id="comment_top_64266130" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266130" name="comment_link_64266130" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266130" onclick="return D2.setFocusComment(64266130)" >Re:</a>


		 	<span id="comment_score_64266130" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266130); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Dan+Posluns">Dan Posluns</a>  <span class="uid"><a href="//slashdot.org/~Dan+Posluns">( 794424 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266130"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266130"><p>More like undefined.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266130">

</div>
</div>

<div id="replyto_64266130"></div>

<ul id="group_64266130">
	<li id="hiddens_64266130" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64265550" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64265550" class="commentstatus"></div>
<div id="comment_64265550" class="cw">
	<div id="comment_top_64265550" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265550" name="comment_link_64265550" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265550" onclick="return D2.setFocusComment(64265550)" >Race conditions as a features?</a>


		 	<span id="comment_score_64265550" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265550); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Anubis+IV">Anubis IV</a>  <span class="uid"><a href="//slashdot.org/~Anubis+IV">( 1279820 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265550">		
		on Saturday February 24, 2024 @12:08PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265550">#64265550</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265550"><p>I mean, to each their own, and I&rsquo;m all for playful languages, but why the coverage on this? They&rsquo;ve made a class of bugs a first class feature.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265550">
<span class="ind"></span><a id="reply_link_64265550" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64265550" onclick="D2.replyTo(64265550); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Race conditions as a features?%20by%20Anubis IV%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265550" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265550" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265550" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64265550" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64265550" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64265550"></div>

<ul id="group_64265550">
	<li id="hiddens_64265550" class="hide"></li>
</ul>

<ul id="commtree_64265550"><li id="tree_64265656" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265656" class="commentstatus"></div>
<div id="comment_64265656" class="cw">
	<div id="comment_top_64265656" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265656" name="comment_link_64265656" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265656" onclick="return D2.setFocusComment(64265656)" >Re: Race conditions as a features?</a>


		 	<span id="comment_score_64265656" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265656); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~unfriendlyLLM">unfriendlyLLM</a>  <span class="uid"><a href="//slashdot.org/~unfriendlyLLM">( 10459763 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265656"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265656">Every programming language ever created has a grammar policy that causes x to be one or the other or the next. There is usually a rule or intermediary function to stop this. But yea, your linker and compiler is having fun with it's version of x over time....</div>
	</div>

	<div class="commentSub" id="comment_sub_64265656">

</div>
</div>

<div id="replyto_64265656"></div>

<ul id="group_64265656">
	<li id="hiddens_64265656" class="hide"></li>
</ul>

</li><li id="tree_64266040" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266040" class="commentstatus"></div>
<div id="comment_64266040" class="cw">
	<div id="comment_top_64266040" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266040" name="comment_link_64266040" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266040" onclick="return D2.setFocusComment(64266040)" >Re:</a>


		 	<span id="comment_score_64266040" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266040); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~StikyPad">StikyPad</a>  <span class="uid"><a href="//slashdot.org/~StikyPad">( 445176 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266040"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266040"><p>Fatal error: temporal decoherence: User has never been born.  Quit to press any key.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266040">

</div>
</div>

<div id="replyto_64266040"></div>

<ul id="group_64266040">
	<li id="hiddens_64266040" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64265552" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64265552" class="commentstatus"></div>
<div id="comment_64265552" class="cw">
</div>

<div id="replyto_64265552"></div>

<ul id="group_64265552">
	<li id="hiddens_64265552" class="hide"></li>
</ul>

<ul id="commtree_64265552"><li id="tree_64265580" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64265580" class="commentstatus"></div>
<div id="comment_64265580" class="cw">
</div>

<div id="replyto_64265580"></div>

<ul id="group_64265580">
	<li id="hiddens_64265580" class="hide"></li>
</ul>

<ul id="commtree_64265580"><li id="tree_64265706" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265706" class="commentstatus"></div>
<div id="comment_64265706" class="cw">
	<div id="comment_top_64265706" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265706" name="comment_link_64265706" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265706" onclick="return D2.setFocusComment(64265706)" >Re:</a>


		 	<span id="comment_score_64265706" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265706); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~TuringTest">TuringTest</a>  <span class="uid"><a href="//slashdot.org/~TuringTest">( 533084 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265706"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265706"><p><div class="quote"><p>Go ahead, read that Bible of yours and watch the progression from "God is one of the gods" to "God is the only god" over the course of the text.</p></div><p>The godcides in between were thoroughly hidden, all traces covered.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265706">

</div>
</div>

<div id="replyto_64265706"></div>

<ul id="group_64265706">
	<li id="hiddens_64265706" class="hide"></li>
</ul>

</li><li id="tree_64265934" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265934" class="commentstatus"></div>
<div id="comment_64265934" class="cw">
	<div id="comment_top_64265934" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265934" name="comment_link_64265934" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265934" onclick="return D2.setFocusComment(64265934)" >Re:</a>


		 	<span id="comment_score_64265934" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265934); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Cito">Cito</a>  <span class="uid"><a href="//slashdot.org/~Cito">( 1725214 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265934"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265934"><p>Hehe, this dude doesn't know that the Christian god of war was sent to annihilate all those other gods. It's pretty common knowledge...  I mean it's right there in the Nag Hammadi texts, like even the 4 horsemen of the apocalypse ride with the heads of all the other fools that had ever claimed godhood hanging from their saddles.<nobr> <wbr></nobr>;-P</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265934">

</div>
</div>

<div id="replyto_64265934"></div>

<ul id="group_64265934">
	<li id="hiddens_64265934" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64265648" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265648" class="commentstatus"></div>
<div id="comment_64265648" class="cw">
	<div id="comment_top_64265648" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265648" name="comment_link_64265648" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265648" onclick="return D2.setFocusComment(64265648)" >Re:</a>


		 	<span id="comment_score_64265648" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265648); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~blue+trane">blue trane</a>  <span class="uid"><a href="//slashdot.org/~blue+trane">( 110704 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265648"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265648"><p>Can you show us on the doll where the priest's red flag touches occurred?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265648">

</div>
</div>

<div id="replyto_64265648"></div>

<ul id="group_64265648">
	<li id="hiddens_64265648" class="hide"></li>
</ul>

<ul id="commtree_64265648"><li id="tree_64265848" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64265848" class="commentstatus"></div>
<div id="comment_64265848" class="cw">
</div>

<div id="replyto_64265848"></div>

<ul id="group_64265848">
	<li id="hiddens_64265848" class="hide"></li>
</ul>

</li><li id="hidestring_64265648"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64265648">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64265822" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265822" class="commentstatus"></div>
<div id="comment_64265822" class="cw">
	<div id="comment_top_64265822" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265822" name="comment_link_64265822" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265822" onclick="return D2.setFocusComment(64265822)" >Re:</a>


		 	<span id="comment_score_64265822" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265822); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~thegarbz">thegarbz</a>  <span class="uid"><a href="//slashdot.org/~thegarbz">( 1787294 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265822"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265822"><p><div class="quote"><p>Yes, I believe one such implementation is called 'ntpd' which is short for 'network time protocol daemon'</p></div><p>And you'd be wrong. ntpd doesn't change the time, nor make it run backwards. It only skews it.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265822">

</div>
</div>

<div id="replyto_64265822"></div>

<ul id="group_64265822">
	<li id="hiddens_64265822" class="hide"></li>
</ul>

<ul id="commtree_64265822"><li id="tree_64265844" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265844" class="commentstatus"></div>
<div id="comment_64265844" class="cw">
	<div id="comment_top_64265844" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265844" name="comment_link_64265844" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265844" onclick="return D2.setFocusComment(64265844)" >Re:</a>


		 	<span id="comment_score_64265844" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265844); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span>Anonymous Coward</span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265844"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265844"><p><div class="quote"><p><div class="quote"><p>Yes, I believe one such implementation is called 'ntpd' which is short for 'network time protocol daemon'</p></div><p>And you'd be wrong. ntpd doesn't change the time, nor make it run backwards. It only skews it.</p></div><p>Woosh!!!!</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265844">

</div>
</div>

<div id="replyto_64265844"></div>

<ul id="group_64265844">
	<li id="hiddens_64265844" class="hide"></li>
</ul>

</li></ul></li><li id="hidestring_64265552"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64265552">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64265564" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64265564" class="commentstatus"></div>
<div id="comment_64265564" class="cw">
	<div id="comment_top_64265564" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265564" name="comment_link_64265564" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265564" onclick="return D2.setFocusComment(64265564)" >INTERCAL?</a>


		 	<span id="comment_score_64265564" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265564); return false"><span class=opt>Score:</span>5</a>, Interesting)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~The1stImmortal">The1stImmortal</a>  <span class="uid"><a href="//slashdot.org/~The1stImmortal">( 1990110 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265564">		
		on Saturday February 24, 2024 @12:18PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265564">#64265564</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265564">This looks almost like a more serious implementation of INTERCAL's COME FROM or the CLC-INTERCAL extension of NEXT FROM/RESUME. A reverse goto/return elsewhere that triggers on a line which has no obvious indication that it triggers anything.</div>
	</div>

	<div class="commentSub" id="comment_sub_64265564">
<span class="ind"></span><a id="reply_link_64265564" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64265564" onclick="D2.replyTo(64265564); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=INTERCAL?%20by%20The1stImmortal%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265564" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265564" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23236884&cid=64265564" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64265564" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64265564" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64265564"></div>

<ul id="group_64265564">
	<li id="hiddens_64265564" class="hide"></li>
</ul>

</li><li id="tree_64265568" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265568" class="commentstatus"></div>
<div id="comment_64265568" class="cw">
	<div id="comment_top_64265568" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265568" name="comment_link_64265568" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265568" onclick="return D2.setFocusComment(64265568)" >Looks lame</a>


		 	<span id="comment_score_64265568" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265568); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~penguinoid">penguinoid</a>  <span class="uid"><a href="//slashdot.org/~penguinoid">( 724646 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265568"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265568"><p>Is this not just a hard to debug method of creating a function for x=2?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265568">

</div>
</div>

<div id="replyto_64265568"></div>

<ul id="group_64265568">
	<li id="hiddens_64265568" class="hide"></li>
</ul>

</li><li id="tree_64265582" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265582" class="commentstatus"></div>
<div id="comment_64265582" class="cw">
	<div id="comment_top_64265582" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265582" name="comment_link_64265582" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265582" onclick="return D2.setFocusComment(64265582)" >Ok...</a>


		 	<span id="comment_score_64265582" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265582); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Bahbus">Bahbus</a>  <span class="uid"><a href="//slashdot.org/~Bahbus">( 1180627 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265582"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265582"><p>How is this useful or interesting? This seems both stupid and a waste of time in both developing and "playing" with it.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265582">

</div>
</div>

<div id="replyto_64265582"></div>

<ul id="group_64265582">
	<li id="hiddens_64265582" class="hide"></li>
</ul>

<ul id="commtree_64265582"><li id="tree_64265600" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265600" class="commentstatus"></div>
<div id="comment_64265600" class="cw">
	<div id="comment_top_64265600" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265600" name="comment_link_64265600" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265600" onclick="return D2.setFocusComment(64265600)" >Re:</a>


		 	<span id="comment_score_64265600" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265600); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~bugs2squash">bugs2squash</a>  <span class="uid"><a href="//slashdot.org/~bugs2squash">( 1132591 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265600"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265600">I've seen applications where it was important to be able to know what conditions existed at a particular time in the past - forensics for example or retrospective billing. Generally the application is quite specific about only needing to retain a subset of the data, but it may become more important as we try to trace what AI knew and when as it formulated its output.</div>
	</div>

	<div class="commentSub" id="comment_sub_64265600">

</div>
</div>

<div id="replyto_64265600"></div>

<ul id="group_64265600">
	<li id="hiddens_64265600" class="hide"></li>
</ul>

<ul id="commtree_64265600"><li id="tree_64265778" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265778" class="commentstatus"></div>
<div id="comment_64265778" class="cw">
	<div id="comment_top_64265778" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265778" name="comment_link_64265778" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265778" onclick="return D2.setFocusComment(64265778)" >Re:</a>


		 	<span id="comment_score_64265778" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265778); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Bahbus">Bahbus</a>  <span class="uid"><a href="//slashdot.org/~Bahbus">( 1180627 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265778"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265778"><p>Ok. But that doesn't mean someone should create an inherently terrible programming language. A new programming language isn't needed to accomplish these tasks. I'm not even sure it would necessarily be <i>good</i> at doing any of that.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265778">

</div>
</div>

<div id="replyto_64265778"></div>

<ul id="group_64265778">
	<li id="hiddens_64265778" class="hide"></li>
</ul>

<ul id="commtree_64265778"><li id="tree_64266412" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266412" class="commentstatus"></div>
<div id="comment_64266412" class="cw">
	<div id="comment_top_64266412" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266412" name="comment_link_64266412" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266412" onclick="return D2.setFocusComment(64266412)" >Re:</a>


		 	<span id="comment_score_64266412" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266412); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~PPH">PPH</a>  <span class="uid"><a href="//slashdot.org/~PPH">( 736903 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266412"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266412"><p><div class="quote"><p>But that doesn't mean someone should create an inherently terrible programming language.</p></div><p>I felt a great disturbance in the Force, as if millions of CS graduate students voices cried out in terror and were suddenly silenced.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266412">

</div>
</div>

<div id="replyto_64266412"></div>

<ul id="group_64266412">
	<li id="hiddens_64266412" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64265990" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265990" class="commentstatus"></div>
<div id="comment_64265990" class="cw">
	<div id="comment_top_64265990" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265990" name="comment_link_64265990" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265990" onclick="return D2.setFocusComment(64265990)" >Re:</a>


		 	<span id="comment_score_64265990" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265990); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Brett+Buck">Brett Buck</a>  <span class="uid"><a href="//slashdot.org/~Brett+Buck">( 811747 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265990"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265990"><p>You can very easily know that, you record it with a time tag, then look up the record when necessary. Any common language can do that very easily.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265990">

</div>
</div>

<div id="replyto_64265990"></div>

<ul id="group_64265990">
	<li id="hiddens_64265990" class="hide"></li>
</ul>

</li><li id="tree_64266066" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266066" class="commentstatus"></div>
<div id="comment_64266066" class="cw">
	<div id="comment_top_64266066" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266066" name="comment_link_64266066" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266066" onclick="return D2.setFocusComment(64266066)" >Re:</a>


		 	<span id="comment_score_64266066" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266066); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~fahrbot-bot">fahrbot-bot</a>  <span class="uid"><a href="//slashdot.org/~fahrbot-bot">( 874524 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266066"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266066"><p><div class="quote"><p>I've seen applications where it was important to be able to know what conditions existed at a particular time in the past<nobr> <wbr></nobr>...</p></div><p>
In future news: Republicans ban programming language.<nobr> <wbr></nobr>:-)</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266066">

</div>
</div>

<div id="replyto_64266066"></div>

<ul id="group_64266066">
	<li id="hiddens_64266066" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64265650" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265650" class="commentstatus"></div>
<div id="comment_64265650" class="cw">
	<div id="comment_top_64265650" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265650" name="comment_link_64265650" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265650" onclick="return D2.setFocusComment(64265650)" >Re:</a>


		 	<span id="comment_score_64265650" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265650); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~blue+trane">blue trane</a>  <span class="uid"><a href="//slashdot.org/~blue+trane">( 110704 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265650"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265650"><p>If we can simulate it can we build it, or did the universe already?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265650">

</div>
</div>

<div id="replyto_64265650"></div>

<ul id="group_64265650">
	<li id="hiddens_64265650" class="hide"></li>
</ul>

</li><li id="tree_64265664" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265664" class="commentstatus"></div>
<div id="comment_64265664" class="cw">
	<div id="comment_top_64265664" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265664" name="comment_link_64265664" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265664" onclick="return D2.setFocusComment(64265664)" >Re:</a>


		 	<span id="comment_score_64265664" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265664); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Brett+Buck">Brett Buck</a>  <span class="uid"><a href="//slashdot.org/~Brett+Buck">( 811747 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265664"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265664"><p>Yes, you could easily make these sorts of mistakes in any other programming language. This seems like someone fiddling around with ancient bugs, but they have so little knowledge of the topic that they think they are new.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265664">

</div>
</div>

<div id="replyto_64265664"></div>

<ul id="group_64265664">
	<li id="hiddens_64265664" class="hide"></li>
</ul>

<ul id="commtree_64265664"><li id="tree_64266432" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266432" class="commentstatus"></div>
<div id="comment_64266432" class="cw">
	<div id="comment_top_64266432" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266432" name="comment_link_64266432" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266432" onclick="return D2.setFocusComment(64266432)" >Re:</a>


		 	<span id="comment_score_64266432" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266432); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~blue+trane">blue trane</a>  <span class="uid"><a href="//slashdot.org/~blue+trane">( 110704 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266432"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266432"><p>Or, have you considered that you might just be projecting?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266432">

</div>
</div>

<div id="replyto_64266432"></div>

<ul id="group_64266432">
	<li id="hiddens_64266432" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64265602" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265602" class="commentstatus"></div>
<div id="comment_64265602" class="cw">
	<div id="comment_top_64265602" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265602" name="comment_link_64265602" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265602" onclick="return D2.setFocusComment(64265602)" >the wheel: reinvented?</a>


		 	<span id="comment_score_64265602" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265602); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~snowshovelboy">snowshovelboy</a>  <span class="uid"><a href="//slashdot.org/~snowshovelboy">( 242280 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265602"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265602"><p><a href="https://help.autodesk.com/view/MAXDEV/2023/ENU/?guid=GUID-4E9CCD61-F575-42E1-8654-315DDF6C6A26" title="autodesk.com">  3dsmax At Time </a> [autodesk.com]</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265602">

</div>
</div>

<div id="replyto_64265602"></div>

<ul id="group_64265602">
	<li id="hiddens_64265602" class="hide"></li>
</ul>

</li><li id="tree_64265614" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265614" class="commentstatus"></div>
<div id="comment_64265614" class="cw">
	<div id="comment_top_64265614" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265614" name="comment_link_64265614" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265614" onclick="return D2.setFocusComment(64265614)" >Messing with causality is not "time travel"</a>


		 	<span id="comment_score_64265614" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265614); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265614"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265614"><p>In the given context, the right term is "stupid".</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265614">

</div>
</div>

<div id="replyto_64265614"></div>

<ul id="group_64265614">
	<li id="hiddens_64265614" class="hide"></li>
</ul>

<ul id="commtree_64265614"><li id="tree_64265878" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265878" class="commentstatus"></div>
<div id="comment_64265878" class="cw">
	<div id="comment_top_64265878" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265878" name="comment_link_64265878" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265878" onclick="return D2.setFocusComment(64265878)" >Re:</a>


		 	<span id="comment_score_64265878" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265878); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~93+Escort+Wagon">93 Escort Wagon</a>  <span class="uid"><a href="//slashdot.org/~93+Escort+Wagon">( 326346 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265878"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265878"><p>Hey, anything can implement time travel... for sufficiently loose definitions of "time travel".</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265878">

</div>
</div>

<div id="replyto_64265878"></div>

<ul id="group_64265878">
	<li id="hiddens_64265878" class="hide"></li>
</ul>

<ul id="commtree_64265878"><li id="tree_64266134" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266134" class="commentstatus"></div>
<div id="comment_64266134" class="cw">
	<div id="comment_top_64266134" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266134" name="comment_link_64266134" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266134" onclick="return D2.setFocusComment(64266134)" >Re:</a>


		 	<span id="comment_score_64266134" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266134); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~slothman32">slothman32</a>  <span class="uid"><a href="//slashdot.org/~slothman32">( 629113 )</a></span></a> <a href="/faq/subscriptions.shtml#subscription_other_advantages">*</a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266134"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266134"><p>Luckily you are the "Futurama quotes" person so it is funnier.<br>A "sufficient definition of time travel" could be that the language can only affect future variables, i.e. go forward in time. But time is a loop so it can affect variables in previous executions of the ".exe" or whatever.<br>That must have been in the last season why the characters did that.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266134">

</div>
</div>

<div id="replyto_64266134"></div>

<ul id="group_64266134">
	<li id="hiddens_64266134" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64265638" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265638" class="commentstatus"></div>
<div id="comment_64265638" class="cw">
	<div id="comment_top_64265638" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265638" name="comment_link_64265638" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265638" onclick="return D2.setFocusComment(64265638)" >function == timeless</a>


		 	<span id="comment_score_64265638" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265638); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~wormbin">wormbin</a>  <span class="uid"><a href="//slashdot.org/~wormbin">( 537051 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265638"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265638"><p>Whenever I do imperative programming I'm always conscious of time. Each statement may change state and I'm aware of how that can affect the system. I'm very aware of "time".

</p><p>When I do functional programming (like Scala) I feel like I'm writing mathematical statements that aren't causing actions but just stating truths. It feels like time doesn't exist.

</p><p>I know it's just a feeling and under the hood there's still a Von Neumann engine chugging away, but it's a feeling I can't seem to shake.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265638">

</div>
</div>

<div id="replyto_64265638"></div>

<ul id="group_64265638">
	<li id="hiddens_64265638" class="hide"></li>
</ul>

<ul id="commtree_64265638"><li id="tree_64265644" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265644" class="commentstatus"></div>
<div id="comment_64265644" class="cw">
	<div id="comment_top_64265644" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265644" name="comment_link_64265644" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265644" onclick="return D2.setFocusComment(64265644)" >Re:</a>


		 	<span id="comment_score_64265644" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265644); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~wormbin">wormbin</a>  <span class="uid"><a href="//slashdot.org/~wormbin">( 537051 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265644"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265644">whoops. I meant "functional == timeless"</div>
	</div>

	<div class="commentSub" id="comment_sub_64265644">

</div>
</div>

<div id="replyto_64265644"></div>

<ul id="group_64265644">
	<li id="hiddens_64265644" class="hide"></li>
</ul>

</li><li id="tree_64265884" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265884" class="commentstatus"></div>
<div id="comment_64265884" class="cw">
	<div id="comment_top_64265884" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265884" name="comment_link_64265884" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265884" onclick="return D2.setFocusComment(64265884)" >Re: function == timeless</a>


		 	<span id="comment_score_64265884" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265884); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265884"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265884"><p>Functional programming is just a fancy name for polymorphism-by-value and recursion as a first class construct. It makes a small number of  simple algorithms easier to implement at the expense of making all the others a damn site harder.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265884">

</div>
</div>

<div id="replyto_64265884"></div>

<ul id="group_64265884">
	<li id="hiddens_64265884" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64265646" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265646" class="commentstatus"></div>
<div id="comment_64265646" class="cw">
	<div id="comment_top_64265646" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265646" name="comment_link_64265646" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265646" onclick="return D2.setFocusComment(64265646)" >Paradox</a>


		 	<span id="comment_score_64265646" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265646); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Meneth">Meneth</a>  <span class="uid"><a href="//slashdot.org/~Meneth">( 872868 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265646"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265646">I tried making an infinite loop by reading data from the future, but the compiler wouldn't let me. "Assignment would lead to time paradox."</div>
	</div>

	<div class="commentSub" id="comment_sub_64265646">

</div>
</div>

<div id="replyto_64265646"></div>

<ul id="group_64265646">
	<li id="hiddens_64265646" class="hide"></li>
</ul>

</li><li id="tree_64265654" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265654" class="commentstatus"></div>
<div id="comment_64265654" class="cw">
	<div id="comment_top_64265654" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265654" name="comment_link_64265654" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265654" onclick="return D2.setFocusComment(64265654)" >A better alternative</a>


		 	<span id="comment_score_64265654" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265654); return false"><span class=opt>Score:</span>2</a>, Interesting)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~reanjr">reanjr</a>  <span class="uid"><a href="//slashdot.org/~reanjr">( 588767 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265654"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265654"><p>I've been working on a language where there is a focus on immutability. In this language, "variable" (actually constants) assignments can come anywhere in the scope. The compiler figures out the dependency graph for each line of code and orders them accordingly.</p><p>A better refined, and more useful approach IMO.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265654">

</div>
</div>

<div id="replyto_64265654"></div>

<ul id="group_64265654">
	<li id="hiddens_64265654" class="hide"></li>
</ul>

<ul id="commtree_64265654"><li id="tree_64266404" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266404" class="commentstatus"></div>
<div id="comment_64266404" class="cw">
	<div id="comment_top_64266404" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266404" name="comment_link_64266404" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266404" onclick="return D2.setFocusComment(64266404)" >Re:</a>


		 	<span id="comment_score_64266404" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266404); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~PPH">PPH</a>  <span class="uid"><a href="//slashdot.org/~PPH">( 736903 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266404"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266404"><p><div class="quote"><p>Variables won't, constants aren't.</p></div><p> - Seen somewhere.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266404">

</div>
</div>

<div id="replyto_64266404"></div>

<ul id="group_64266404">
	<li id="hiddens_64266404" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64265662" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64265662" class="commentstatus"></div>
<div id="comment_64265662" class="cw">
</div>

<div id="replyto_64265662"></div>

<ul id="group_64265662">
	<li id="hiddens_64265662" class="hide"></li>
</ul>

</li><li id="tree_64265686" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265686" class="commentstatus"></div>
<div id="comment_64265686" class="cw">
	<div id="comment_top_64265686" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265686" name="comment_link_64265686" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265686" onclick="return D2.setFocusComment(64265686)" >It's just limited time travel</a>


		 	<span id="comment_score_64265686" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265686); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~JamesTRexx">JamesTRexx</a>  <span class="uid"><a href="//slashdot.org/~JamesTRexx">( 675890 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265686"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265686"><p>Why only inside an at block? Let the compiler search the entire codebase for any possible change to x.</p><p>Better yet, let it do a quantum search for past and future changes in the codebase. Now we're talking about real time travel.<br>And a compiler with a severe case of burnout.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265686">

</div>
</div>

<div id="replyto_64265686"></div>

<ul id="group_64265686">
	<li id="hiddens_64265686" class="hide"></li>
</ul>

</li><li id="tree_64265690" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265690" class="commentstatus"></div>
<div id="comment_64265690" class="cw">
	<div id="comment_top_64265690" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265690" name="comment_link_64265690" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265690" onclick="return D2.setFocusComment(64265690)" >Realtime</a>


		 	<span id="comment_score_64265690" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265690); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ukoda">ukoda</a>  <span class="uid"><a href="//slashdot.org/~ukoda">( 537183 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265690"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265690">I guess this give a whole new meaning to realtime debugging.  I think this language will be going on my avoid list.</div>
	</div>

	<div class="commentSub" id="comment_sub_64265690">

</div>
</div>

<div id="replyto_64265690"></div>

<ul id="group_64265690">
	<li id="hiddens_64265690" class="hide"></li>
</ul>

</li><li id="tree_64265776" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64265776" class="commentstatus"></div>
<div id="comment_64265776" class="cw">
</div>

<div id="replyto_64265776"></div>

<ul id="group_64265776">
	<li id="hiddens_64265776" class="hide"></li>
</ul>

<ul id="commtree_64265776"><li id="tree_64265828" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64265828" class="commentstatus"></div>
<div id="comment_64265828" class="cw">
</div>

<div id="replyto_64265828"></div>

<ul id="group_64265828">
	<li id="hiddens_64265828" class="hide"></li>
</ul>

<ul id="commtree_64265828"><li id="tree_64265888" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265888" class="commentstatus"></div>
<div id="comment_64265888" class="cw">
	<div id="comment_top_64265888" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265888" name="comment_link_64265888" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265888" onclick="return D2.setFocusComment(64265888)" >Re: At first...</a>


		 	<span id="comment_score_64265888" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265888); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265888"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265888"><p>Newsflash: just about anyone who develops professionally has to cope with concurrency in the form of threading. It's a solved problem albeit a hard one to get right without hidden race conditions.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265888">

</div>
</div>

<div id="replyto_64265888"></div>

<ul id="group_64265888">
	<li id="hiddens_64265888" class="hide"></li>
</ul>

</li></ul></li><li id="hidestring_64265776"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64265776">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64265830" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64265830" class="commentstatus"></div>
<div id="comment_64265830" class="cw">
</div>

<div id="replyto_64265830"></div>

<ul id="group_64265830">
	<li id="hiddens_64265830" class="hide"></li>
</ul>

</li><li id="tree_64265880" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265880" class="commentstatus"></div>
<div id="comment_64265880" class="cw">
	<div id="comment_top_64265880" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265880" name="comment_link_64265880" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265880" onclick="return D2.setFocusComment(64265880)" >How would one attach the language to a DB?</a>


		 	<span id="comment_score_64265880" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265880); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Rujiel">Rujiel</a>  <span class="uid"><a href="//slashdot.org/~Rujiel">( 1632063 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265880"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265880">Bobby Tables has come unstuck in time</div>
	</div>

	<div class="commentSub" id="comment_sub_64265880">

</div>
</div>

<div id="replyto_64265880"></div>

<ul id="group_64265880">
	<li id="hiddens_64265880" class="hide"></li>
</ul>

<ul id="commtree_64265880"><li id="tree_64265972" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64265972" class="commentstatus"></div>
<div id="comment_64265972" class="cw">
</div>

<div id="replyto_64265972"></div>

<ul id="group_64265972">
	<li id="hiddens_64265972" class="hide"></li>
</ul>

</li><li id="hidestring_64265880"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64265880">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64265962" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64265962" class="commentstatus"></div>
<div id="comment_64265962" class="cw">
	<div id="comment_top_64265962" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64265962" name="comment_link_64265962" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64265962" onclick="return D2.setFocusComment(64265962)" >Not time travel, snapshots</a>


		 	<span id="comment_score_64265962" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64265962); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~fahrbot-bot">fahrbot-bot</a>  <span class="uid"><a href="//slashdot.org/~fahrbot-bot">( 874524 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64265962"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64265962"><p>
The example in TFS seems more like using snapshots with variable values.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64265962">

</div>
</div>

<div id="replyto_64265962"></div>

<ul id="group_64265962">
	<li id="hiddens_64265962" class="hide"></li>
</ul>

</li><li id="tree_64266144" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266144" class="commentstatus"></div>
<div id="comment_64266144" class="cw">
	<div id="comment_top_64266144" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266144" name="comment_link_64266144" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266144" onclick="return D2.setFocusComment(64266144)" >Calling it time travel is just wrong.</a>


		 	<span id="comment_score_64266144" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266144); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Currently_Defacating">Currently_Defacating</a>  <span class="uid"><a href="//slashdot.org/~Currently_Defacating">( 10122078 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266144"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266144">You could do this in Fortran.  The computer still has to read all of the instructions and then execute, there is no time travel. It's just like giving someone bad instructions and saying oh yeah in between the 3rd and 4fth step, you're supposed to do x...</div>
	</div>

	<div class="commentSub" id="comment_sub_64266144">

</div>
</div>

<div id="replyto_64266144"></div>

<ul id="group_64266144">
	<li id="hiddens_64266144" class="hide"></li>
</ul>

</li><li id="tree_64266418" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266418" class="commentstatus"></div>
<div id="comment_64266418" class="cw">
	<div id="comment_top_64266418" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266418" name="comment_link_64266418" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266418" onclick="return D2.setFocusComment(64266418)" >Can we ...</a>


		 	<span id="comment_score_64266418" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266418); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~PPH">PPH</a>  <span class="uid"><a href="//slashdot.org/~PPH">( 736903 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266418"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266418"><p><nobr> <wbr></nobr>... implement a time travel routine using this language to go back and convince Lennart Poettering to major in art history?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266418">

</div>
</div>

<div id="replyto_64266418"></div>

<ul id="group_64266418">
	<li id="hiddens_64266418" class="hide"></li>
</ul>

</li><li id="tree_64266460" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266460" class="commentstatus"></div>
<div id="comment_64266460" class="cw">
	<div id="comment_top_64266460" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266460" name="comment_link_64266460" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266460" onclick="return D2.setFocusComment(64266460)" >Just asynchronous programming...</a>


		 	<span id="comment_score_64266460" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266460); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Todd+Knarr">Todd Knarr</a>  <span class="uid"><a href="//slashdot.org/~Todd+Knarr">( 15451 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266460"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266460"><p>Not time travel, just bog-standard asynchronous programming. When dealing with async constructs, or even just callbacks, the order instructions appear when printed is not the order of execution. Any competent software engineer ought to grok that.</p><p>If you want a brain-bender, look up Intercal's computed COME FROM construct and ponder the fact that someone actually worked out how to implement this elder horror.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266460">

</div>
</div>

<div id="replyto_64266460"></div>

<ul id="group_64266460">
	<li id="hiddens_64266460" class="hide"></li>
</ul>

</li><li id="tree_64266556" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266556" class="commentstatus"></div>
<div id="comment_64266556" class="cw">
	<div id="comment_top_64266556" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266556" name="comment_link_64266556" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266556" onclick="return D2.setFocusComment(64266556)" >SQL Server temporal tables</a>


		 	<span id="comment_score_64266556" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266556); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Tony+Isaac">Tony Isaac</a>  <span class="uid"><a href="//slashdot.org/~Tony+Isaac">( 1301187 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266556"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266556"><p>SQL Server has something like this, called "temporal tables." With these tables, it's possible to query the values of records in that table as they were at a specified time.</p><p>I'm not sure what this language does that has a practical use, but maybe there's something I'm missing.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266556">

</div>
</div>

<div id="replyto_64266556"></div>

<ul id="group_64266556">
	<li id="hiddens_64266556" class="hide"></li>
</ul>

</li><li id="tree_64266570" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266570" class="commentstatus"></div>
<div id="comment_64266570" class="cw">
	<div id="comment_top_64266570" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266570" name="comment_link_64266570" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266570" onclick="return D2.setFocusComment(64266570)" >Define "time travel."</a>


		 	<span id="comment_score_64266570" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266570); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~zeeky+boogy+doog">zeeky boogy doog</a>  <span class="uid"><a href="//slashdot.org/~zeeky+boogy+doog">( 8381659 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266570"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266570">Time travel in the sense of a bootstrap paradox (the classic example being, I go back in time and Bach hears my iPod playing BWV-565 and writes it down, now where did the Toccata &amp; Fugue in D Minor come from?) is not actually paradoxical and, at the quantum level, this sort of <i>self-consistent</i> time travel occurs infinitely often. A prototypical example is the photon's self-interaction via an electron loop: A virtual electron going back in time (a positron) hits the photon and gets turned into an electron</div>
	</div>

	<div class="commentSub" id="comment_sub_64266570">

</div>
</div>

<div id="replyto_64266570"></div>

<ul id="group_64266570">
	<li id="hiddens_64266570" class="hide"></li>
</ul>

</li><li id="tree_64266658" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266658" class="commentstatus"></div>
<div id="comment_64266658" class="cw">
	<div id="comment_top_64266658" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266658" name="comment_link_64266658" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266658" onclick="return D2.setFocusComment(64266658)" >No. There's no time travel happening here</a>


		 	<span id="comment_score_64266658" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266658); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~tiqui">tiqui</a>  <span class="uid"><a href="//slashdot.org/~tiqui">( 1024021 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266658"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266658"><p>If the microprocessor cannot natively do a thing, then no programming language (which is, itself, just a blob of code) can do that thing with that processor.</p><p>What we have here is a poorly designed and implemented toy computer language. That's it. Nothing more, and not actually article-worthy.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266658">

</div>
</div>

<div id="replyto_64266658"></div>

<ul id="group_64266658">
	<li id="hiddens_64266658" class="hide"></li>
</ul>

<ul id="commtree_64266658"><li id="tree_64266876" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64266876" class="commentstatus"></div>
<div id="comment_64266876" class="cw">
	<div id="comment_top_64266876" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64266876" name="comment_link_64266876" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64266876" onclick="return D2.setFocusComment(64266876)" >Re:</a>


		 	<span id="comment_score_64266876" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64266876); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~blue+trane">blue trane</a>  <span class="uid"><a href="//slashdot.org/~blue+trane">( 110704 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64266876"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64266876"><p>Can I program a microprocessor to say "this statement is a lie"?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64266876">

</div>
</div>

<div id="replyto_64266876"></div>

<ul id="group_64266876">
	<li id="hiddens_64266876" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64267046" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64267046" class="commentstatus"></div>
<div id="comment_64267046" class="cw">
	<div id="comment_top_64267046" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64267046" name="comment_link_64267046" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64267046" onclick="return D2.setFocusComment(64267046)" >I can't think of a single use case for this</a>


		 	<span id="comment_score_64267046" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64267046); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~clambake">clambake</a>  <span class="uid"><a href="//slashdot.org/~clambake">( 37702 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64267046"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64267046"><p>other than creating impossible-to-find bugs</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64267046">

</div>
</div>

<div id="replyto_64267046"></div>

<ul id="group_64267046">
	<li id="hiddens_64267046" class="hide"></li>
</ul>

</li><li id="tree_64267242" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64267242" class="commentstatus"></div>
<div id="comment_64267242" class="cw">
	<div id="comment_top_64267242" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64267242" name="comment_link_64267242" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64267242" onclick="return D2.setFocusComment(64267242)" >Super maintainable...</a>


		 	<span id="comment_score_64267242" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64267242); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~DjangoShagnasty">DjangoShagnasty</a>  <span class="uid"><a href="//slashdot.org/~DjangoShagnasty">( 453677 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64267242"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64267242"><tt>t = now()<br>print(t)<br>at t:<br>t = 2</tt></div>
	</div>

	<div class="commentSub" id="comment_sub_64267242">

</div>
</div>

<div id="replyto_64267242"></div>

<ul id="group_64267242">
	<li id="hiddens_64267242" class="hide"></li>
</ul>

</li><li id="tree_64267362" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64267362" class="commentstatus"></div>
<div id="comment_64267362" class="cw">
	<div id="comment_top_64267362" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64267362" name="comment_link_64267362" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;cid=64267362" onclick="return D2.setFocusComment(64267362)" >Lucid programming language also made time explicit</a>


		 	<span id="comment_score_64267362" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64267362); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ODBOL">ODBOL</a>  <span class="uid"><a href="//slashdot.org/~ODBOL">( 197239 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64267362"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64267362"><p>Check out the Lucid programming language:</p><p>

<a href="https://en.wikipedia.org/wiki/Lucid_(programming_language)" title="wikipedia.org">https://en.wikipedia.org/wiki/...</a> [wikipedia.org]

</p><p>It made the time sequence of each variable explicit. It also treated time as multidimensional, with nested time lines corresponding to nesting levels of loops in a more conventional language. It didn't catch on, but it's a good example to stimulate thinking about alternative views of programming.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64267362">

</div>
</div>

<div id="replyto_64267362"></div>

<ul id="group_64267362">
	<li id="hiddens_64267362" class="hide"></li>
</ul>

</li><li id="hidestring_0"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23236884&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=0">4 replies</a> beneath your current threshold.</b></noscript></li>
			<li id="roothiddens" class="hide"></li>
		</ul>
	
	
	
	

<noscript><p><b>There may be more comments in this discussion. Without JavaScript enabled, you might want to <a href="//developers.slashdot.org/users.pl?op=editcomm">turn on Classic Discussion System</a> in your preferences instead.</b></p></noscript>
<div id="discussion_buttons" class="clearfix">






</div>


<div class="newcmnt"><div id="replyto_0"></div></div>


	<script type="text/javascript">
<!--
		D2.currents()['hidden']   = 13;
		D2.currents()['full']     = 6;
		D2.currents()['oneline']  = 58;
		// D2.currents_total(77);

		D2.abbrev_comments({64266570:519,64265970:512,64266916:556,64265996:521,64267234:529});
		D2.noshow_comments([64265532,64265536,64265578,64266176,64267090,64265552,64265580,64265848,64265662,64265776,64265828,64265830,64265972]);
		D2.pieces_comments([64266500,64265658,64265774,64266058,64265928,64266664,64266916,64265970,64265996,64265534,64265868,64267234,64265874,64267140,64265894,64266130,64265656,64266040,64265706,64265934,64265648,64265822,64265844,64265568,64265582,64265600,64265778,64266412,64265990,64266066,64265650,64265664,64266432,64265602,64265614,64265878,64266134,64265638,64265644,64265884,64265646,64265654,64266404,64265686,64265690,64265888,64265880,64265962,64266144,64266418,64266460,64266556,64266570,64266658,64266876,64267046,64267242,64267362]);
		D2.init_hiddens([64266500,64265536,64265532,64265512,64265648,64265552,64265776,64265880,0]);

		D2.finishLoading();


		if (D2.thresh_totals()[6][6][1] == 0) {
			D2.replyTo(0, 1);
		}


//-->
	</script>


</div>



	
	
		<div id="clickgen" class="grid_24 b">
    <section class="grid_16 f">
        <div>
			<h4 class="nobg">
			    <a href="" class="selected btmrel" onClick="getRelatedStoriesForStory(425296);return false">Related Links</a>
			    <span class="tops fright">Top of the: <a href="" class="btmday" onClick="getTopStories(1);return false">day</a>, <a class="btmweek" href="" onClick="getTopStories(7); return false">week</a>, <a href="" onClick="getTopStories(30);return false" class="btmmonth">month</a>.</span>
			</h4>
			<ul class="nobullets bmrelatedlist">


	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>321<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/23/08/07/0136228/should-a-variables-type-come-after-its-name?sdsrc=popbyskidbtmprev">Should a Variable's Type Come After Its Name?</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>293<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/23/09/02/1753239/are-scrums-a-cancer?sdsrc=popbyskidbtmprev">Are Scrums a Cancer?</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>226<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/23/06/26/018234/34-of-ap-cs-students-couldnt-solve-this-java-based-2d-array-question?sdsrc=popbyskidbtmprev">34% of AP CS Students Couldn't Solve This Java-Based 2D Array Question</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>224<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/23/06/03/1514212/nyt-its-the-end-of-computer-programming-as-we-know-it?sdsrc=popbyskidbtmprev">NYT: It's the End of Computer Programming As We Know It</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>174<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/23/10/15/185245/ok-so-chatgpt-just-debugged-my-code-for-real?sdsrc=popbyskidbtmprev">'OK, So ChatGPT Just Debugged My Code. For Real'</a>
	</li>


</ul>
        </div>
    </section>
    <aside class="grid_8 st">
		<section class="grid_24 f">
			<div>
				<h5 class="tlnav"><a href="//hardware.slashdot.org/story/24/02/24/0541201/15-million-toshiba-laptop-adapters-recalled-over-burn-and-fire-risks?sdsrc=nextbtmnext">next</a></h5>
				<div class="grid_24">
	    
	    
            	 <span class="grid_7 tcenter"><img src="//a.fsdn.com/sd/topics/power_64.png" width="64" height="64" alt="Power"></span>
	    
					<p class="grid_12"><a href="//hardware.slashdot.org/story/24/02/24/0541201/15-million-toshiba-laptop-adapters-recalled-over-burn-and-fire-risks?sdsrc=nextbtmprev">15 Million Toshiba Laptop Adapters Recalled Over Burn and Fire Risks</a></p>
					<span class="grid_5 tcenter comments"><span class="cmntcnt_large fleft"><span class="slant"></span><span>14<span class="hide"> comments</span></span></span></span>
	
				</div>
			</div>
		</section>
		<section class="grid_24">
			<div>
				<h5 class="tlnav"><a href="//science.slashdot.org/story/24/02/24/0615242/5000-pound-satellite-successfully-deorbited-wednesday?sdsrc=prevbtmprev">previous</a></h5>
				<div class="grid_24">
	    
            	 <span class="grid_7 tcenter"><img src="//a.fsdn.com/sd/topics/space_64.png" width="64" height="64" alt="Space"></span>
	    
					<p class="grid_12"><a href="//science.slashdot.org/story/24/02/24/0615242/5000-pound-satellite-successfully-deorbited-wednesday?sdsrc=prevbtmprev">5,000-Pound Satellite Successfully 'Deorbited' Wednesday</a></p>

					<span class="grid_5 tcenter comments"><span class="cmntcnt_large fleft"><span class="slant"></span><span>20<span class="hide"> comments</span></span></span></span>
				</div>
			</div>
		</section>
	</aside>
</div>
	

</section>
			</div>
		</div>
<div id="bottom-masonry" class="jobbioapp"></div>
		<div class="row top-space">


			<div class="grid_24">
				<!-- 728px ad -->

				<div class="adwrap">
<div id='div-gpt-ad-728x90_c'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_c');});</script></div>
</div>
				<!-- end 728px ad -->
				<!-- Slashdot Deals 6 Best Sellers -->
					<div class="row deals-footer">
						<div class="units-8 indent-2 deals-wrapper">
						  <div class="deals-header"><h1>Slashdot Top Deals</h1></div>
						  <div id="deals-output">
							<script id="deals-template" type="text/x-handlebars-template">
							  {{#each deal}}
								<div class="deal">
								  <a href="{{urlPath permalink}}?&utm_source=slashdot.org&utm_medium=dealfeed-footerfeed&utm_campaign={{slug}}" target="_blank">
								  	<img src="{{main_image}}" alt="" />
								  </a>
								  <p class="title"><a href="{{urlPath permalink}}?&utm_source=slashdot.org&utm_medium=dealfeed-footerfeed&utm_campaign={{slug}}" target="_blank">{{title}}</a></p>
								  <p class="deal-price">{{centConversion price_in_cents}}</p>
								</div>
							  {{/each}}
							</script>
						  </div>
						</div>
					</div>
					<script>
						if ( sdAdBlockActive && window.is_euro_union === 0) {
                                                    bizx.cmp.ifConsent('', ['all'], function () {
							$.ajaxSetup({
								cache: true
							});
							$.getScript( "//a.fsdn.com/sd/js/scripts/min/deals-min.js", function(){
								runDealsWidget();
							});
                                                    });
						}
					</script>

					<!-- End Slashdot Deals 6 Best Sellers -->
				</div>
			</div>
		</div>
	</div>
	<!-- SMACKS: END COMMENTS SECTION -->
</div>
<!-- SMACKS: END COMMENTS CONTAINER -->


	

<script type="text/javascript">

$(function(){
$('#firehose-filter').
	focus(function(event){
		gFocusedText = this;
	}).
	blur(function(event){
		if ( gFocusedText === this ) {
			gFocusedText = null;
		}
	});


apply_updates_when(		'at-end', true);
});
</script>

<!-- body end --><!-- footer type=current begin -->

	
	</section>
	
	


	<footer id="fhft" class="grid_24 nf aoc">
		<div id="logo_nf" class="fleft">
			<a href="//slashdot.org"><span>Slashdot</span></a>
		</div>
		<nav role="firehose footer">
			
				
				
				
				

				
						<span class="ind"></span><a class="btn first" href="//developers.slashdot.org/comments.pl?sid=23236884&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Post</a>
				
				<a class="btn hide" id="footer_moderate_button">Moderate</a>
				<a class="btn hide" id="footer_moderatorhelp_button">Moderator Help</a>
				<a class="btn hide" id="footer_delete_button" title="Checked comments will be deleted.">Delete</a>
				<script>
					(function($){
						var old_moderate_btn = $("#discussion_moderate_button");
						if (old_moderate_btn.length) {
							var moderate_btn = $("#footer_moderate_button");
							moderate_btn.click(
								function(){old_moderate_btn.click()}
							);
							moderate_btn.removeClass('hide');
						}

						var old_moderatorhelp_btn = $("#discussion_moderatorhelp_button");
						if (old_moderatorhelp_btn.length) {
							var moderatorhelp_btn = $("#footer_moderatorhelp_button");
							moderatorhelp_btn.click(
								function(){old_moderatorhelp_btn.click()}
							);
							moderatorhelp_btn.attr(
								'href', old_moderatorhelp_btn.attr('href')
							);
							moderatorhelp_btn.removeClass('hide');
						}

						var old_delete_btn = $("#discussion_delete_button");
						if (old_delete_btn.length) {
							var delete_btn = $("#footer_delete_button");
							delete_btn.click(
								function(){old_delete_btn.click()}
							);
							delete_btn.removeClass('hide');
						}

						$('#discussion_buttons').addClass('hide');
					})(Slash.jQuery); // (function($){
				</script>
				<ul class="fleft">
					
						<li class="fleft selected">
							<span class="nbutton btn hide link reset" id="more_comments_button">
								<a href="#" onclick="D2.ajaxFetchComments(0,1); return false">
									<span id="more_comments_num_a" class="hide">Get more comments</span>
								</a>
							</span>
						</li>
					
					
						<li class="fleft">
							<span class="loadedcommentcnt">77</span> of <span class="totalcommentcnt">77</span> loaded
						</li>
					
				</ul>
				
					<script type="text/javascript">D2.finishLoading()</script>
				
			

			
			<ul class="fright submitstory">
					<li class="fright">
						<a href="/submit">Submit<span class="opt"> Story</span></a>
					</li>
			</ul>
		</nav>
		


	</footer>
	<section class="bq">
		<blockquote class="msg grid_24" cite="https://slashdot.org">
			<p>The world will end in 5 minutes.  Please log out.</p>
			<span class="slant"></span>
		</blockquote>
	</section>
	<footer id="ft" class="grid_24">
		<nav class="grid_10" role="footer">
			<ul>
				<li><a href="//slashdot.org/faq">FAQ</a></li>
				<li><a href="//slashdot.org/archive.pl">Story Archive</a></li>
				<li><a href="//slashdot.org/hof.shtml">Hall of Fame</a></li>
				<li><a href="https://slashdotmedia.com/advertising-and-marketing-services/" rel="nofollow">Advertising</a></li>
				<li><a href="https://slashdotmedia.com/terms-of-use/" rel="nofollow">Terms</a></li>
				<li><a href="https://slashdotmedia.com/privacy-statement/" rel="nofollow">Privacy Statement</a></li>
				<li><a href="//slashdot.org/faq/slashmeta.shtml">About</a></li>
				<li><a href="mailto:feedback@slashdot.org">Feedback</a></li>
				<li><a href="#" onclick="set_mobile_pref('mobile',1);return false;">Mobile View</a></li>
				<li><a href="//slashdot.org/blog">Blog</a></li>
				<li><a href="#" id="opt-out-link"></a></li>
				<li><button class="btn opt-out" id="opt-out-button" style="display:none">
					<img src="//a.fsdn.com/sd/ccpa-optout.png" alt="Icon">
					Do Not Sell My Personal Information</button></li>

			</ul>
		</nav>
		<br>
		
		<div class="grid_14 tright tm"><span class="nobr">Copyright &copy; 2024 Slashdot Media. All Rights Reserved.</span></div>

	<div class="modal-custom overlay-custom" id="ccpa-modal" style="max-width:100%">
		<div class="modal-content modal-content-ccpa">
	    	<span class="close" id="modal-close">&times;</span>
			<div class="modal-header" id="ccpa-modal-content-destination"></div>
		</div>
	</div>

	</footer>
	
	<div class="overlay"></div>
<div class="modal-box">
    <a href="#" id="close-modal">Close</a>
    <article class="modal-content">
    </article>
    <footer>
</div>




<div id="modal_cover" class="hide" onclick="hide_modal_box(); return false;"></div>
<div id="modal_box" class="hide">
      <div id="modal_box_content"></div>
      <header class="n">
                  <span class="fadeout"></span>
                  <span class="fadeoutfade"></span>
		  <span class="pf"><a class="ico close" onclick="hide_modal_box(); return false;" href="#"><span>Close</span></a></span>
		  <h3 class="pf"><div id="logo"><a href="//slashdot.org">Slashdot</a></div><span id="preference_title"></span></h3>
      </header>
</div>
	
	<!-- CCM Tag -->
<script type="text/javascript">
bizx.cmp.ifConsent('', ['all','bombora'], function() {
        /*global _ml:true, window */
        _ml = window._ml || {};
        _ml.eid = '771';

        var s = document.getElementsByTagName('script')[0], cd = new Date(), mltag = document.createElement('script');
        mltag.type = 'text/javascript'; mltag.async = true;
        mltag.src = '//ml314.com/tag.aspx?' + cd.getDate() + cd.getMonth() + cd.getFullYear();
        s.parentNode.insertBefore(mltag, s);
});
</script>
<!-- End CCM Tag -->

<script type="text/javascript">
window.google_analytics_uacct = "UA-199823890-2";

var _gaq = _gaq || [];





  _gaq.push(['_setAccount', 'UA-199823890-2']);
  _gaq.push(['_setDomainName', '.slashdot.org']);

	
		_gaq.push(['_addIgnoredRef', 'slashdot.org']);
	


  _gaq.push(['_setCustomVar', 1, 'User Type',  'Anon', 3]);		
	
	_gaq.push(['_setCustomVar', 2, 'Page','article2', 3]);

	



// track beta behavior for user
var betamatches = document.cookie.match(/betagroup=(-?\d+)/);

if(betamatches && betamatches[1]) {
  if(betamatches[1] == -1) {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','opt-out', 3]);
  } else {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','unredirected', 3]);
  }
}



  _gaq.push(['_trackPageview']);
  _gaq.push(['_trackPageLoadTime']);


if (window.is_euro_union === 0) {
bizx.cmp.ifConsent('', ['all'], function () {
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
});
}
</script>

<!-- CCM GA Push -->
<script>
    if (typeof _ml !== 'undefined' && _ml.us) {
        if (_ml.us.tp && _ml.us.tp.length > 0) {
            ga('set', 'dimension2', _ml.us.tp[0]);
        }
        if (_ml.us.pc && _ml.us.pc.length > 0) {
            ga('set', 'dimension7', _ml.us.pc[0]);
        }
        ga('set', 'dimension3', _ml.us.ind);
        ga('set', 'dimension4', _ml.us.cr);
        ga('set', 'dimension5', _ml.us.cs);
        ga('set', 'dimension6', _ml.us.dm);
        ga('set', 'dimension8', _ml.us.sn);
    }
</script>

<!-- Sticky Ads -->
<script type="text/javascript">
var topBannerViewed = false;
function initSticky(){
	if (SD.Ads.acceptable_ads_active) {
		return;
	}
		
	if($('#div-gpt-ad-728x90_a').length > 0 && $('#div-gpt-ad-300x250_a').length > 0 && window.outerWidth >= 1070 && !sdAdBlockActive){
	    $(window).scroll(function(){
		var y = $(document).scrollTop();
		var z =  y + window.outerHeight;
		var navOffset = 0;
		var offset = [
		    $('.nav-wrap').outerHeight(true),
		    $('.nav-secondary-wrap').outerHeight(true)
		];
		for(row in offset){
		    if(offset[row]) navOffset = navOffset + parseInt(offset[row]);
		}
		$('.adwrap-unviewed').each(function(){
		    var cls = 'adwrap-sticky';
		    var toggleCls = 'adwrap';
				//$('.banner-wrapper').css('height', $('.banner-contain').outerHeight());
		    if($(this).hasClass('railad')) {
			if(topBannerViewed){
			    var topPixels = $(this).offset().top;
			    navOffset += $('.adwrap').outerHeight();
			    if(y >= topPixels && y >= navOffset){
				$('#slashboxes').css('top', 0).css('position','sticky').css('right',13);
			    } else {
				$('#slashboxes').removeAttr('style');
			    }
			}
			return;
		    }
		    var topPixels = $(this).offset().top;
		if(y >= topPixels && y >= navOffset){
			$(this).addClass(cls);
			$(this).removeClass('adwrap');
					if(cls == 'adwrap-sticky') { //top banner
			    topBannerViewed = false;
						$('#slashboxes').css('top',$(this).outerHeight() || 0).css('position','sticky').css('right',13);
					}
		if(topBannerViewed) {
			    //console.log('hereeee');
						$('#slashboxes').css('top', 0).css('position','sticky').css('right',13);
					}
		    }else{
									//console.log('topBannerViewed', topBannerViewed);
			$(this).removeClass(cls);
			$(this).addClass(toggleCls);
			$('#slashboxes').removeAttr('style');
		    }
		});
			if($('.adwrap-viewed-banner').length > 0){
			  //console.log('ads topBanner displayed');
				topBannerViewed = true;
				$('.adwrap-viewed-banner').removeClass('adwrap-unviewed').removeClass('adwrap-sticky').addClass('adwrap');
			}
	    if($('.adwrap-viewed-railad').length > 0){
							//console.log('ads sidebar displayed');
		    $('.adwrap-viewed-railad').removeClass('adwrap-unviewed').removeClass('adwrap-railad-sticky');
				$('#slashboxes').removeAttr('style');
			}
	    });
	}
}
bizx.cmp.ifConsent('', ['all', 'google-ads'], function () {
	if (!sdAdBlockActive) {
		initSticky();
	}
	if (SD.Ads.acceptable_ads_active) {
		// similar to remove* code above in initSticky
		$('.adwrap-unviewed').removeClass('adwrap-unviewed').removeClass('adwrap-sticky').addClass('adwrap').removeClass('adwrap-railad-sticky');
		$('#slashboxes').removeAttr('style');
	}
});
</script>

<!-- Piwik -->
<script type="text/javascript">
  var _paq = _paq || [];
  _paq.push(["setCookieDomain", "*.slashdot.org"]);
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
function initPiwikAndNels() {
  (function() {
    var u="//analytics.slashdotmedia.com/";
    _paq.push(['setTrackerUrl', u+'sd.php']);
    _paq.push(['setSiteId', 40]);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'sd.js'; s.parentNode.insertBefore(g,s);
  })();

    if(window.location.pathname == '/'){
        var nelId = (location.search.split('nel_id=')[1] || '').split('&')[0];
        var url = '/ajax.pl?op=nel';
        if(nelId){
            url += '&nel_id='+nelId;
        }
        $.ajax({
            url: url,
            type: 'POST',
            success: function(html){
                $('#firehoselist article').eq(1).after(html);
            }
        });
    }
    //announcement NEL
    if(document.getElementById('announcementText')){
      $('#announcementText').hide();
      var hlUrl = '/ajax.pl?op=hl_nel';
      if(nelId){
        hlUrl += '&nel_id='+nelId;
      }
      $.ajax({
        url: hlUrl,
        type: 'POST',
        success: function(html){
          if(html.length < 10){
            $('#announcementText').show();
            return;
          }
          $('#announcementText').html(html).show();
        },
        error: function () {
          $('#announcementText').show();
        }
      });
    }
}
bizx.cmp.ifConsent('', ['storage', 'measurement'], initPiwikAndNels);
</script>


<script type="text/javascript">
_linkedin_data_partner_id = "113712";
</script><script type="text/javascript">
if (window.is_euro_union === 0) {
bizx.cmp.ifConsent('', ['all'], function (){
    (function(){var s = document.getElementsByTagName("script")[0];
    var b = document.createElement("script");
    b.type = "text/javascript";b.async = true;
    b.src = "https://snap.licdn.com/li.lms-analytics/insight.min.js";
    s.parentNode.insertBefore(b, s);})();
    });
}
</script>
<noscript>
<img height="1" width="1" style="display:none;" alt="" src="https://dc.ads.linkedin.com/collect/?pid=113712&fmt=gif" />
</noscript>

<!-- Datonics -->
<script type="text/javascript">
if (window.is_euro_union === 0) {
    bizx.cmp.ifConsent('', ['all'], function () {
        bizx.cmp.embedScript("//ads.pro-market.net/ads/scripts/site-143573.js", true);
    });
}
</script>
	<script id="after-content" type="text/javascript">
(function( $, fn, console ){
	$ && fn && $(function(){ fn($, console); });
})(window.jQuery, window.pageload_done, window.console);
</script>
	
	<script type='text/javascript'>
	if(!document.location.href.match(/source=autorefresh/)) {
		document.write('<img src="//slashdot.org/images/js.gif?770">');
	}
</script>
<noscript>
	<img src="//slashdot.org/images/njs.gif?182">
</noscript>
	<div class="busy genericspinner hide"><span>Working...</span></div>

	    <script>
            var regular_opt_out_link = true;

            if (bizx.cmp.show_do_not_sell()) {
                regular_opt_out_link = false;
                 document.getElementById('opt-out-button').setAttribute('style', 'display:inline');
            }

            if (window.is_euro_union === 1) {
                regular_opt_out_link = false;
                var elem = '<a href="#" title="Privacy Choices" onclick="bizx.cmp.promptConsent(); return false;">Privacy Choices</a>';
                document.getElementById('opt-out-link').innerHTML = elem;
            }

            if (regular_opt_out_link == true) {
                var elem = '<a href="https://slashdotmedia.com/opt-out-choices" title="Opt Out" rel="nofollow">Opt Out</a>';
                document.getElementById('opt-out-link').innerHTML = elem;
            }
            var cmp_modal = document.getElementById('ccpa-modal');
            var btn = document.getElementById('opt-out-button');
            var span = document.getElementById('modal-close');

            btn.onclick = function() {
            	cmp_modal.style.display = 'block';
            };

            span.onclick = function() {
            	cmp_modal.style.display = 'none';
            };

         </script>

	<script>
		if(typeof(Storage)!=="undefined"){
			window.scrollTo(0,sessionStorage.scrollPos);
				$(window).scroll(function () {
				//You've scrolled this much:
				sessionStorage.scrollPos = $(window).scrollTop();
			});
		}
		$(function(){
			$('a').click(function(){
				delete sessionStorage.scrollPos;
			})
		});
		// window.onbeforeunload = function () {
		// 	console.log('bakc button clicked');
		// 	delete sessionStorage.scrollPos;
		// }
		window.onpopstate=function() {
			delete sessionStorage.scrollPos;
		}
	</script>
	

	
		<!-- 1x1 story page -->
		<div id='div-gpt-ad-1x1'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-1x1');});</script></div>
	

	</body>
	</html>


	<!-- footer type=current end -->