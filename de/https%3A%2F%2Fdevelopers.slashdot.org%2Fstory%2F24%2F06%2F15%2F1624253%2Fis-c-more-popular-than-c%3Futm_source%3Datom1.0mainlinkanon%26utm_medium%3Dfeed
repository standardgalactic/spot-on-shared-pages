<!-- html-header type=current begin -->
	
	<!DOCTYPE html>
	
	<html lang="en">
	<head>
	<!-- Render IE9 -->
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

	

	<script id="before-content" type="text/javascript">
(function () {
    if (typeof window.sdmedia !== 'object') {
         window.sdmedia = {};
    }
    if (typeof window.sdmedia.site !== 'object') {
        window.sdmedia.site = {};
    }

    var site = window.sdmedia.site;
    site.rootdir = "//slashdot.org";
}());

var pageload = {
	pagemark: '781217723360654634',
	before_content: (new Date).getTime()
};
function pageload_done( $, console, maybe ){
	pageload.after_readycode	= (new Date).getTime();
	pageload.content_ready_time	= pageload.content_ready - pageload.before_content;
	pageload.script_ready_time	= pageload.after_readycode - pageload.content_ready;
	pageload.ready_time		= pageload.after_readycode - pageload.before_content;
	// Only report 1% of cases.
	maybe || (Math.random()>0.01) || $.ajax({ type: 'POST', data: {
		op: 'page_profile',
		pagemark: pageload.pagemark,
		dom: pageload.content_ready_time,
		js: pageload.script_ready_time
	} });
}
</script>
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
	
		<title>Is C++ More Popular Than C? - Slashdot</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	  
		<meta name="description" content="Last month TIOBE announced its estimate that the four most popular programming languages were: 
1.  Python
2. C
3. C++
4.  Java 
But this month C++ &#34;overtook&#34; C for the first time, TIOBE announced, becoming (according to the same methodology) the #2 most popular programming language, with C dropping...">
	    
		<meta name="twitter:card" content="summary">
		<meta name="twitter:site" content="@slashdot">
		<meta name="twitter:domain" content="developers.slashdot.org">
		<meta property="og:url" content="https://developers.slashdot.org/story/24/06/15/1624253/is-c-more-popular-than-c?sbsrc=md">
	    
		<meta property="og:title" content="Is C++ More Popular Than C? - Slashdot">
		<meta property="og:description" content="Last month TIOBE announced its estimate that the four most popular programming languages were: 
1.  Python
2. C
3. C++
4.  Java 
But this month C++ &#34;overtook&#34; C for the first time, TIOBE announced, becoming (according to the same methodology) the #2 most popular programming language, with C dropping...">
	  
	
	
		<meta property="og:image" content="https://a.fsdn.com/sd/topics/programming_64.png">
	
		<meta property="fb:admins" content="100000696822412">
		<meta property="fb:page_id" content="267995220856">
	
		<meta name="viewport" content="width=1000, user-scalable=yes, minimum-scale=0, maximum-scale=10.0" />
		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black">
	
		<link rel="canonical" href="https://developers.slashdot.org/story/24/06/15/1624253/is-c-more-popular-than-c">
		
		<link rel="alternate" media="only screen and (max-width: 640px)" href="https://m.slashdot.org/story/429635" >
	

		<link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/classic.ssl.css?1d97ab7621da10e3" >
		<!--[if IE 8]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie8-classic.ssl.css?1d97ab7621da10e3" ><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie7-classic.ssl.css?1d97ab7621da10e3" ><![endif]-->
	
	
	



	
	<!--  -->

	
	

	
	<!-- SMACKS: NEW CSS -->
	<link rel="stylesheet" href="//a.fsdn.com/sd/css/app.css?1d97ab7621da10e3">

	<script src="//a.fsdn.com/con/js/sftheme/cmp2.js?2024-01"></script>
	<script src="https://slashdot.org/country.js"></script>
	<script>
		window.bizx.cmp.init({
			cmp_id: 12126,
			geo: window,
			gam_gdpr_technical_delivery: true,
			
		});
	</script>
	<link rel="stylesheet" href="//a.fsdn.com/con/css/sftheme/sandiego/cmp.css?2020-06-11" type="text/css">

	<script type='text/javascript'>
var _gaq = _gaq || [];
</script>

<script>
window.SD = {};
window.SD.Ads = {};

bizx.cmp.ifConsent('', ['all'], function () {
    var bt = 'https://btloader.com/tag?o=5098683085881344&upapi=true';
    bizx.cmp.embedScript(bt, true);
    window.addEventListener('AcceptableAdsInit', function (e) {
      if(e.detail) {
        console.log('acceptable ads on');
        SD.Ads.acceptable_ads_active = true;
      } else {
        console.log('acceptable ads off');
        SD.Ads.acceptable_ads_active = false;
      }
    });
});
</script>



         
   
   

<script type="text/javascript" id="pbjs_script" data-dom="https://d3tglifpd8whs6.cloudfront.net"  src="https://d3tglifpd8whs6.cloudfront.net/js/prebid/slash-story/slash-story.min.js"></script>
<script type='text/javascript'>
    /*global performance */
    var googletag = window.googletag || {};
    googletag.cmd = googletag.cmd || [];

		window.SD.Ads.slotsById = {};
		window.SD.Ads.idsByPath = {};

		window.SD.Ads.visibleTime = {};
		window.SD.Ads.Helpers = {};

		//window.SD = SD;

    bizx.cmp.ifConsent({purposes: 'all', vendors: 'prebid'}, function(){
        window.bizxPrebid.Ads.initPrebid(window.bizxPrebid.adUnits);
    }, function() {
		// no 'prebid' consent (e.g. region without prebid consent string support) but try GPT directly
		bizx.cmp.ifConsent({purposes: 'all', vendors: 'google-ads'}, function () {
			bizx.cmp.embedScript('https://securepubads.g.doubleclick.net/tag/js/gpt.js');
		});
	});
</script>

<!-- prep GPT ads -->
<script type='text/javascript'>
(function() {
	function page_type (loc) {
		/*
		only four page types:
		- Story
		- Poll
		- Homepage (/ only)
		- Other (but AdOps wants 'Homepage' again)
		*/
		var path = loc.pathname;
		var just_the_root = /^\/?$/.test(path);
		var story_or_poll = /^\/(story(?=\/)|submission(?=\/)|poll(?=\/|Booth|s\b))/i.exec(path);

		var page_type = just_the_root ? 'homepage'
			: story_or_poll ? story_or_poll[1]
				: 'other'

		// exceptions
		if (page_type.toLowerCase() === 'submission')
			page_type = 'story'; // submissions are like stories, right?
		else if (page_type.toLowerCase() === 'other')
			page_type = 'homepage'; // this one might move out of here

		return page_type;
	}

	function page_section(loc) {
		//var greek = ['alpha', 'beta', 'gamma', 'delta'].join('|');
		//var hostwise = '^([a-z]+)(?:-(?:'+greek+'))?\\.(?:slashdot\\.org|\\.xb\\.sf\\.net)$';
		var pathwise = '^/(?:(recent|popular|blog)|stories/([^/]+))';
		var rootwise = '^\/?$';

		//var hostwisely = new RegExp(hostwise,'i').exec(loc.hostname);
		var pathwisely = new RegExp(pathwise, 'i').exec(loc.pathname);
		var rootwisely = new RegExp(rootwise, 'i').exec(loc.pathname);

		var section = (rootwisely && 'homepage')
			|| (pathwisely && (pathwisely[1] || pathwisely[2]))
			|| ''
		;

		return section.replace(/[^_a-z]/ig, '');
	}

	function single_size(size) {
		return '' + size[0] + 'x' + size[1];
	}

	function sz_sz(sz) {
		var str = '';
		var sizes = [];
		if (sz[0] instanceof Array) {
			for (size in sz) {
				sizes.push(single_size(sz[size]));
			}
			return sizes.join(',');
		} else {
			return single_size(sz);
		}
	}

	function unique_tpc_array(array1, array2) {
		var j = array1.concat(array2);
		j.forEach(function (v, i, a) {
			a[i] = v.replace(/[^_a-z]/ig, '');
		});
		return j.filter(function (v, i, a) {
			return v != '' && a.indexOf(v) === i;
		});
	}

	/* LEGEND:
		- 'sz' = "size"
		- 'npt' = "no page type" in ad unit name
	*/
	var tags = {
		'728x90_A': {'sz': [[728, 90], [970, 90], [970, 250], [980, 66]]},
		'728x90_B': {'sz': [728, 90]},
		'728x90_C': {'sz': [728, 90], 'skip': {'homepage': 1}},
		'HubIcon_200x90_A': {'sz': [[200, 90], [220, 90]]},
		'PowerSwitch_980x66_A': {'sz': [980, 66], 'skip': {'homepage': 1}},
		'PollPeel': {'sz': [200, 90], 'skip': {'homepage': 1}},
		//'VideoWidget_300x250': { 'sz': [300, 250], 'npt': 1 },
		'300x250_A': {'sz': [[300, 250], [300, 600], [300, 1050]]},
		'300x250_B': {'sz': [[300, 250], [300, 600]]},
		'300x250_C': {'sz': [[300, 250], [300, 600]]},
		'300x250_D': {'sz': [[300, 250], [300, 600]]},
		'Pulse_300x600_A': {'sz': [300, 600]},
		//'Polls_Detail_300x250_A': { 'sz': [[300, 250], [300, 600]], 'npt': 1 },
		//'Poll_300x250_A': { 'sz': [[300, 250], [300, 600]], 'npt': 1 },
		//'SD_Story_1x1': { 'sz': [1, 1] },
		'1x1': {'sz': [1, 1]}
	};

	//var network_path = '/41014381/Slashdot/';
	var network_path = '/41014381/Slashdot/';
	var tag_name_prefix = 'SD';
	var tag_name_linkage = '_';
	var tag_name_pagetype = page_type(location);
	var tag_topic = page_section(location);
	if (tag_name_pagetype == 'poll') {
		tag_name_pagetype = 'Poll';
	}
	var before_tag_pagetyped = network_path
		+ tag_name_prefix
		+ tag_name_linkage
		+ tag_name_pagetype
		+ tag_name_linkage
	;
	var before_tag_pagetypeless = network_path
		+ tag_name_prefix
		+ tag_name_linkage
		/* + tag_name_pagetype */
		/* + tag_name_linkage */
	;

		//can be safely called
		googletag.cmd.push(function () {

			function remove_sticky_top() {
				setTimeout(function () {
					$('#div-gpt-ad-728x90_a').parent('div').addClass('adwrap-viewed-banner');
					$('#div-gpt-ad-728x90_a').addClass('viewableImpression');
				}, 1000);
			}

			function remove_sticky_railad() {
				setTimeout(function () {
					$('#slashboxes .adwrap-unviewed').addClass('adwrap-viewed-railad');
					$('.railad').addClass('viewableImpression');
				}, 1000);
			}

			function viewable_imp(slot) {
				for (var i in slot) {
					remove_sticky_top();
					remove_sticky_railad();
					if (typeof slot[i] !== 'string') continue;
					switch (slot[i]) {
						//case "/41014381/Slashdot/SD_homepage_728x90_A":
						//case "/41014381/Slashdot/SD_story_728x90_A":
						//case "/41014381/Slashdot/SD_Poll_728x90_A":
						//case "/41014381/Slashdot/SD_homepage_728x90_Ref_A":
						//case "/41014381/Slashdot/SD_story_728x90_Ref_A":
						//case "/41014381/Slashdot/SD_Poll_728x90_Ref_A":
						//remove_sticky_top();
						//break;
						//case "/41014381/Slashdot/SD_homepage_300x250_A":
						//case "/41014381/Slashdot/SD_story_300x250_A":
						//case "/41014381/Slashdot/SD_Poll_300x250_A":
						//case "/41014381/Slashdot/SD_homepage_300x250_Ref_A":
						//case "/41014381/Slashdot/SD_story_300x250_Ref_A":
						//case "/41014381/Slashdot/SD_Poll_300x250_Ref_A":
						//remove_sticky_railad();
						//break;
					}
					//if(slot[i] === "/41014381/Slashdot/SD_homepage_728x90_A") remove_sticky_top();
					//if(slot[i] === "/41014381/Slashdot/SD_homepage_300x250_A") remove_sticky_railad();
				}
			}

			function define_me_a_slot(tag) {
				if (tags[tag].skip && tags[tag].skip[tag_name_pagetype])
					return;
				var sandbox_regex = /\.xb\.sf\.net$/i;
				var full_name = tags[tag].npt  // "no page type"
					? before_tag_pagetypeless + tag
					: before_tag_pagetyped + tag
				;
				var div_id = 'div-gpt-ad-' + tag.toLowerCase();
				// extend jQuery and get URL query params
				jQuery.extend({
					getQueryParameters: function (str) {
						return (str || document.location.search).replace(/(^\?)/, '').split("&").map(function (n) {
							return n = n.split("="), this[n[0]] = n[1], this
						}.bind({}))[0];
					}
				});

				var queryParams = $.getQueryParameters();

				if (queryParams.source === 'autorefresh') {
					full_name = full_name.replace(/(\d+x\d+)/, '$1_Ref');
					//console.log('TAG NAME: ', full_name);
				}

				var slot = googletag.defineSlot(
					full_name,
					tags[tag].sz,
					div_id
				);

				service = slot.addService(googletag.pubads());

				window.SD.Ads.slotsById[div_id] = slot;
				window.SD.Ads.idsByPath[full_name] = div_id;

				service.setTargeting('sz', tags[tag].sz);

				
				var frontend_tpc = tag_topic.split(",");
				var backend_tpc = [ "programming", "developers" ];

				var tpc_final = unique_tpc_array(frontend_tpc, backend_tpc);
				service.setTargeting('tpc', tpc_final);
				if (location.hostname.match(sandbox_regex)) {
					service.setTargeting('test', 'adops');
				}

			}

		for (tag in tags) {
			define_me_a_slot(tag, false);
		}


			googletag.pubads().addEventListener('slotVisibilityChanged', window.SD.Ads.visibilityChangedTracker);


		googletag.pubads().addEventListener('impressionViewable', function(event) {
			viewable_imp(event.slot);
		    });

                googletag.pubads().setTargeting('requestSource', 'GPT');
		googletag.pubads().enableAsyncRendering();
		

		googletag.pubads().collapseEmptyDivs();
		window.bizxPrebid.SAFEFRAMES = true;
		window.SD.Ads.setupAdRefresh();
		bizxPrebid.Ads.pushToGoogle();
		googletag.enableServices();
	});
})();


/* Ad-Refresh code */
window.SD.Ads.visibilityChangedTracker = function(event) {
	var id = event.slot.getSlotElementId();
	if (!window.SD.Ads.visibleTime.hasOwnProperty(id)) {
		window.SD.Ads.visibleTime[id] = {
			visible: false,
			prevVisibleTotal: 0,
			wasVisibleBeforePageBgd: false,
			reloadCount: 0
		};
	}
	var timeinfo = window.SD.Ads.visibleTime[id];
	if (event.inViewPercentage >= 50 && !document.hidden) {
		if (!timeinfo.visible) {
			timeinfo.visible = performance.now();
		}
	} else {
		if (timeinfo.visible) {
			timeinfo.prevVisibleTotal += performance.now() - timeinfo.visible;
			timeinfo.visible = false;
		}
	}
};

window.SD.Ads.setupAdRefresh = function() {
	document.addEventListener('visibilitychange', function () {
		for (var id in window.SD.Ads.visibleTime) {
			if (window.SD.Ads.visibleTime.hasOwnProperty(id)) {
				var timeinfo = window.SD.Ads.visibleTime[id];
				if (document.hidden) {
					timeinfo.wasVisibleBeforePageBgd = !!timeinfo.visible;
					if (timeinfo.visible) {
						timeinfo.prevVisibleTotal += performance.now() - timeinfo.visible;
						timeinfo.visible = false;
					}
				} else if (!document.hidden && timeinfo.wasVisibleBeforePageBgd) {
					timeinfo.visible = performance.now();
				}
			}
		}
	}, false);

	// after 30 sec, start checking every second for reload
	var LIMIT_MS = 30000;
	setTimeout(function () {
		//
		setInterval(function () {
			if (document.hidden) {
				return;
			}
			for (var id in window.SD.Ads.visibleTime) {
				if (window.SD.Ads.visibleTime.hasOwnProperty(id)) {
					var timeinfo = window.SD.Ads.visibleTime[id];
					if (timeinfo.visible &&
						timeinfo.prevVisibleTotal + (performance.now() - timeinfo.visible) >= LIMIT_MS &&
						timeinfo.reloadCount < 50
					) {
						timeinfo.reloadCount++;
						timeinfo.visible = false;
						timeinfo.prevVisibleTotal = 0;
						window.SD.Ads.Helpers.refreshBids([id]);
					}
				}
			}
		}, 1000);
	}, LIMIT_MS);
};

window.SD.Ads.Helpers.refreshBids = function (reloadIds) {
		console.log('AD REFRESH: refreshBids', reloadIds);
		pbjs.que.push(function () {
			for (var i = reloadIds.length-1; i >= 0; i--) {
				var id = reloadIds[i];
				// clear out winner status from earlier auctions
				if (bizxPrebid.Ads.prebidWinners[id]) {
					delete bizxPrebid.Ads.prebidWinners[id];
				}
				// if has complement (hubicon), remove it since they are just house ads and can cause funky layouts if this leaderboard is refreshed to a different size
				var path = window.SD.Ads.slotsById[id].getAdUnitPath();
				/*var complement = gptadComplements[path];
				if (complement) {
					var complement_shortname = complement[0];
					var complement_path = "/41014381/SD/" + complement_shortname;
					var slot = window.SD.Ads.slotsById[window.SD.Ads.idsByPath[complement_path]];
					if (slot) {
						googletag.destroySlots([slot]);
						var $wrappedAd = $(window.SD.Ads.Helpers.getContainerIDFromPath(complement_path));
						$wrappedAd.remove();
						delete gptadComplements[path];
					}
				}*/

			}

			pbjs.requestBids({
				timeout: window.bizxPrebid.PREBID_TIMEOUT,
				adUnitCodes: reloadIds,
				bidsBackHandler: function () {
					var reloadSlots = reloadIds.map(function(id) { return window.SD.Ads.slotsById[id]; });

					// clear out previous sizing attrs, as they may change after refresh
/*
					for (var i = 0; i < reloadSlots.length; i++) {
						var $wrappedAd = $(window.SD.Ads.Helpers.getContainerIDFromPath(reloadSlots[i].getAdUnitPath()));
						var classes = $wrappedAd.attr('class').split(' ');
						for (var j = 0; j < classes.length; j++) {
							if (classes[j].indexOf('sz_') >= 0) {
								$wrappedAd.removeClass(classes[j]);
							}
						}
					}
*/
					pbjs.setTargetingForGPTAsync(reloadIds);
					googletag.pubads().refresh(reloadSlots);
				}
			});
		});
	}
</script>

<!-- CrossPixel -->
<script type="text/javascript">
if (window.is_euro_union === 0) {
    bizx.cmp.ifConsent('', ['all'], function(){
        try{(function(){ var cb = new Date().getTime(); var s = document.createElement("script"); s.defer = true; s.src = "//tag.crsspxl.com/s1.js?d=2397&cb="+cb; var s0 = document.getElementsByTagName('script')[0]; s0.parentNode.insertBefore(s, s0); })();}catch(e){}
    });
}
</script>




<!-- AdBlock Check -->
<script>
var sdAdBlockActive = true;
</script>
<script async src="//a.fsdn.com/sd/js/scripts/adsbanner.js?1d97ab7621da10e3"></script>
</head>

<body class="anon firehose ">

	
	<script src="//a.fsdn.com/sd/all-minified.js?1d97ab7621da10e3" type="text/javascript"></script>
	
	
	<script type="text/javascript">
(function(){
var regexp=/\s*(?:\d+|many)\s+more\s*/i;

	
	var auto_more_count = 1;

	function auto_more(){
		var $more_link = $('#more-experiment a');
		$more_link.each(function(){
			var $lastitem = $('#firehoselist>article.fhitem:visible:last');
			if ( Bounds.intersect(window, $lastitem) ) {
			
			
				!--auto_more_count && (auto_more=undefined);
				// don't allow a call till the next paginate gets built and |more_possible|
				$(document).unbind('scroll', call_auto_more);
			}
		});
	};

	function call_auto_more(){ auto_more && auto_more(); }
	

$('#more-experiment a').
	live('more-possible', function( event ){
		var $more_link=$(this);
		if ( regexp.test($more_link.text()) ) {
		
			$(document).bind('scroll', call_auto_more);
		} else {
			$(document).unbind('scroll', call_auto_more);
		
		}
	});
})();
</script>
	<!--[if lt IE 9]><script src="//a.fsdn.com/sd/html5.js"></script><![endif]-->
	
	
	<!-- index2_variant ||-->
		<script>
	if (window.is_euro_union === 0) {
            bizx.cmp.ifConsent('', ['all'], function () {
                (function (s,o,n,a,r,i,z,e) {s['StackSonarObject']=r;s[r]=s[r]||function(){
                (s[r].q=s[r].q||[]).push(arguments)},s[r].l=1*new Date();i=o.createElement(n),
                z=o.getElementsByTagName(n)[0];i.async=1;i.src=a;z.parentNode.insertBefore(i,z)
                })(window,document,'script','https://www.stack-sonar.com/ping.js','stackSonar');
                stackSonar('stack-connect', '66');
            });
        }
	</script>
        <!-- jobbio !-->

        <script type="text/javascript">
        bizx.cmp.ifConsent('', ['all'], function () {
        var j_script = document.createElement('script')
        j_script.setAttribute('src', 'https://widgets.jobbio.com/partner_fluid_widgets_v1.6.1/display.min.js')
        j_script.setAttribute('id','jobbio-display-script')
        j_script.setAttribute('async','')
        j_script.onload = function handle(){
        if (document.getElementById('bottom-masonry')){
            jobbio_display.widget({
                slug: 'slashdot-jobs',
                container: 'bottom-masonry',
                style: 'masonry',
                count: 6,
                type: 'multiple',
                content: 'jobs',
                searchTerm: '',
            });
        }

        jobbio_display.widget({
            slug: 'slashdot-jobs',
            container: 'horizontal',
            style: 'horizontal',
            count: 4,
            type: 'multiple',
            content: 'jobs',
            searchTerm: '',
        })
        if (document.getElementById('sidebar-j')){
            jobbio_display.widget({
                slug: 'slashdot-jobs',
                container: 'sidebar-j',
                style: 'sidebar',
                count: 6,
                type: 'multiple',
                content: 'jobs',
                searchTerm: '',
            });
        }

        }
        document.head.appendChild(j_script);
        })
        </script>
		<!-- html-header type=current end --><!-- header type=current begin -->
	
	
	
	<link rel="top"       title="News for nerds, stuff that matters" href="//slashdot.org/" >
<link rel="search"    title="Search Slashdot" href="//developers.slashdot.org/search.pl">
<link rel="alternate" title="Slashdot RSS" href="https://rss.slashdot.org/Slashdot/slashdotDevelopers" type="application/rss+xml">
	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">

	
		<div id="top_parent"></div>
		<a name="topothepage"></a>
		
		<div class="container">
			<div class="nav-wrap">
				<nav class="nav-primary" role="navigation" aria-label="Global Navigation">
					<h1 class="logo">
	<a href="//slashdot.org"><span>Slashdot</span></a>
</h1>

<ul class="nav-site">
	<li><a href="//slashdot.org"><i class="icon-book" title="Stories"></i><span>Stories</span></a></li>
	<li>
		<ul class="filter-firehose">
			<li class="nav-label">Firehose <i class="icon-angle-right"></i></li>
			<li><a href="//slashdot.org/recent">All</a></li>
			<li><a href="//slashdot.org/popular">Popular</a></li>
		</ul>
	</li>
	<li><a href="//slashdot.org/polls"><i class="icon-chart-bar" title="Polls"></i><span>Polls</span></a></li>

	<!--
	<li><a href="//ask.slashdot.org"><i class="icon-question-circle"></i><span>Ask</span></a></li>
	
	<li><a href="//events.slashdot.org"><i class="icon-calendar"></i><span>Events</span></a></li>
	-->
	<li><a href="https://slashdot.org/software/"><i class="sd-mini"></i> <span>Software</span></a></li>
        <li><a href="//slashdot.org/content/"><span>Thought Leadership</span></a></li>
        <li><a href="//slashdot.org/jobs" rel="nofollow"><span>Jobs</span></a></li>
</ul>
<a href="//slashdot.org/submission" class="btn btn-success">Submit</a>
				</nav>
				<nav class="nav-user" role="navigation" aria-label="user access and account controls">
					<form id="search" class="form-inline nav-search-form" method="get" action="//slashdot.org/index2.pl">
<!-- //developers.slashdot.org/index2.pl" -->
	<div class="form-group">
		<label class="sr-only" for="sitesearch">Search Slashdot</label>
		<div class="input-group">
			<input type="text" id="" class="" name="fhfilter" value="" placeholder="Search">
		</div>
	</div>
	<button type="submit" class="btn icon-search"></button>
</form>
<ul class="user-access">
	
		
			<li >
				<a href="//slashdot.org/my/login"  onclick="show_login_box(); return false;"><i class="icon-login"></i><span> Login</span></a>
				
			</li>
		
	
		
			<li class="nav-label">or</li>
		
	
		
			<li >
				<a href="//slashdot.org/my/newuser"  ><i class="icon-user-add"></i><span> Sign up</span></a>
				
			</li>
		
	
</ul>
				</nav>
			</div>
			<div class="nav-secondary-wrap">
				<nav class="nav-secondary" role="secondary-navigation">
	<ul>
		<li class="nav-label">Topics: </li>
		<li><a href="//devices.slashdot.org">Devices</a></li>
		<li><a href="//build.slashdot.org">Build</a></li>
		<li><a href="//entertainment.slashdot.org">Entertainment</a></li>
		<li><a href="//technology.slashdot.org">Technology</a></li>
		<li><a href="//slashdot.org/?fhfilter=opensource">Open Source</a></li>
		<li><a href="//science.slashdot.org">Science</a></li>
		<li><a href="//yro.slashdot.org">YRO</a></li>
		<!-- <li><a href="//slashdot.org/topics.pl">more...</a></li> -->
	</ul>
</nav>
<nav class="nav-social" role="social navigation">
	<ul>
		<li class="nav-label">Follow us:</li>
		<li><a href="https://rss.slashdot.org/Slashdot/slashdotMain" target="_blank" rel="nofollow"><i class="icon-rss-squared"></i><span class="sr-only">RSS</span></a></li>
		<li><a href="https://www.facebook.com/slashdot" target="_blank" rel="nofollow"><i class="icon-facebook-squared"></i><span class="sr-only">Facebook</span></a></li>
		<li><a href="https://www.linkedin.com/company/slashdot" target="_blank" rel="nofollow"><i class="icon-linkedin-squared"></i><span class="sr-only">LinkedIn</span></a></li>
		<li><a href="https://twitter.com/slashdot" target="_blank" rel="nofollow"><i class="icon-twitter-squared"></i><span class="sr-only">Twitter</span></a></li>
		<li><a href="https://www.youtube.com/channel/UCsW36751Gy-EAbHQwe9WBNw" target="_blank" rel="nofollow"><i class="icon-youtube-squared">
                    <!-- width="1792" height="1792" -->
                    <svg viewBox="0 260 1792 1260" xmlns="http://www.w3.org/2000/svg"><path d="M711 1128l484-250-484-253v503zm185-862q168 0 324.5 4.5t229.5 9.5l73 4q1 0 17 1.5t23 3 23.5 4.5 28.5 8 28 13 31 19.5 29 26.5q6 6 15.5 18.5t29 58.5 26.5 101q8 64 12.5 136.5t5.5 113.5v176q1 145-18 290-7 55-25 99.5t-32 61.5l-14 17q-14 15-29 26.5t-31 19-28 12.5-28.5 8-24 4.5-23 3-16.5 1.5q-251 19-627 19-207-2-359.5-6.5t-200.5-7.5l-49-4-36-4q-36-5-54.5-10t-51-21-56.5-41q-6-6-15.5-18.5t-29-58.5-26.5-101q-8-64-12.5-136.5t-5.5-113.5v-176q-1-145 18-290 7-55 25-99.5t32-61.5l14-17q14-15 29-26.5t31-19.5 28-13 28.5-8 23.5-4.5 23-3 17-1.5q251-18 627-18z"/></svg>
                </i><span class="sr-only">Youtube</span></a></li>
		<li><a href="https://mastodon.cloud/@slashdot" target="_blank" rel="me nofollow"><i class="icon-mastodon-squared">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M433 179.11c0-97.2-63.71-125.7-63.71-125.7-62.52-28.7-228.56-28.4-290.48 0 0 0-63.72 28.5-63.72 125.7 0 115.7-6.6 259.4 105.63 289.1 40.51 10.7 75.32 13 103.33 11.4 50.81-2.8 79.32-18.1 79.32-18.1l-1.7-36.9s-36.31 11.4-77.12 10.1c-40.41-1.4-83-4.4-89.63-54a102.54 102.54 0 0 1-.9-13.9c85.63 20.9 158.65 9.1 178.75 6.7 56.12-6.7 105-41.3 111.23-72.9 9.8-49.8 9-121.5 9-121.5zm-75.12 125.2h-46.63v-114.2c0-49.7-64-51.6-64 6.9v62.5h-46.33V197c0-58.5-64-56.6-64-6.9v114.2H90.19c0-122.1-5.2-147.9 18.41-175 25.9-28.9 79.82-30.8 103.83 6.1l11.6 19.5 11.6-19.5c24.11-37.1 78.12-34.8 103.83-6.1 23.71 27.3 18.4 53 18.4 175z"/></svg>
				</i><span class="sr-only">Mastodon</span></a></li>
		<li><a href="//slashdot.org/newsletter" target="_blank" rel="nofollow"><i class="icon-mail-squared"></i><span class="sr-only">Newsletter</span></a></li>
	</ul>
</nav>
			</div>
		</div>

		<section>
		
			<div class="message-bar" id="firehose-message-tray">
				<span class="icon-quote-left"></span>
				<p>
					
						
						Slashdot is powered by <strong><a href="//developers.slashdot.org/submission">your submissions</a></strong>, so send in your scoop
					
				</p>
			</div>
		
		
			<div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
		
		
			<div class="banner-wrapper">
				<div class="adwrap adwrap-unviewed banner-contain">
					
					<div id='div-gpt-ad-728x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_a');});</script></div>
					<div id='div-gpt-ad-hubicon_200x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-hubicon_200x90_a');});</script></div>
				</div>
			</div>
		
		<a name="main-articles"></a>
	
	<!-- header type=current end --><!-- body begin -->







	

	<style type="text/css">
menu, menu * {
	text-decoration:none;
}

menu[type=context] {
	display:none;
	position:absolute;
	z-index:10000;
}

menu[type=context]:not(.brief) {
	background-color:#dfdfdf;
	margin:0;
	padding:2px 0.5em;
	border-style:solid;
	border-width:1px;
	border-color:#eeeeee #aaaaaa #aaaaaa #eeeeee;
	-moz-border-radius-topright:.7em;
	-webkit-border-top-right-radius: 0.7em 0.7em;
}

menu.full[type=context] > a.slash-hover:first-child {
	-moz-border-radius-topright:.6em;
	-webkit-border-top-right-radius: 0.6em 0.6em;
}



menu.brief[type=context] > a {
	-moz-border-radius:.6em;
	-webkit-border-radius: 0.6em;
	color:#ffffff;
	background-color:#000000;
}

/*
span.briefmenu a.tag:not(.datatype) {
    padding-left:.5em;
}
*/




/* #tag-menu a, #feedback-menu a  { */
menu.tag-menu-admin a {
	display:list-item;
	list-style:none;
	text-align:left;
	font-weight:bold;
	color:black;
	padding:0.1em 0.5em;
	margin:-0.1em -0.5em;
	cursor:pointer;
}


.tags .edit-bar { position:relative; }
article aside .share .addthis_toolbox { display:block; width:60px; float:left; }
article aside.view_mode .share { min-width:120px; padding-top:.5em; }
#firehose.list article header h2 {padding-left: 20px; !important}
.novote .vote { display:none; }

.vote > a, .votedup > a, .voteddown > a {
	display:inline-block;
	height:22px;
	width:22px;
	margin: 2px 10px 0 0;
	color:rgb(255,255,255);
	text-decoration:none;
	line-height:22px;
	text-align:center;
	font-weight:bold;
	font-size:14px;
	border-width:1px;
	border-style:solid;
	border-color:rgba(0,0,0,0.5);
}

.vote > a, .votedup > a, .voteddown > a {color:rgb(0,0,0);}

article.fhitem-submission h2 .vote > a, article.fhitem-submission h2 .votedup > a, article.fhitem-submission h2 .voteddown > a { border-color:rgba(0,0,0,0.15); }
.vote .up, .vote .down, .votedup .up, .votedup .down, .voteddown .up, .voteddown .down { border-radius: 4px; -moz-border-radius: 4px; -webkit-border-radius: 4px; /* text-shadow:0 0 2px #000000; }*/}
article:not(.fhitem-story) .vote .up,article:not(.fhitem-story) .vote .down,article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .votedup .down,article:not(.fhitem-story) .voteddown .up,article:not(.fhitem-story) .voteddown .down { /*text-shadow:none !important; */}
.voteddown .down, .votedup .up { margin-right: 10px; text-indent:2px; line-height:24px; }
article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .voteddown .down {background: rgb(174,174,174);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(174,174,174)), to(rgb(193,193,193)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(193,193,193), rgb(174,174,174) 100%);color:rgb(0,0,0);}
article.fhitem-story .votedup .up,article.fhitem-story .voteddown .down {background: rgb(0,66,66);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(0,53,53)), to(rgb(0,102,102)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(0,102,102), rgb(0,53,53) 100%);}




#tag-menu span.var-tag {
font-weight:normal;
color:#444444;
}

menu.reasons-menu a {
padding:0 .25em 0 .25em;
font-size:80%;
-moz-border-radius:.5em;
-webkit-border-radius:.5em;
cursor:pointer;
}

menu.reasons-menu a:hover {
background:rgb(153,153,153);
background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102);
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102)));
color:#fff;
text-decoration:none;
font-weignt:normal;
}

article.fhitem-story menu.reasons-menu a:hover {
background:#002323 !important;
background:-moz-linear-gradient(100% 100% 90deg, #002323, #005353 70%) repeat scroll 0 0 #002323 !important;
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#005353), to(#002323)) !important;
}


menu.reasons-menu {
	display:none;
	margin:0;
	padding:0;
}

div.fhitem h3 menu.reasons-menu {
margin:0.25em 0 0;
}

div.fhitem h3 menu.reasons-menu a.tag {
font-size:.8em;
}

#tag-menu a.slash-hover,
#feedback-menu a.slash-hover,

.tag-display span.tag:hover,
.tag-display span.tag.trigger {
	color:white;
	background-color:rgb(0, 85, 85);
}

#tag-menu a.slash-hover span.var-tag {
	color:#eee;
}

.tag-entry.default {
        color:#ccc;
}

.brief .nix {
	margin-top:-1.35em;
	margin-left:0px;
	margin-top:-1.15em;
	text-decoration:none;
	line-height:1.35em;
	padding:0 2px;
	-moz-border-radius:.6em 0 0 .6em;
	-webkit-border-radius:.6em 0 0 .6em;
	-o-border-radius:.6em 0 0 .6em;
	border-radius:.6em 0 0 .6em;
    color:#fff !important;
    background:transparent !important;
}

.brief .nix:hover {
    background:rgb(153,153,153) !important;
    background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102) !important;
    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102))) !important;
}

</style>

<menu id="nix-reasons" style="display:none">
	<a class="tag">binspam</a><a class="tag">dupe</a><a class="tag">notthebest</a><a class="tag">offtopic</a><a class="tag">slownewsday</a><a class="tag">stale</a><a class="tag">stupid</a>
</menu>
<menu id="nod-reasons" style="display:none">
	<a class="tag">fresh</a><a class="tag">funny</a><a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">maybe</a>
</menu>
<menu id="comment-nix-reasons" style="display:none">
	<a class="tag">offtopic</a><a class="tag">flamebait</a><a class="tag">troll</a><a class="tag">redundant</a><a class="tag">overrated</a>
</menu>
<menu id="comment-nod-reasons" style="display:none">
	<a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">informative</a><a class="tag">funny</a><a class="tag">underrated</a>
</menu>

<menu id="tag-nod-reasons" style="display:none">
	<a class="tag">descriptive</a>
</menu>
<menu id="feedback-menu" class="tag-menu-admin" type="context">
	<a class="tag">typo</a><a class="tag">dupe</a><a class="tag">error</a>
</menu>
<menu id="tag-menu" class="tag-menu-admin none" type="context">

<!--	<a data-op="!" class="nix">!<span class="var-tag hide"></span></a>-->

</menu>

<script type="text/javascript">
$(function(){
var $CURRENT_MENU, $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/, IE7=/^7\.0/, TAG_PREFIX=/^\/tag\//;

function get_tag_name( $tag ){
	return ($tag.attr('href') || '').replace(TAG_PREFIX, '') || $tag.text().toLowerCase();
}

function trigger_menu( e, selector, $menu, menu_content ){
	var $target=$(original_target(e, selector)), in_use=$target.is('.trigger');
	if ( $CURRENT_MENU ) {
		$CURRENT_MENU.menu('cancel', e);
		$CURRENT_MENU = null;
	}

	if ( !in_use ) {
		menu_content && $menu.stop(true, true).hide().html(menu_content);
		($CURRENT_MENU=$menu).menu('context', e);
	}
	return !in_use;
}

function open_menu( trigger, $menu ){
	var $trigger=$(trigger), $fhitem=$trigger.closest('.fhitem');
	$fhitem.length && user_intent('interest', $fhitem[0]);

	$menu.appendTo(document.body).css({ opacity:0 }).show();

	var 	right	= $fhitem.offset().left + $fhitem.width(),
		global	= $trigger.offset(),
		local	= $menu.offsetParent().offset();

	// Ugly IE position hack required:
	$.browser.msie && IE7.test($.browser.version) && (local.top = 0);

	// pin the menu (horizontally) on-screen
	global.left = Math.min(global.left, right-$menu.width());

	$trigger.addClass('trigger');
	$menu.css({
		position:	'absolute',
		top:		global.top - local.top + $trigger.height(),
		left:		global.left - local.left,
		opacity:	1
	});
}

function close_menu( trigger, $menu ){
	$menu.hide();
	$(trigger).removeClass('trigger');
	($CURRENT_MENU===$menu) && ($CURRENT_MENU=false);
}

/* T2 tag context-menu */
var $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/;


    var user_is_admin = 0;



$('a[rel=tag]').live('mousedown',function(ea){
    window.open(this.href);
    return false;
})

$('.tag-bar .disagree').live('mousedown',function(ee){
	var fhitem = $(original_target(ee)).closest('.fhitem')[0],
		command = ('!' + $(original_target(ee)).attr("data-tag")).replace(NOTNOT, '');
    try { Tags.submit(fhitem, command); } catch ( err ) {  }
    return false;
})



$('a[rel=tag]').
	live('mousedown', function( e ){
        
            return true;
        

	}).
	live('click', function( e ){
		if ( !logged_in ) {
			var	target	= original_target(e),
				tag	= $(target).text();
			addfhfilter(tag);
		}
		e.preventDefault();
		return false;
	});

$TAG_MENU.menu({
	cssNamespace: 'slash',
	liveTriggers: true,
	clickDuration: 300,

	start: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			context	= firehose_settings && firehose_settings.viewtitle;

		// Insert the tagname into the menu items where needed.
		$TAG_MENU.find('span.var-tag').text(tag);
		$TAG_MENU.find('a.nix').attr('title','not ' + tag);


			// non-admins may only delete their own tags
		$TAG_MENU.find('a[data-op="-"]').toggle($tag.is('.my'));
	

		// *tagname* in *viewtitle*
		$TAG_MENU.find('a[data-op="="]').toggle(!!context);
		context && $TAG_MENU.find('span.var-view').text(context);

		open_menu($tag, $TAG_MENU);
	},

	select: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			op	= $(ui.event.target).attr('data-op'),
			fhitem,
			command;

		// Global for positioning other things.
		$related_trigger = $tag;

		switch ( op ) {
			case '=':
				addfhfilter(tag);
				break;

			default:
				fhitem = $tag.closest('.fhitem')[0];
				command = (op + tag).replace(NOTNOT, '');
				try { Tags.submit(fhitem, command); } catch ( err ) {  }
				break;
		}
	},

	stop: function( e, ui ){ close_menu(ui.trigger, $TAG_MENU); }
});




/* T2 feedback context-menu */



/* T2 datatype context-menu (admin-only) */






});
</script>

	

<!-- SMACKS: BEGIN STORY CONTENT -->
<div class="container">
	<!--SMACKS: BEGING CENTER COLUMN -->
	<div class="main-wrap has-rail-right">
		<div class="main-content">
			<div class="grid_24 a2 ">
			</div>
			<div id="firehose" class="nothumbs">
			<div id="firehoselist" class="fhroot fleft  grid_24">
				<div id="announcement">
  <div id="announcementText" style="display: none;"> <a href="https://slashdot.org/newsletter" rel="nofollow"><strong>Sign up for the Slashdot newsletter!</strong></a> OR <a onclick="window._paq.push(['trackEvent', 'Announcement', 'GC']);" href="https://jobs.slashdot.org/?source=boiler_plate&utm_source=boiler_plate&utm_medium=content&utm_campaign=bp_referral" rel="nofollow">check out the new Slashdot job board to browse remote jobs or jobs in your area</a><br><br></strong>Do you develop on GitHub? You can keep using GitHub but automatically <a href="https://sourceforge.net/p/forge/documentation/GitHub%20Importer/" rel="nofollow"><strong>sync your GitHub releases to SourceForge</a></strong> quickly and easily with <strong><a href="https://sourceforge.net/p/import_project/github/" rel="nofollow">this tool</a></strong> so your projects have a backup location, and get your project in front of SourceForge's nearly 20 million monthly users. It takes less than a minute. Get new users downloading your project releases today!</span><br></div>
  <a href="" class="btn-close" title="don't show me this again" onclick="closeAnnouncement(); return false;">&times;</a>
</div>


<script type="text/javascript">

if (!$.cookie('hide_sitenotice_36')) {
	$('#announcement').fadeIn(300);
}

function closeAnnouncement() {
	$('#announcement').fadeOut(300);
	$.cookie('hide_sitenotice_36', 'true', { path: '/', domain: 'slashdot.org', expires: 1 });
}
</script>
				<article id="firehose-174154519" data-fhid="174154519" data-fhtype="story" class="fhitem fhitem-story article usermode thumbs grid_24">
		<span class="sd-info-block" style="display: none">
			<span class="sd-key-firehose-id">174154519</span>
			<span class="type">story</span>
			
		</span>







	
	

<header>
	
		<span class="topic" id="topic-174154519">
			<a href="//developers.slashdot.org/index2.pl?fhfilter=programming" onclick="return addfhfilter('programming');">
			
				<img src="//a.fsdn.com/sd/topics/programming_64.png" width="64" height="64" alt="Programming" title="Programming">
			
		</a>
		</span>
	

	<h2 class="story">
		

		

		
		

		

		

		

		<span id="title-174154519" class="story-title"> <a   href="//developers.slashdot.org/story/24/06/15/1624253/is-c-more-popular-than-c">Is C++ More Popular Than C?</a></span>

		
		
		<!--<span class="comments commentcnt-174154519" >103</span>-->
		

		
		<!-- comment bubble -->
		
			<span class="comment-bubble"><a href="//developers.slashdot.org/story/24/06/15/1624253/is-c-more-popular-than-c#comments" title="">103</a></span>
		
	</h2>
	<div class="details" id="details-174154519">
		<span class="story-details">
		<span class="story-views">
			<span class="sodify" onclick="firehose_set_options('color', 'red')" title="Filter Firehose to entries rated red or better"></span><span class="icon-beaker pop1 " alt="Popularity" title="Filter Firehose to entries rated red or better" onclick="firehose_set_options('color', 'red')"><span></span></span> 
		</span>
		</span>
		<span class="story-byline">
	
				
			Posted
				by 
		
		
			
				  EditorDavid
			
		
		

		
		
		<time id="fhtime-174154519" datetime="on Saturday June 15, 2024 @10:24PM">on Saturday June 15, 2024 @10:24PM</time>
		
		
			 from the <span class="dept-text">C-you-later</span> dept.
		
		</span>
	</div>
</header>

<div class="body" id="fhbody-174154519">
	
		
	

	
		
		<div id="text-174154519" class="p">
			
		 	
				<a href="https://developers.slashdot.org/story/24/05/19/2159214/fortran-and-cobol-re-enter-tiobes-ranking-of-programming-language-popularity">Last month TIOBE announced</a> its estimate that the four most popular programming languages were:<br> <br>
1.  Python<br>
2. C<br>
3. C++<br>
4.  Java<br> <br>
But this month C++ "overtook" C for the first time, <a href="https://www.tiobe.com/tiobe-index/">TIOBE announced</a>, becoming (according to the same methodology) the #2 most popular programming language, with C dropping to #3.  " C++ has never been that high in the TIOBE index," says TIOBE Software CEO Paul Jansen in the announcement, "whereas C has never been that low."<br> <br>

1.  Python<br>
2. C++<br>
3. C<br>
4.  Java <br> <br>

<i>
 C++ started a new life as of 2011 with its consistent 3 yearly updates. Although most compilers and most engineers can't take up with this pace, it is considered a success to see the language evolve.<br> <br>

The main strengths of C++ are its performance and scalability. Its downside is its many ways to get things done, i.e. its rich idiom of features, which is caused by its long history and aim for backward compatibility. <br> <br>

C++ is heavily used in embedded systems, game development and financial trading software, just to name a few domains.
</i> <br>
There's different rankings from the rival <a href="https://pypl.github.io/PYPL.html">PYPL index of programming language popularity</a>.  It lumps C and C++ together to award them a collective ranking (#5).  But unlike TIOBE, it shows Java <em>[and JavaScript and C#]</em> all being more popular (with Python still the #1 most popular language).<br> <br>

Of course, statistical anomalies could be also skewing the results.  Visual Basic also lost two ranks in popularity in the last month, according to TIOBE, dropping from the #7 position to the #9 position (now falling just behind Go and SQL).  This becomes the first time that Go has risen as high as #7, according to TIOBE's announcement &mdash; with Rust also reaching an all-time high of  #17...
		 	
		</div>

		

		

		
			
		
	</div>
	<aside class="grid_24 view_mode">
		
			<div class="units-12 story-detail-tags">
				<span id="sharethis-174154519" class="">
					
						

						

					
				</span>

				<div class="story-tags">
					<div class="tright tw">
						
							<span class="tright tags">
								
									<menu type="toolbar" class="edit-bar">
		<span id="tagbar-174154519" class="tag-bar none">
			
		</span>
		
		<!--
			<a class="edit-toggle" href="/my/login/" onclick="show_login_box();return false;">
				<span class="icon-tag btn collapse"></span>
			</a>
			-->
		
		
		<div class="tag-menu">
			<input class="tag-entry default" type="text" value="apply tags">
		</div>
		

		
		

	</menu>
								
							</span>
						
					</div>
				</div>
			</div>

			
				
				
				
			 	
					<section class="grid_24" id="newa2footerv2">
						<div class="grid_6 pr">
							<h3><a title="Previous story" href="//science.slashdot.org/story/24/06/15/2048219/security-lessons-from-the-change-healthcare-ransomware-catastrophe?sdsrc=prev">&larr;</a></h3>
						</div>
						<div class="grid_12 rl">
							<h3>Related Links</h3>
						</div>
						<div class="grid_6 ns">
							<h3><a title="Next story" href="//science.slashdot.org/story/24/06/16/0415237/is-there-life-on-this-saturn-moon-scientists-plan-a-mission-to-find-out?sdsrc=next">&rarr;</a></h3>
						</div>
						<div class="grid_6">
							<span class="c">
								<a href="//science.slashdot.org/story/24/06/15/2048219/security-lessons-from-the-change-healthcare-ransomware-catastrophe?sdsrc=prev">Security Lessons from the Change Healthcare Ransomware Catastrophe </a>
							</span>
						</div>
						<div class="grid_12">
							<span class="c">
								
								
									<h3><a href="//developers.slashdot.org/story/24/05/19/2159214/fortran-and-cobol-re-enter-tiobes-ranking-of-programming-language-popularity?sdsrc=rel">FORTRAN and COBOL Re-enter TIOBE's Ranking of Programming Language Popularity</a></h3><script type="text/javascript">
		(function($){
			$('.js_disp_only').show();
			$('a.jshandle_related').on('click', '', function(e) {
				e.preventDefault();
				var url = $(this).data('goto-url');
				window.location = url
			});
		})($j);
	</script>
								
							</span>
						</div>
						<div class="grid_6">
							<span class="c">
								
									<a href="//science.slashdot.org/story/24/06/16/0415237/is-there-life-on-this-saturn-moon-scientists-plan-a-mission-to-find-out?sdsrc=next">Is There Life on This Saturn Moon?  Scientists Plan a Mission to Find Out</a>
								
							</span>
						</div>
					</section>
				
			
		
	</aside>
	



	</article>
			</div>
			</div>
		</div>
	</div>
	<!-- SMACKS: BEGIN RIGHT RAIL -->
	<aside id="slashboxes" class="rail-right">
		
                    <div id="slashboxesin" class="yui-b">
                            
                            
                            
                    </div>
		    <div class="railad adwrap-unviewed">
<div id='div-gpt-ad-300x250_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-300x250_a');});</script></div>
</div>
		
	</aside>
		<!-- SMACKS: END RIGHT RAIL -->
</div>
<!-- END STORY CONTENT -->

<!-- THIS IS THE LOCATION FOR THE NEW STORY_B CODE -->
<div class="adwrap">
<div id='div-gpt-ad-728x90_b'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_b');});</script></div>
</div>
<script type="text/javascript">
if (window.is_euro_union === 0) {
    if (sdAdBlockActive) {
        bizx.cmp.ifConsent('', ['all'], function () {
            $.ajax({
                url: '/ajax.pl?op=nel',
                type: 'POST',
                success: function(html){
                    if(html){
                        $('#firehoselist article').eq(0).after(html);
                    }
                }
            });
        });
    }
}
</script>
<!--------------------------->


<!-- SMACKS: BEGIN COMMENTS CONTAINER -->
<div class="container">
	<!-- SMACKS: BEGIN COMMENTS SECTION -->
	<div class="main-wrap">
        <div id='horizontal' class='jobbioapp' style="width:initial;margin-right:320px;"></div>
		<div class="main-content">
			<div id="comments" class="a2commentwrap">
			<div>
					<a name="comments"></a>
<div id="comments" class="container">
	<div class="main-wrap">
		<div class="main-content">
			<section class="d2incommentspl">
				<div class="commentwrap" id="commentwrap">
					
						<div class="commentBox">
							<div class="title hide">
								<h4>
									
										<span class="escape-link"><a href="//developers.slashdot.org/story/24/06/15/1624253/is-c-more-popular-than-c" title="Back to Article - Is C++ More Popular Than C?">Is C++ More Popular Than C?</a></span>
									
									<span class="commentBoxLinks"><a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_d"></span> More</a>



	| <span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Reply</a>


	<a class="login"  href="//developers.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a></span>
								</h4>
							</div>
						</div>
					

					<section class="grid_24" id="d2header"><div>
						
							<h2 class="commentspl test"><a title="Back to Article - Is C++ More Popular Than C?" href="//developers.slashdot.org/story/24/06/15/1624253/is-c-more-popular-than-c">Is C++ More Popular Than C?</a></h2>
						
						<nav class="grid_24">
							<div class="grid_14 widthauto">
							
						 		<span class="ind"></span><a class="btn first" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Post</a>
							
							<!-- <a href="//developers.slashdot.org/search.pl?op=comments&amp;sid=23358225" class="btn">Search <span class="totalcommentcnt">105</span> Comments</a> -->
							
								
									<a href="#" onclick="D2.ajaxFetchComments(0,1,'','',-1); return false" class="btn" id="d2loadall">Load All Comments</a>
								
							
							
								</div>
								<div class="grid_10 d1or2">
							

							
								<div id="d2out" class="horizontal rooted grid_15">
									<div id="d2act" class="hide">
										<div class="loki" id="gods">
											<script type="text/javascript">
												 $(function(){
													 D2.slider = new D2.Slider(
														 D2.user_threshold(),
														 D2.user_highlightthresh(),
														 'x'
													 );
												 });
											</script>
											<div id="bones" class="grid_12">
												<div class="ccw-count-container grid_24">
													<span id="ccw-full-count-text" class="grid_8 ccw-count-text tcenter"><span></span><span id="ccw-full-phrase">&nbsp;Full</span></span>
													<span id="ccw-abbr-count-text" class="grid_8 ccw-count-text"><span></span><span id="ccw-abbr-phrase">&nbsp;Abbreviated</span></span>
													<span id="ccw-hide-count-text" class="grid_8 ccw-count-text tleft"><span></span><span id="ccw-hide-phrase">&nbsp;Hidden</span></span>
												</div>
												<div id="ccw">
													<div id="ccw-body" class="ccw-core">
														<div id="ccw-panel-container" class="ccw-core">
															<div id="ccw-full-panel" class="ccw-panel">
																/Sea<div class="ccw-panel-border"></div>
																<div id="ccw-full-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
															<div id="ccw-abbr-panel" class="ccw-panel">
																<div class="ccw-panel-border"></div>
																<div id="ccw-abbr-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
															<div id="ccw-hide-panel" class="ccw-panel">
																<div id="ccw-hide-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
														</div>
														<div id="ccw-control" class="ccw-core">
															<div id="ccw-centering-rail" class="ccw-core">
																<div id="ccw-hide-bar-pos" class="ccw-core-pos">
																	<div id="ccw-hide-bar" class="ccw-bar">
																		<div id="ccw-hide-bar-tab" class="ccw-bar-tab"></div>
																		<div class="ccwa"></div>
																		<div class="ccwb"></div>
																		<div id="ccw-hide-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(HIDE_BAR, +1)"></div>
																		<div id="ccw-hide-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(HIDE_BAR, -1)"></div>
																	</div>
																</div>
																<div id="ccw-abbr-bar-pos" class="ccw-core-pos">
																	<div id="ccw-abbr-bar" class="ccw-bar">
																		<div id="ccw-abbr-bar-tab" class="ccw-bar-tab"></div>
																		<div class="ccwa"></div>
																		<div class="ccwb"></div>
																		<div id="ccw-abbr-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(ABBR_BAR, +1)"></div>
																		<div id="ccw-abbr-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(ABBR_BAR, -1)"></div>
																	</div>
																</div>
															</div>
														</div>
													</div>
													<div class="ccw-score-label grid_24">
														<div class="grid_3"><span class="sc">Score:</span></div>
														<div class="grid_3">5<span class="lg"></span></div>
														<div class="grid_3">4<span class="lg"></span></div>
														<div class="grid_3">3<span class="lg"></span></div>
														<div class="grid_3">2<span class="lg"></span></div>
														<div class="grid_3">1<span class="lg"></span></div>
														<div class="grid_3">0<span class="lg"></span></div>
														<div class="grid_3">-1<span class="lg"></span></div>
													</div>
												</div>
											</div>
											<div class="commentControlFooter">
												<a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_c"></span> More</a>



	| <span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Reply</a>


	<a class="login"  href="//developers.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a><div id="login_cover" class="hide" onclick="hide_login_box()"></div>
<div id="login_box" class="hide">
	<div id="login_box_content">
		<div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="//developers.slashdot.org/comments.pl?sid=23358225">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
		<div class="actions">
			<a class="ico close" href="#" onclick="hide_login_box(); return false"><span>Close</span></a>
		</div>
	</div>
</div>
<script type="text/javascript">logged_in = 0</script>
											</div>
											<div id="commentControlBoxStatus" class="hide"></div>
										</div>
									</div>
								</div>
							
							
							<a href="//developers.slashdot.org/search.pl?op=comments&amp;sid=23358225" class="ui-icon search_comments">Search <span class="totalcommentcnt">105</span> Comments</a>
							
								<a class="pref ui-icon-w" href="//developers.slashdot.org/users.pl" onclick="show_login_box(); $('#modal_box').addClass('login'); return false;">Log In/Create an Account</a>
							
						</div>
					</nav>
					<section id="besttabs" class="grid_24">
						<span class="legend">Comments Filter:</span>
						<ul class="besttabslist">
							<li class="active">
								<a href="#" data-filter-url="//developers.slashdot.org/story/24/06/15/1624253/is-c-more-popular-than-c#comments">All</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/06/15/1624253/is-c-more-popular-than-c/insightful-comments#comments">Insightful</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/06/15/1624253/is-c-more-popular-than-c/informative-comments#comments">Informative</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/06/15/1624253/is-c-more-popular-than-c/interesting-comments#comments">Interesting</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/06/15/1624253/is-c-more-popular-than-c/funny-comments#comments">Funny</a>
							</li>
						
					</ul>
					<script>
					(function($){
						$('#besttabs').show();
						$('.besttabslist').on('click', 'li a', function(e){
							e.preventDefault();
							var url = $(this).data('filter-url');
							//console.log('URL= ', url);
							$(this)
								.closest('ul').find('li').removeClass('active')
								.end()
								.closest('li').addClass('active');
							window.location = url;
						});
					})($j);
					</script>
			</section>
				<aside class="grid_24">
					<p>
						<small><strong>The Fine Print:</strong> The following comments are owned by whoever posted them.  We are not responsible for them in any way.</small>
					</p>
				</aside>
			</section>
			
		</div>
	</div>
</div><script src="//a.fsdn.com/sd/comments-minified.js?1d97ab7621da10e3" type="text/javascript"></script>


<script type="text/javascript">
<!--
D2.d2_keybindings_disable()[191] = 1;
D2.boxStatus(1);
D2.comments({ 64553327: { uid: 599362, pid: 64553301, subject: "Re: downside", read: 0, points: 1, kids: [ 64553451 ], opid: 64553301 }, 64553485: { uid: 14640, pid: 64552467, subject: "Re:downside", read: 0, points: 2, kids: [ 64554193 ], opid: 64552467 }, 64552523: { uid: 739463, pid: 64552495, subject: "Re:Again?", read: 0, points: 2, kids: [ 64552707, 64552709, 64552983 ], opid: 64552495 }, 64554347: { uid: 14640, pid: 64554193, subject: "Re:downside", read: 0, points: 2, kids: [  ], opid: 64554193 }, 64552689: { uid: 599362, pid: 64552525, subject: "Re:What counts as C vs C++?", read: 0, points: 1, kids: [ 64552791, 64553695 ], opid: 64552525 }, 64553155: { uid: 96754, pid: 64552937, subject: "Re: Yes", read: 0, points: 2, kids: [ 64553525, 64553551 ], opid: 64552937 }, 64553729: { uid: 599362, pid: 64553401, read: 0, points: 1, kids: [  ], opid: 64553401 }, 64553719: { uid: 412956, pid: 64552937, subject: "Re: Yes", read: 0, points: 2, kids: [  ], opid: 64552937 }, 64553361: { uid: 969671, pid: 64553033, subject: "Re:Hmmm. ", read: 0, points: 2, kids: [  ], opid: 64553033 }, 64553615: { uid: 153816, pid: 64552499, subject: "Re:Read the Definition of their ranking.", read: 0, points: 2, kids: [  ], opid: 64552499 }, 64553445: { uid: 664417, pid: 64553329, subject: "Re:What counts as C vs C++?", read: 0, points: 2, kids: [ 64553725 ], opid: 64553329 }, 64553461: { uid: 3450605, pid: 64552937, read: 0, points: 2, kids: [ 64553741 ], opid: 64552937 }, 64552741: { uid: 899105, pid: 64552693, subject: "Re: Yes", read: 0, points: 2, kids: [ 64552937 ], opid: 64552693 }, 64552651: { uid: 1071376, pid: 0, read: 0, points: 2, kids: [ 64552805 ], opid: 0 }, 64552429: { uid: 666, pid: 64552419, subject: "Re:Yes", read: 0, points: 0, kids: [ 64552449, 64552481 ], opid: 64552419 }, 64553489: { uid: 88907, pid: 64552663, subject: "Re:Hmmm. ", read: 0, points: 2, kids: [  ], opid: 64552663 }, 64552663: { uid: 1658, pid: 0, read: 0, points: 2, kids: [ 64552677, 64552785, 64553489, 64553555, 64553755 ], opid: 0 }, 64553401: { uid: 666, pid: 64553315, subject: "Re: \"Reasonable\" code?", read: 0, points: 0, kids: [ 64553729 ], opid: 64553315 }, 64553565: { uid: 14640, pid: 64552677, subject: "Re:Hmmm. ", read: 0, points: 2, kids: [  ], opid: 64552677 }, 64554189: { uid: 622387, pid: 64553531, subject: "Re:downside", read: 0, points: 2, kids: [  ], opid: 64553531 }, 64554203: { uid: 3450605, pid: 64553741, read: 0, points: 2, kids: [  ], opid: 64553741 }, 64553409: { uid: 3450605, pid: 64552513, read: 0, points: 2, kids: [  ], opid: 64552513 }, 64553555: { uid: 14640, pid: 64552663, subject: "Re:Hmmm. ", read: 0, points: 2, kids: [  ], opid: 64552663 }, 64552999: { uid: 1284676, pid: 64552717, read: 0, points: 1, kids: [ 64553315 ], opid: 64552717 }, 64553531: { uid: 160982, pid: 64553057, subject: "Re:downside", read: 0, points: 2, kids: [ 64554043, 64554189 ], opid: 64553057 }, 64552497: { uid: 514669, pid: 0, read: 0, points: 2, kids: [ 64552499 ], opid: 0 }, 64553207: { uid: 80593, pid: 64553183, subject: "Re: Hmmm.", read: 0, points: 2, kids: [  ], opid: 64553183 }, 64553757: { uid: 215404, pid: 64553421, subject: "Re:TIOBE doesn't rank code that makes money. ", read: 0, points: 2, kids: [  ], opid: 64553421 }, 64553301: { uid: 1302813, pid: 64552681, read: 0, points: 2, kids: [ 64553327 ], opid: 64552681 }, 64552655: { uid: 1075937, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64552423: { uid: 547041, pid: 0, read: 0, points: 5, kids: [  ], opid: 0 }, 64553315: { uid: 599362, pid: 64552999, subject: "Re: \"Reasonable\" code?", read: 0, points: 1, kids: [ 64553401 ], opid: 64552999 }, 64552717: { uid: 599362, pid: 64552703, subject: "Re:\"Reasonable\" code?", read: 0, points: 1, kids: [ 64552999 ], opid: 64552703 }, 64552449: { uid: 9395567, pid: 64552429, read: 0, points: 2, kids: [ 64552693 ], opid: 64552429 }, 64554285: { uid: 3450605, pid: 64553769, read: 0, points: 2, kids: [  ], opid: 64553769 }, 64553451: { uid: 3450605, pid: 64553327, read: 0, points: 2, kids: [  ], opid: 64553327 }, 64553457: { uid: 664417, pid: 64553057, subject: "Re:downside", read: 0, points: 2, kids: [ 64554197 ], opid: 64553057 }, 64552715: { uid: 622387, pid: 64552571, subject: "Re:Do you really care?", read: 0, points: 2, kids: [  ], opid: 64552571 }, 64552709: { uid: 324782, pid: 64552523, subject: "Re:Again?", read: 0, points: 2, kids: [  ], opid: 64552523 }, 64552703: { uid: 666, pid: 64552671, subject: "Re:\"Reasonable\" code?", read: 0, points: 0, kids: [ 64552717 ], opid: 64552671 }, 64552467: { uid: 622387, pid: 0, read: 0, points: 4, kids: [ 64552513, 64552771, 64553485 ], opid: 0 }, 64553749: { uid: 412956, pid: 64552945, subject: "Re:eh", read: 0, points: 2, kids: [  ], opid: 64552945 }, 64552983: { uid: 80593, pid: 64552523, subject: "Re:Again?", read: 0, points: 1, kids: [ 64553011 ], opid: 64552523 }, 64552699: { uid: 6309704, pid: 64552485, subject: "Re:Do you really care?", read: 0, points: 2, kids: [ 64552731 ], opid: 64552485 }, 64552513: { uid: 739463, pid: 64552467, subject: "Re:downside", read: 0, points: 3, kids: [ 64552681, 64553409 ], opid: 64552467 }, 64552671: { uid: 599362, pid: 64552485, read: 0, points: 2, kids: [ 64552703 ], opid: 64552485 }, 64552785: { uid: 664417, pid: 64552663, subject: "Re:Hmmm. ", read: 0, points: 4, kids: [ 64553033, 64554341 ], opid: 64552663 }, 64553755: { uid: 215404, pid: 64552663, subject: "Re:Hmmm. ", read: 0, points: 2, kids: [  ], opid: 64552663 }, 64553525: { uid: 14640, pid: 64553155, subject: "Re: Yes", read: 0, points: 2, kids: [  ], opid: 64553155 }, 64552571: { uid: 5495648, pid: 64552503, subject: "Re:Do you really care?", read: 0, points: 2, kids: [ 64552715 ], opid: 64552503 }, 64552693: { uid: 1311177, pid: 64552449, subject: "Re: Yes", read: 0, points: 2, kids: [ 64552741 ], opid: 64552449 }, 64552485: { uid: 5495648, pid: 0, read: 0, points: 5, kids: [ 64552503, 64552671, 64552699 ], opid: 0 }, 64552457: { uid: 739463, pid: 64552419, subject: "Re:Yes", read: 0, points: 2, kids: [ 64552487, 64552951 ], opid: 64552419 }, 64553057: { uid: 622387, pid: 64552771, subject: "Re:downside", read: 0, points: 2, kids: [ 64553457, 64553531 ], opid: 64552771 }, 64553471: { uid: 1673484, pid: 64552937, subject: "Re: Yes", read: 0, points: 2, kids: [ 64554151 ], opid: 64552937 }, 64553011: { uid: 1284676, pid: 64552983, read: 0, points: 1, kids: [  ], opid: 64552983 }, 64553479: { uid: 88907, pid: 0, read: 0, points: 2, kids: [ 64553761 ], opid: 0 }, 64553329: { uid: 599362, pid: 64552791, subject: "Re:What counts as C vs C++?", read: 0, points: 1, kids: [ 64553445 ], opid: 64552791 }, 64553421: { uid: 100351, pid: 0, read: 0, points: 2, kids: [ 64553757 ], opid: 0 }, 64553741: { uid: 666, pid: 64553461, subject: "Re: Yes", read: 0, points: 0, kids: [ 64554203 ], opid: 64553461 }, 64552487: { uid: 326346, pid: 64552457, subject: "Re:Yes", read: 0, points: 4, kids: [ 64552547 ], opid: 64552457 }, 64552495: { uid: 882150, pid: 0, read: 0, points: 2, kids: [ 64552523 ], opid: 0 }, 64552937: { uid: 128717, pid: 64552741, subject: "Re: Yes", read: 0, points: 2, kids: [ 64553155, 64553461, 64553471, 64553719 ], opid: 64552741 }, 64552805: { uid: 227083, pid: 64552651, read: 0, points: 2, kids: [  ], opid: 64552651 }, 64552499: { uid: 514669, pid: 64552497, subject: "Re:Read the Definition of their ranking.", read: 0, points: 2, kids: [ 64553615 ], opid: 64552497 }, 64552543: { uid: 666, pid: 64552419, read: 0, points: 0, kids: [  ], opid: 64552419 }, 64554017: { uid: 11432, pid: 64553215, read: 0, points: 2, kids: [  ], opid: 64553215 }, 64552547: { uid: 666, pid: 64552487, read: 0, points: 0, kids: [ 64552945 ], opid: 64552487 }, 64552481: { uid: 666, pid: 64552429, subject: "Re:Yes", read: 0, points: 0, kids: [  ], opid: 64552429 }, 64554043: { uid: 9395567, pid: 64553531, read: 0, points: 2, kids: [  ], opid: 64553531 }, 64554341: { uid: 623872, pid: 64552785, subject: "Re:Hmmm. ", read: 0, points: 2, kids: [  ], opid: 64552785 }, 64553761: { uid: 215404, pid: 64553479, subject: "Re:C jobs are often less explicite", read: 0, points: 2, kids: [ 64553849 ], opid: 64553479 }, 64552731: { uid: 5495648, pid: 64552699, subject: "Re:Do you really care?", read: 0, points: 2, kids: [  ], opid: 64552699 }, 64553613: { uid: 9395567, pid: 64553499, read: 0, points: 2, kids: [  ], opid: 64553499 }, 64554151: { uid: 6247454, pid: 64553471, subject: "Re: Yes", read: 0, points: 2, kids: [  ], opid: 64553471 }, 64552419: { uid: 16139, pid: 0, read: 0, points: 2, kids: [ 64552429, 64552457, 64552543, 64552815 ], opid: 0 }, 64552677: { uid: 599362, pid: 64552663, subject: "Re:Hmmm. ", read: 0, points: 1, kids: [ 64553565 ], opid: 64552663 }, 64553447: { uid: 739463, pid: 64552707, subject: "Re:Again?", read: 0, points: 2, kids: [  ], opid: 64552707 }, 64552945: { uid: 128717, pid: 64552547, subject: "Re:eh", read: 0, points: 2, kids: [ 64553253, 64553499, 64553749 ], opid: 64552547 }, 64552815: { uid: 213879, pid: 64552419, subject: "Re:Yes", read: 0, points: 2, kids: [ 64553215 ], opid: 64552419 }, 64553179: { uid: 666, pid: 64552799, subject: "Re:Give it up!", read: 0, points: 0, kids: [  ], opid: 64552799 }, 64552791: { uid: 664417, pid: 64552689, subject: "Re:What counts as C vs C++?", read: 0, points: 2, kids: [ 64553329 ], opid: 64552689 }, 64554197: { uid: 622387, pid: 64553457, subject: "Re:downside", read: 0, points: 2, kids: [  ], opid: 64553457 }, 64553183: { uid: 1284676, pid: 64553033, read: 0, points: 1, kids: [ 64553207 ], opid: 64553033 }, 64552707: { uid: 1544253, pid: 64552523, subject: "Re:Again?", read: 0, points: 2, kids: [ 64553447 ], opid: 64552523 }, 64553769: { uid: undefined, pid: 64552951, read: 0, points: -2, kids: [ 64554285 ], opid: undefined }, 64552951: { uid: 80593, pid: 64552457, subject: "Re:Yes", read: 0, points: 1, kids: [ 64553769 ], opid: 64552457 }, 64552771: { uid: 664417, pid: 64552467, subject: "Re:downside", read: 0, points: 2, kids: [ 64553057 ], opid: 64552467 }, 64553253: { uid: 124937, pid: 64552945, read: 0, points: 2, kids: [  ], opid: 64552945 }, 64552525: { uid: undefined, pid: 0, read: 0, points: -2, kids: [ 64552689 ], opid: undefined }, 64552799: { uid: 922498, pid: 0, read: 0, points: 3, kids: [ 64553179 ], opid: 0 }, 64553215: { uid: 703092, pid: 64552815, subject: "Re:Yes", read: 0, points: 2, kids: [ 64554017 ], opid: 64552815 }, 64554193: { uid: 622387, pid: 64553485, subject: "Re:downside", read: 0, points: 2, kids: [ 64554347 ], opid: 64553485 }, 64553849: { uid: 88907, pid: 64553761, subject: "Re:C jobs are often less explicite", read: 0, points: 2, kids: [  ], opid: 64553761 }, 64552503: { uid: 622387, pid: 64552485, subject: "Re:Do you really care?", read: 0, points: 2, kids: [ 64552571 ], opid: 64552485 }, 64553551: { uid: 9395567, pid: 64553155, read: 0, points: 2, kids: [  ], opid: 64553155 }, 64553845: { uid: 664417, pid: 64553725, subject: "Re: What counts as C vs C++?", read: 0, points: 2, kids: [  ], opid: 64553725 }, 64553033: { uid: 80593, pid: 64552785, subject: "Re:Hmmm. ", read: 0, points: 1, kids: [ 64553183, 64553361 ], opid: 64552785 }, 64553499: { uid: 14640, pid: 64552945, subject: "Re:eh", read: 0, points: 2, kids: [ 64553613 ], opid: 64552945 }, 64552681: { uid: 599362, pid: 64552513, subject: "Re:downside", read: 0, points: 1, kids: [ 64553301 ], opid: 64552513 }, 64553725: { uid: 599362, pid: 64553445, read: 0, points: 1, kids: [ 64553845 ], opid: 64553445 }, 64553695: { uid: 1163639, pid: 64552689, read: 0, points: 1, kids: [  ], opid: 64552689 } });

D2.thresh_totals({6:{6:{1:100,3:0,2:0}},3:{6:{1:93,3:2,2:5},4:{1:93,3:6,2:1},3:{1:93,3:7,2:0},5:{1:93,3:3,2:4}},2:{6:{1:24,3:2,2:74},4:{1:24,3:6,2:70},3:{1:24,3:15,2:61},2:{1:24,3:76,2:0},5:{1:24,3:3,2:73}},1:{6:{1:8,3:2,2:90},4:{1:8,3:6,2:86},1:{1:8,3:92,2:0},3:{1:8,3:15,2:77},2:{1:8,3:76,2:16},5:{1:8,3:3,2:89}},4:{6:{1:95,3:2,2:3},4:{1:95,3:5,2:0},5:{1:95,3:3,2:2}},0:{6:{1:0,3:2,2:98},4:{1:0,3:6,2:94},1:{1:0,3:92,2:8},3:{1:0,3:15,2:85},0:{1:0,3:100,2:0},2:{1:0,3:76,2:24},5:{1:0,3:3,2:97}},"-1":{6:{1:0,3:2,2:98},3:{1:0,3:15,2:85},2:{1:0,3:76,2:24},1:{1:0,3:92,2:8},4:{1:0,3:6,2:94},0:{1:0,3:100,2:0},"-1":{1:0,3:100,2:0},5:{1:0,3:3,2:97}},5:{6:{1:98,3:2,2:0},5:{1:98,3:2,2:0}}});

D2.root_comment(0);
D2.root_comments([64552419,64552423,64552467,64552485,64552495,64552497,64552651,64552655,64552663,64552799,64553421,64553479,64552525]);
D2.root_comments_hash({64552651:1,64552663:1,64552497:1,64552655:1,64552423:1,64552467:1,64552485:1,64553479:1,64553421:1,64552495:1,64552419:1,64552525:1,64552799:1});

D2.d2_comment_order(0);
D2.user_uid(666);
D2.user_is_anon(1);
D2.user_is_admin(0);
D2.user_is_subscriber(0);
D2.user_smallscreen(0);
D2.user_threshold(1);
D2.user_highlightthresh(4);
D2.user_d2asp(0);

D2.discussion_id(23358225);

D2.d2_seen('64552419,4,6,20,8,10,14,4,2,8,2,2,4,10,10,20,4,24,80,4,8,8,6,4,8,4,6,4,4,2,6,2,14,10,30,14,6,8,6,10,122,8,6,32,16,12,22,24,98,24,4,24,8,38,48,14,12,2,32,40,8,12,24,2,4,6,4,10,8,6,4,10,26,6,20,4,10,48,2,80,24,6,4,12,8,6,2,4,84,4,168,26,108,38,4,4,6,82,56,6');
D2.more_comments_num(5);


//-->
</script>




	
	
	
	
		<ul id="commentlisting" class="d2">
			<li id="tree_64552419" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552419" class="commentstatus"></div>
<div id="comment_64552419" class="cw">
	<div id="comment_top_64552419" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552419" name="comment_link_64552419" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552419" onclick="return D2.setFocusComment(64552419)" >Yes</a>


		 	<span id="comment_score_64552419" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552419); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~crow">crow</a>  <span class="uid"><a href="//slashdot.org/~crow">( 16139 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552419"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552419"><p>If you look at job postings on LinkedIn, you'll see vastly more C++ jobs than C jobs.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552419">

</div>
</div>

<div id="replyto_64552419"></div>

<ul id="group_64552419">
	<li id="hiddens_64552419" class="hide"></li>
</ul>

<ul id="commtree_64552419"><li id="tree_64552429" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64552429" class="commentstatus"></div>
<div id="comment_64552429" class="cw">
</div>

<div id="replyto_64552429"></div>

<ul id="group_64552429">
	<li id="hiddens_64552429" class="hide"></li>
</ul>

<ul id="commtree_64552429"><li id="tree_64552449" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552449" class="commentstatus"></div>
<div id="comment_64552449" class="cw">
	<div id="comment_top_64552449" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552449" name="comment_link_64552449" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552449" onclick="return D2.setFocusComment(64552449)" >Re: Yes</a>


		 	<span id="comment_score_64552449" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552449); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~LindleyF">LindleyF</a>  <span class="uid"><a href="//slashdot.org/~LindleyF">( 9395567 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552449"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552449">The problem with C is it's way too easy to get simple stuff wrong. The problem with C++ is it's too easy to make complex stuff look simple. The second problem is easier to tame with experience, though.</div>
	</div>

	<div class="commentSub" id="comment_sub_64552449">

</div>
</div>

<div id="replyto_64552449"></div>

<ul id="group_64552449">
	<li id="hiddens_64552449" class="hide"></li>
</ul>

<ul id="commtree_64552449"><li id="tree_64552693" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552693" class="commentstatus"></div>
<div id="comment_64552693" class="cw">
	<div id="comment_top_64552693" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552693" name="comment_link_64552693" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552693" onclick="return D2.setFocusComment(64552693)" >Re:</a>


		 	<span id="comment_score_64552693" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552693); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Fons_de_spons">Fons_de_spons</a>  <span class="uid"><a href="//slashdot.org/~Fons_de_spons">( 1311177 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552693"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552693">Isn't it the same in C++? Very easy to get simple stuff wrong with a simple typo? Took a course more than a decade ago. It listed programming languages in terms of easiness to make a mistake. From memory, C and C++ were in the top of the list. <br> The course was about safety critical real time applications. The professor clearly was not a fan of C and C++ in that environment.</div>
	</div>

	<div class="commentSub" id="comment_sub_64552693">

</div>
</div>

<div id="replyto_64552693"></div>

<ul id="group_64552693">
	<li id="hiddens_64552693" class="hide"></li>
</ul>

<ul id="commtree_64552693"><li id="tree_64552741" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552741" class="commentstatus"></div>
<div id="comment_64552741" class="cw">
	<div id="comment_top_64552741" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552741" name="comment_link_64552741" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552741" onclick="return D2.setFocusComment(64552741)" >Re:</a>


		 	<span id="comment_score_64552741" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552741); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Dutch+Gun">Dutch Gun</a>  <span class="uid"><a href="//slashdot.org/~Dutch+Gun">( 899105 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552741"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552741"><p>Sort of.  C++ best practices are opt-in, but do eliminate a lot of the most egregious gotchas found in C, especially in "modern" C++, which eliminates most manual memory management.  The difference is that when C++ classes or interfaces are well designed, it's more difficult to misuse them subsewuently.  In C, you need to be careful all the time because those compile-time assurances are not there.  Of course, in compensation, C is a much simpler language overall.</p><p>I'd agree that neither C nor C++ would be at<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552741">

</div>
</div>

<div id="replyto_64552741"></div>

<ul id="group_64552741">
	<li id="hiddens_64552741" class="hide"></li>
</ul>

<ul id="commtree_64552741"><li id="tree_64552937" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552937" class="commentstatus"></div>
<div id="comment_64552937" class="cw">
	<div id="comment_top_64552937" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552937" name="comment_link_64552937" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552937" onclick="return D2.setFocusComment(64552937)" >Re:</a>


		 	<span id="comment_score_64552937" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552937); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Rei">Rei</a>  <span class="uid"><a href="//slashdot.org/~Rei">( 128717 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552937"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552937"><p>Fully agreed. In particular, it's about STL.</p><p>In C, every time you want to allocate memory, you need to remember to free it yourself. With STL, you almost never do.</p><p>With C, every time you want an expanding array, you have to code it yourself (easy to make mistakes).  With STL, you don't.</p><p>With C,  all data structures are written from scratch. With STL, you rarely need to.</p><p>With C, all pointers are dumb.  With STL, you have the option of smart pointers that self-cleanup.</p><p>With C, threading is a mess.  With STL, it's<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552937">

</div>
</div>

<div id="replyto_64552937"></div>

<ul id="group_64552937">
	<li id="hiddens_64552937" class="hide"></li>
</ul>

<ul id="commtree_64552937"><li id="tree_64553155" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553155" class="commentstatus"></div>
<div id="comment_64553155" class="cw">
	<div id="comment_top_64553155" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553155" name="comment_link_64553155" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553155" onclick="return D2.setFocusComment(64553155)" >Re:</a>


		 	<span id="comment_score_64553155" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553155); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~boa">boa</a>  <span class="uid"><a href="//slashdot.org/~boa">( 96754 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553155"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553155"><p>&gt; but shock of all shocks, having code templated to the right variable type and not having to dereference pointers is a good thing, performance-wise.</p><p>So what? If qsort() is the bottleneck (it hardly ever is IME) and inlining solves the problem, one can still implement a faster or equally fast algorithm in C. More work? Of course, but kinda cool too.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553155">

</div>
</div>

<div id="replyto_64553155"></div>

<ul id="group_64553155">
	<li id="hiddens_64553155" class="hide"></li>
</ul>

<ul id="commtree_64553155"><li id="tree_64553525" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553525" class="commentstatus"></div>
<div id="comment_64553525" class="cw">
	<div id="comment_top_64553525" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553525" name="comment_link_64553525" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553525" onclick="return D2.setFocusComment(64553525)" >Re:</a>


		 	<span id="comment_score_64553525" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553525); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Jeremi">Jeremi</a>  <span class="uid"><a href="//slashdot.org/~Jeremi">( 14640 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553525"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553525"><p><div class="quote"><p>So what? If qsort() is the bottleneck (it hardly ever is IME) and inlining solves the problem, one can still implement a faster or equally fast algorithm in C. More work? Of course, but kinda cool too.</p></div><p>Given that a human programmer can only write (and debug, and maintain) a finite number of lines of code per year, the ability to write an algorithm that is optimized for use with a particular datatype is very limited in C.  You'd only do it where it was absolutely necessary, and for everything else you'd fall back to a datatype-agnostic (but slower and more awkward) generic algorithm in the style of qsort().</p><p>With C++, OTOH, you write your datatype-agnostic algorithm as a template, and you get the best of bot<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553525">

</div>
</div>

<div id="replyto_64553525"></div>

<ul id="group_64553525">
	<li id="hiddens_64553525" class="hide"></li>
</ul>

</li><li id="tree_64553551" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553551" class="commentstatus"></div>
<div id="comment_64553551" class="cw">
	<div id="comment_top_64553551" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553551" name="comment_link_64553551" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553551" onclick="return D2.setFocusComment(64553551)" >Re:  Yes</a>


		 	<span id="comment_score_64553551" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553551); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~LindleyF">LindleyF</a>  <span class="uid"><a href="//slashdot.org/~LindleyF">( 9395567 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553551"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553551">More work is a big problem. Maybe not for hobby code, but for anything that's going to be maintained for years by a dozen different engineers, the one-line solution is massively better value than the hand-tuned 20 line solution. Except in very specific cases.</div>
	</div>

	<div class="commentSub" id="comment_sub_64553551">

</div>
</div>

<div id="replyto_64553551"></div>

<ul id="group_64553551">
	<li id="hiddens_64553551" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64553461" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553461" class="commentstatus"></div>
<div id="comment_64553461" class="cw">
	<div id="comment_top_64553461" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553461" name="comment_link_64553461" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553461" onclick="return D2.setFocusComment(64553461)" >Re:  Yes</a>


		 	<span id="comment_score_64553461" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553461); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ArmoredDragon">ArmoredDragon</a>  <span class="uid"><a href="//slashdot.org/~ArmoredDragon">( 3450605 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553461"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553461"><p>And don't forget, that with C++ you also get object oriented disease!</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553461">

</div>
</div>

<div id="replyto_64553461"></div>

<ul id="group_64553461">
	<li id="hiddens_64553461" class="hide"></li>
</ul>

<ul id="commtree_64553461"><li id="tree_64553741" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64553741" class="commentstatus"></div>
<div id="comment_64553741" class="cw">
</div>

<div id="replyto_64553741"></div>

<ul id="group_64553741">
	<li id="hiddens_64553741" class="hide"></li>
</ul>

<ul id="commtree_64553741"><li id="tree_64554203" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64554203" class="commentstatus"></div>
<div id="comment_64554203" class="cw">
	<div id="comment_top_64554203" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64554203" name="comment_link_64554203" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64554203" onclick="return D2.setFocusComment(64554203)" >Re:  Yes</a>


		 	<span id="comment_score_64554203" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64554203); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ArmoredDragon">ArmoredDragon</a>  <span class="uid"><a href="//slashdot.org/~ArmoredDragon">( 3450605 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64554203"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64554203"><p>The main problem with OOP from my perspective is inheritance and all of the baggage that goes with it.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64554203">

</div>
</div>

<div id="replyto_64554203"></div>

<ul id="group_64554203">
	<li id="hiddens_64554203" class="hide"></li>
</ul>

</li></ul></li><li id="hidestring_64553461"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64553461">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64553471" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553471" class="commentstatus"></div>
<div id="comment_64553471" class="cw">
	<div id="comment_top_64553471" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553471" name="comment_link_64553471" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553471" onclick="return D2.setFocusComment(64553471)" >Re:</a>


		 	<span id="comment_score_64553471" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553471); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~F.Ultra">F.Ultra</a>  <span class="uid"><a href="//slashdot.org/~F.Ultra">( 1673484 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553471"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553471">So you throw out all code you've ever written, always start from scratch and never collect/write libraries? Yeah I guess the STL is a godsend then.</div>
	</div>

	<div class="commentSub" id="comment_sub_64553471">

</div>
</div>

<div id="replyto_64553471"></div>

<ul id="group_64553471">
	<li id="hiddens_64553471" class="hide"></li>
</ul>

<ul id="commtree_64553471"><li id="tree_64554151" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64554151" class="commentstatus"></div>
<div id="comment_64554151" class="cw">
	<div id="comment_top_64554151" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64554151" name="comment_link_64554151" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64554151" onclick="return D2.setFocusComment(64554151)" >Re:</a>


		 	<span id="comment_score_64554151" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64554151); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~crobarcro">crobarcro</a>  <span class="uid"><a href="//slashdot.org/~crobarcro">( 6247454 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64554151"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64554151">Are you really coming across a lot of C++ code which doesn't use the STL?</div>
	</div>

	<div class="commentSub" id="comment_sub_64554151">

</div>
</div>

<div id="replyto_64554151"></div>

<ul id="group_64554151">
	<li id="hiddens_64554151" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64553719" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553719" class="commentstatus"></div>
<div id="comment_64553719" class="cw">
	<div id="comment_top_64553719" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553719" name="comment_link_64553719" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553719" onclick="return D2.setFocusComment(64553719)" >Re:</a>


		 	<span id="comment_score_64553719" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553719); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~narcc">narcc</a>  <span class="uid"><a href="//slashdot.org/~narcc">( 412956 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553719"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553719"><p>If only C had things like functions and libraries, you wouldn't need to do so much 'from scratch'.  <br>
&nbsp; <br><nobr> <wbr></nobr>... SMH<nobr> <wbr></nobr>...</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553719">

</div>
</div>

<div id="replyto_64553719"></div>

<ul id="group_64553719">
	<li id="hiddens_64553719" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li></ul></li><li id="tree_64552481" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64552481" class="commentstatus"></div>
<div id="comment_64552481" class="cw">
</div>

<div id="replyto_64552481"></div>

<ul id="group_64552481">
	<li id="hiddens_64552481" class="hide"></li>
</ul>

</li><li id="hidestring_64552429"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64552429">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64552457" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552457" class="commentstatus"></div>
<div id="comment_64552457" class="cw">
	<div id="comment_top_64552457" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552457" name="comment_link_64552457" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552457" onclick="return D2.setFocusComment(64552457)" >Re:</a>


		 	<span id="comment_score_64552457" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552457); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ShanghaiBill">ShanghaiBill</a>  <span class="uid"><a href="//slashdot.org/~ShanghaiBill">( 739463 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552457"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552457"><p>C jobs are more common for embedded work. Unless you're searching for that kinda work, you won't see those ads.</p><p>But the most likely explanation for the TIOBE index is people clicking on both C and C++.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552457">

</div>
</div>

<div id="replyto_64552457"></div>

<ul id="group_64552457">
	<li id="hiddens_64552457" class="hide"></li>
</ul>

<ul id="commtree_64552457"><li id="tree_64552487" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64552487" class="commentstatus"></div>
<div id="comment_64552487" class="cw">
	<div id="comment_top_64552487" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552487" name="comment_link_64552487" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552487" onclick="return D2.setFocusComment(64552487)" >Re:Yes</a>


		 	<span id="comment_score_64552487" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552487); return false"><span class=opt>Score:</span>4</a>, Informative)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~93+Escort+Wagon">93 Escort Wagon</a>  <span class="uid"><a href="//slashdot.org/~93+Escort+Wagon">( 326346 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552487">		
		on Saturday June 15, 2024 @11:38PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552487">#64552487</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552487"><p>C is like perl - when its coders can't figure something out, they don't do a web search - they hop onto some IRC channel that's been running continuously since 1994, and ask there.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552487">
<span class="ind"></span><a id="reply_link_64552487" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64552487" onclick="D2.replyTo(64552487); return false;">Reply to This</a> <span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=64552457" onclick="return D2.selectParent(64552457)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Re:Yes%20by%2093 Escort Wagon%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552487" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552487" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552487" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64552487" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64552487" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64552487"></div>

<ul id="group_64552487">
	<li id="hiddens_64552487" class="hide"></li>
</ul>

<ul id="commtree_64552487"><li id="tree_64552547" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64552547" class="commentstatus"></div>
<div id="comment_64552547" class="cw">
</div>

<div id="replyto_64552547"></div>

<ul id="group_64552547">
	<li id="hiddens_64552547" class="hide"></li>
</ul>

<ul id="commtree_64552547"><li id="tree_64552945" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552945" class="commentstatus"></div>
<div id="comment_64552945" class="cw">
	<div id="comment_top_64552945" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552945" name="comment_link_64552945" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552945" onclick="return D2.setFocusComment(64552945)" >Re:</a>


		 	<span id="comment_score_64552945" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552945); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Rei">Rei</a>  <span class="uid"><a href="//slashdot.org/~Rei">( 128717 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552945"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552945"><p>It's sad to see the fact that C has so few features and you have to basically reinvent every bloody thing from scratch every time touted as a pro of the language.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552945">

</div>
</div>

<div id="replyto_64552945"></div>

<ul id="group_64552945">
	<li id="hiddens_64552945" class="hide"></li>
</ul>

<ul id="commtree_64552945"><li id="tree_64553253" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553253" class="commentstatus"></div>
<div id="comment_64553253" class="cw">
	<div id="comment_top_64553253" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553253" name="comment_link_64553253" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553253" onclick="return D2.setFocusComment(64553253)" >Re: eh</a>


		 	<span id="comment_score_64553253" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553253); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~OrangeTide">OrangeTide</a>  <span class="uid"><a href="//slashdot.org/~OrangeTide">( 124937 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553253"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553253"><p>Reusablecode tends to be very complex. And there is no guarantee that in systems programming that you won't have to dive into that code and understand it. Usually I end up there when dealing with toolchain and compiler issues. As gcc and clang aren't quite as bulletproof as one might imagine, especially if you're off the beaten path. This isn't necessarily an argument to use C over C++, but that there are trade offs that each team much asses independently.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553253">

</div>
</div>

<div id="replyto_64553253"></div>

<ul id="group_64553253">
	<li id="hiddens_64553253" class="hide"></li>
</ul>

</li><li id="tree_64553499" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553499" class="commentstatus"></div>
<div id="comment_64553499" class="cw">
	<div id="comment_top_64553499" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553499" name="comment_link_64553499" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553499" onclick="return D2.setFocusComment(64553499)" >Re:</a>


		 	<span id="comment_score_64553499" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553499); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Jeremi">Jeremi</a>  <span class="uid"><a href="//slashdot.org/~Jeremi">( 14640 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553499"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553499"><p><div class="quote"><p>It's sad to see the fact that C has so few features</p></div><p>That is rather sad (and it's why so many people use C++ or even higher-level languages instead of C for a lot of things), but OTOH there are a number of low-level programming areas where you just need the language to get out of your way, do exactly what you tell it to, and definitely not do any "clever" things for you behind your back.  For those cases, C is very well-suited.</p><p><div class="quote"><p>you have to basically reinvent every bloody thing from scratch every time</p></div><p>Not if you have any kind of foresight as a developer.  If you have to develop a feature, it's well worth your time to make it reusable<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553499">

</div>
</div>

<div id="replyto_64553499"></div>

<ul id="group_64553499">
	<li id="hiddens_64553499" class="hide"></li>
</ul>

<ul id="commtree_64553499"><li id="tree_64553613" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553613" class="commentstatus"></div>
<div id="comment_64553613" class="cw">
	<div id="comment_top_64553613" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553613" name="comment_link_64553613" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553613" onclick="return D2.setFocusComment(64553613)" >Re: eh</a>


		 	<span id="comment_score_64553613" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553613); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~LindleyF">LindleyF</a>  <span class="uid"><a href="//slashdot.org/~LindleyF">( 9395567 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553613"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553613">For example, std::vector instead of realloc.</div>
	</div>

	<div class="commentSub" id="comment_sub_64553613">

</div>
</div>

<div id="replyto_64553613"></div>

<ul id="group_64553613">
	<li id="hiddens_64553613" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64553749" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553749" class="commentstatus"></div>
<div id="comment_64553749" class="cw">
	<div id="comment_top_64553749" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553749" name="comment_link_64553749" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553749" onclick="return D2.setFocusComment(64553749)" >Re:</a>


		 	<span id="comment_score_64553749" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553749); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~narcc">narcc</a>  <span class="uid"><a href="//slashdot.org/~narcc">( 412956 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553749"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553749"><p>I've been using C for more than 30 years.  I've never once felt like I need to "basically reinvent every bloody thing from scratch every time".  Why do you think that is?</p><p>Give it a few minutes, it's not all that hard to puzzle out.  It'll be worth the effort. Once you figure it out, your entire world is going to change.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553749">

</div>
</div>

<div id="replyto_64553749"></div>

<ul id="group_64553749">
	<li id="hiddens_64553749" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="hidestring_64552487"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64552487">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64552951" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552951" class="commentstatus"></div>
<div id="comment_64552951" class="cw">
	<div id="comment_top_64552951" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552951" name="comment_link_64552951" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552951" onclick="return D2.setFocusComment(64552951)" >Re:</a>


		 	<span id="comment_score_64552951" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552951); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~angel'o'sphere">angel'o'sphere</a>  <span class="uid"><a href="//slashdot.org/~angel'o'sphere">( 80593 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552951"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552951"><p>There is more embedded work in C++ than in C.</p><p>People only use C when they have to for a reason, it is just to primitive for serious development in our times.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552951">

</div>
</div>

<div id="replyto_64552951"></div>

<ul id="group_64552951">
	<li id="hiddens_64552951" class="hide"></li>
</ul>

<ul id="commtree_64552951"><li id="tree_64553769" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64553769" class="commentstatus"></div>
<div id="comment_64553769" class="cw">
</div>

<div id="replyto_64553769"></div>

<ul id="group_64553769">
	<li id="hiddens_64553769" class="hide"></li>
</ul>

<ul id="commtree_64553769"><li id="tree_64554285" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64554285" class="commentstatus"></div>
<div id="comment_64554285" class="cw">
	<div id="comment_top_64554285" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64554285" name="comment_link_64554285" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64554285" onclick="return D2.setFocusComment(64554285)" >Re: Yes</a>


		 	<span id="comment_score_64554285" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64554285); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ArmoredDragon">ArmoredDragon</a>  <span class="uid"><a href="//slashdot.org/~ArmoredDragon">( 3450605 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64554285"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64554285"><p>It's even worse than you think. Look at the website listed in his profile.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64554285">

</div>
</div>

<div id="replyto_64554285"></div>

<ul id="group_64554285">
	<li id="hiddens_64554285" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li><li id="tree_64552543" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64552543" class="commentstatus"></div>
<div id="comment_64552543" class="cw">
</div>

<div id="replyto_64552543"></div>

<ul id="group_64552543">
	<li id="hiddens_64552543" class="hide"></li>
</ul>

</li><li id="tree_64552815" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552815" class="commentstatus"></div>
<div id="comment_64552815" class="cw">
	<div id="comment_top_64552815" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552815" name="comment_link_64552815" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552815" onclick="return D2.setFocusComment(64552815)" >Re:</a>


		 	<span id="comment_score_64552815" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552815); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Kisai">Kisai</a>  <span class="uid"><a href="//slashdot.org/~Kisai">( 213879 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552815"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552815"><p>The "evolution of C++" could be described as major blunders and mis-steps, the same ones that Python, PHP, Perl, Java and even Javascript have been doing, and all of those have been repeating the mistakes of C++.</p><p>A programming language needs to be as backwards compatible, FOREVER, otherwise it's a DEAD language. You can not demand that programmers rewrite 20, 30, 40 years of programming just because the idiots in charge of the standard decided to change the function named "strcpy". If you want to change the<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552815">

</div>
</div>

<div id="replyto_64552815"></div>

<ul id="group_64552815">
	<li id="hiddens_64552815" class="hide"></li>
</ul>

<ul id="commtree_64552815"><li id="tree_64553215" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553215" class="commentstatus"></div>
<div id="comment_64553215" class="cw">
	<div id="comment_top_64553215" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553215" name="comment_link_64553215" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553215" onclick="return D2.setFocusComment(64553215)" >Re:</a>


		 	<span id="comment_score_64553215" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553215); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~hjf">hjf</a>  <span class="uid"><a href="//slashdot.org/~hjf">( 703092 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553215"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553215"><p>To be fair, Javascript hasn't broken compatibility since it was invented. It drags the quirks it has had since the beginning where 0=="0" and "0"==0 give different results. What has changed is that some runtimes (node) have dropped support for the things those same runtimes invented in the first place.</p><p>Python, on the other hand, keeps breaking things for the sake of breaking things. Python 3 is fundamentally incompatible with python 2, and major dot releases are only mostly compatible. The problem is that de<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553215">

</div>
</div>

<div id="replyto_64553215"></div>

<ul id="group_64553215">
	<li id="hiddens_64553215" class="hide"></li>
</ul>

<ul id="commtree_64553215"><li id="tree_64554017" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64554017" class="commentstatus"></div>
<div id="comment_64554017" class="cw">
	<div id="comment_top_64554017" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64554017" name="comment_link_64554017" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64554017" onclick="return D2.setFocusComment(64554017)" >Re: Yes</a>


		 	<span id="comment_score_64554017" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64554017); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~madbrain">madbrain</a>  <span class="uid"><a href="//slashdot.org/~madbrain">( 11432 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64554017"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64554017"><p>Is there any reason you can't use an HAOS VM ?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64554017">

</div>
</div>

<div id="replyto_64554017"></div>

<ul id="group_64554017">
	<li id="hiddens_64554017" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="hidestring_64552419"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64552419">2 replies</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64552423" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64552423" class="commentstatus"></div>
<div id="comment_64552423" class="cw">
	<div id="comment_top_64552423" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552423" name="comment_link_64552423" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552423" onclick="return D2.setFocusComment(64552423)" >Parsing Bug</a>


		 	<span id="comment_score_64552423" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552423); return false"><span class=opt>Score:</span>5</a>, Funny)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~martin-boundary">martin-boundary</a>  <span class="uid"><a href="//slashdot.org/~martin-boundary">( 547041 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552423">		
		on Saturday June 15, 2024 @10:43PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552423">#64552423</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552423">Sorry guys, last month we incorrectly parsed "C++" as "C" and "++", our bad!
<p><nobr> <wbr></nobr>;-)</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552423">
<span class="ind"></span><a id="reply_link_64552423" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64552423" onclick="D2.replyTo(64552423); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Parsing Bug%20by%20martin-boundary%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552423" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552423" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552423" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64552423" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64552423" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64552423"></div>

<ul id="group_64552423">
	<li id="hiddens_64552423" class="hide"></li>
</ul>

</li><li id="tree_64552467" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64552467" class="commentstatus"></div>
<div id="comment_64552467" class="cw">
	<div id="comment_top_64552467" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552467" name="comment_link_64552467" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552467" onclick="return D2.setFocusComment(64552467)" >downside</a>


		 	<span id="comment_score_64552467" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552467); return false"><span class=opt>Score:</span>4</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~phantomfive">phantomfive</a>  <span class="uid"><a href="//slashdot.org/~phantomfive">( 622387 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552467">		
		on Saturday June 15, 2024 @11:12PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552467">#64552467</a>)
		<small><a href="//slashdot.org/~phantomfive/journal/" title="Thursday February 18, 2016 @01:58AM" class="user_journal_display">Journal</a> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552467">The downside of C++ is not the many features, features are fine. It's not the backward compatibility, backwards compatibility is fine.<br> <br>
The problem with C++ is the un-intuitive design that leads to many pitfalls that are easily fallen into.</div>
	</div>

	<div class="commentSub" id="comment_sub_64552467">
<span class="ind"></span><a id="reply_link_64552467" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64552467" onclick="D2.replyTo(64552467); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=downside%20by%20phantomfive%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552467" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552467" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552467" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64552467" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64552467" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64552467"></div>

<ul id="group_64552467">
	<li id="hiddens_64552467" class="hide"></li>
</ul>

<ul id="commtree_64552467"><li id="tree_64552513" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552513" class="commentstatus"></div>
<div id="comment_64552513" class="cw">
	<div id="comment_top_64552513" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552513" name="comment_link_64552513" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552513" onclick="return D2.setFocusComment(64552513)" >Re:</a>


		 	<span id="comment_score_64552513" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552513); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ShanghaiBill">ShanghaiBill</a>  <span class="uid"><a href="//slashdot.org/~ShanghaiBill">( 739463 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552513"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552513"><p><div class="quote"><p>The problem with C++ is the un-intuitive design that leads to many pitfalls that are easily fallen into.</p></div><p>In the early 1600s, the Puritans brought cows to the Plymouth Colony, and the cows soon wore paths between their barns and pastures. When walking between their fields, farmers used the same paths. As the settlement grew, more houses were built along the paths, and the paths were widened to accommodate wagons. Soon, larger buildings were constructed along the same roads, and the roads were paved for automobiles. So when people wonder why the streets of Boston are such a mess, it's because the layout of the s<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552513">

</div>
</div>

<div id="replyto_64552513"></div>

<ul id="group_64552513">
	<li id="hiddens_64552513" class="hide"></li>
</ul>

<ul id="commtree_64552513"><li id="tree_64552681" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552681" class="commentstatus"></div>
<div id="comment_64552681" class="cw">
	<div id="comment_top_64552681" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552681" name="comment_link_64552681" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552681" onclick="return D2.setFocusComment(64552681)" >Re:</a>


		 	<span id="comment_score_64552681" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552681); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552681"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552681"><p>Good analogy. Though speaking as a european, I prefer Boston over all the other US cities I've visited. Its far more organic and human than say the blade runner-esque grid system canyons of NYC<nobr> <wbr></nobr>:)</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552681">

</div>
</div>

<div id="replyto_64552681"></div>

<ul id="group_64552681">
	<li id="hiddens_64552681" class="hide"></li>
</ul>

<ul id="commtree_64552681"><li id="tree_64553301" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553301" class="commentstatus"></div>
<div id="comment_64553301" class="cw">
	<div id="comment_top_64553301" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553301" name="comment_link_64553301" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553301" onclick="return D2.setFocusComment(64553301)" >Re: downside</a>


		 	<span id="comment_score_64553301" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553301); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~RightwingNutjob">RightwingNutjob</a>  <span class="uid"><a href="//slashdot.org/~RightwingNutjob">( 1302813 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553301"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553301"><p>Speaking as an American who grew up in the bladerunner land and now lives in Boston, you just don't know any better.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553301">

</div>
</div>

<div id="replyto_64553301"></div>

<ul id="group_64553301">
	<li id="hiddens_64553301" class="hide"></li>
</ul>

<ul id="commtree_64553301"><li id="tree_64553327" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553327" class="commentstatus"></div>
<div id="comment_64553327" class="cw">
	<div id="comment_top_64553327" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553327" name="comment_link_64553327" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553327" onclick="return D2.setFocusComment(64553327)" >Re:</a>


		 	<span id="comment_score_64553327" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553327); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553327"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553327"><p>Heh, if miles of concrete and almost no green apart from in one large park is your thing then go for it.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553327">

</div>
</div>

<div id="replyto_64553327"></div>

<ul id="group_64553327">
	<li id="hiddens_64553327" class="hide"></li>
</ul>

<ul id="commtree_64553327"><li id="tree_64553451" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553451" class="commentstatus"></div>
<div id="comment_64553451" class="cw">
	<div id="comment_top_64553451" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553451" name="comment_link_64553451" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553451" onclick="return D2.setFocusComment(64553451)" >Re:  downside</a>


		 	<span id="comment_score_64553451" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553451); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ArmoredDragon">ArmoredDragon</a>  <span class="uid"><a href="//slashdot.org/~ArmoredDragon">( 3450605 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553451"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553451"><p>If you want that, have a look at Phoenix. Perfect grid so it's easy as hell to navigate. At the same time, there are parks everywhere, generally at least one for every city block, but often more. The reason why is they double as storm basins both to prevent flooding the roads and to replenish the natural groundwater.</p><p>This is as opposed to Los Angeles, whose roads not only make no fucking sense at all and the road signs double as graffiti canvas so you can't read them anyways, but their solution for storm wat<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553451">

</div>
</div>

<div id="replyto_64553451"></div>

<ul id="group_64553451">
	<li id="hiddens_64553451" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li><li id="tree_64553409" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553409" class="commentstatus"></div>
<div id="comment_64553409" class="cw">
	<div id="comment_top_64553409" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553409" name="comment_link_64553409" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553409" onclick="return D2.setFocusComment(64553409)" >Re: downside</a>


		 	<span id="comment_score_64553409" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553409); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ArmoredDragon">ArmoredDragon</a>  <span class="uid"><a href="//slashdot.org/~ArmoredDragon">( 3450605 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553409"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553409"><p>You have to give those cows credit though, because Boston roads were designed better than Los Angeles roads.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553409">

</div>
</div>

<div id="replyto_64553409"></div>

<ul id="group_64553409">
	<li id="hiddens_64553409" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64552771" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552771" class="commentstatus"></div>
<div id="comment_64552771" class="cw">
	<div id="comment_top_64552771" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552771" name="comment_link_64552771" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552771" onclick="return D2.setFocusComment(64552771)" >Re:</a>


		 	<span id="comment_score_64552771" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552771); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~serviscope_minor">serviscope_minor</a>  <span class="uid"><a href="//slashdot.org/~serviscope_minor">( 664417 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552771"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552771"><p>The two aren't separable.</p><p>The upside of C++ is it's strong source compatibility with C. You can take an old C project and slowly upgrade piecemeal without a rewrite making it shorter, simpler and less buggy by slowly introducing C++</p><p><span class="substr"> </span> <a href="https://m.youtube.com/watch?v=0_UttFDnV3k" title="youtube.com">https://m.youtube.com/watch?v=...</a> [youtube.com] </p><p>Also closely related is it's backwards compatibility. Code I wrote and debugged in 2003 still works and I still use it.</p><p>But that leads to the design. The design is only intuitive if you understand C well, and the whole design and ongoing changes to</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552771">

</div>
</div>

<div id="replyto_64552771"></div>

<ul id="group_64552771">
	<li id="hiddens_64552771" class="hide"></li>
</ul>

<ul id="commtree_64552771"><li id="tree_64553057" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553057" class="commentstatus"></div>
<div id="comment_64553057" class="cw">
	<div id="comment_top_64553057" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553057" name="comment_link_64553057" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553057" onclick="return D2.setFocusComment(64553057)" >Re:</a>


		 	<span id="comment_score_64553057" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553057); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~phantomfive">phantomfive</a>  <span class="uid"><a href="//slashdot.org/~phantomfive">( 622387 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553057"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553057"><p><div class="quote"><p>The two aren't separable.</p></div><p>Well that's a lie. You can have intuitive design while still maintaining backwards compatibility.</p><p><div class="quote"><p>Also closely related is it's backwards compatibility. Code I wrote and debugged in 2003 still works and I still use it.</p></div><p>Yeah, C++ deserves a lot of credit for backwards compatibility. Many other languages should learn from that. As Doug Crockford said, "a backwards-incompatible change is an act of violence." (paraphrased). So 10 points to C++.</p><p><div class="quote"><p>The design is only intuitive if you understand C well, and the whole design and ongoing changes to C++.</p></div><p>No that's not true at all. For example, operator overloading is a cool feature and a good idea in some cases, but it's a mess in C++ due to poor design. That has absolutely nothing to do wit<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553057">

</div>
</div>

<div id="replyto_64553057"></div>

<ul id="group_64553057">
	<li id="hiddens_64553057" class="hide"></li>
</ul>

<ul id="commtree_64553057"><li id="tree_64553457" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553457" class="commentstatus"></div>
<div id="comment_64553457" class="cw">
	<div id="comment_top_64553457" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553457" name="comment_link_64553457" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553457" onclick="return D2.setFocusComment(64553457)" >Re:</a>


		 	<span id="comment_score_64553457" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553457); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~serviscope_minor">serviscope_minor</a>  <span class="uid"><a href="//slashdot.org/~serviscope_minor">( 664417 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553457"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553457"><p>Ok, well to continue this conversation let it be noted I'm arguing with the kind of fuckwit who can't grasp the difference between a lie and a difference of opinion.</p><p>Anyway as expected you haven't actually backed up your opinions with anything, so there's no conversation to be had.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553457">

</div>
</div>

<div id="replyto_64553457"></div>

<ul id="group_64553457">
	<li id="hiddens_64553457" class="hide"></li>
</ul>

<ul id="commtree_64553457"><li id="tree_64554197" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64554197" class="commentstatus"></div>
<div id="comment_64554197" class="cw">
	<div id="comment_top_64554197" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64554197" name="comment_link_64554197" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64554197" onclick="return D2.setFocusComment(64554197)" >Re:</a>


		 	<span id="comment_score_64554197" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64554197); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~phantomfive">phantomfive</a>  <span class="uid"><a href="//slashdot.org/~phantomfive">( 622387 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64554197"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64554197"><p><div class="quote"><p>Anyway as expected you haven't actually backed up your opinions with anything,</p> </div><p>You said that it's impossible to create new features in C++ without unintuitive design. You didn't explain why you think that.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64554197">

</div>
</div>

<div id="replyto_64554197"></div>

<ul id="group_64554197">
	<li id="hiddens_64554197" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64553531" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553531" class="commentstatus"></div>
<div id="comment_64553531" class="cw">
	<div id="comment_top_64553531" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553531" name="comment_link_64553531" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553531" onclick="return D2.setFocusComment(64553531)" >Re:</a>


		 	<span id="comment_score_64553531" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553531); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~_merlin">_merlin</a>  <span class="uid"><a href="//slashdot.org/~_merlin">( 160982 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553531"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553531"><blockquote><div><p>For example, operator overloading is a cool feature and a good idea in some cases, but it's a mess in C++ due to poor design. That has absolutely nothing to do with C.</p></div></blockquote><p>Why exactly do you think it's a mess in C++?  It has a few pitfalls:</p><ul>
<li>Overloaded operator &amp;&amp; and operator || lose their short-circuit characteristics.  Fixing this would require somehow splitting it into two functions, so one can be called to evaluate the short-circuit condition before the argument to the other are evaluated.  That woul<span class="substr"> </span></li></ul></div>
	</div>

	<div class="commentSub" id="comment_sub_64553531">

</div>
</div>

<div id="replyto_64553531"></div>

<ul id="group_64553531">
	<li id="hiddens_64553531" class="hide"></li>
</ul>

<ul id="commtree_64553531"><li id="tree_64554043" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64554043" class="commentstatus"></div>
<div id="comment_64554043" class="cw">
	<div id="comment_top_64554043" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64554043" name="comment_link_64554043" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64554043" onclick="return D2.setFocusComment(64554043)" >Re: downside</a>


		 	<span id="comment_score_64554043" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64554043); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~LindleyF">LindleyF</a>  <span class="uid"><a href="//slashdot.org/~LindleyF">( 9395567 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64554043"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64554043">C++ can do a lot of super-useful things and a lot of incredibly stupid things. (Please don't make operator-&gt; do network IO.) Telling which side of that line a particular idea falls on is what you get from experience.</div>
	</div>

	<div class="commentSub" id="comment_sub_64554043">

</div>
</div>

<div id="replyto_64554043"></div>

<ul id="group_64554043">
	<li id="hiddens_64554043" class="hide"></li>
</ul>

</li><li id="tree_64554189" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64554189" class="commentstatus"></div>
<div id="comment_64554189" class="cw">
	<div id="comment_top_64554189" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64554189" name="comment_link_64554189" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64554189" onclick="return D2.setFocusComment(64554189)" >Re:</a>


		 	<span id="comment_score_64554189" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64554189); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~phantomfive">phantomfive</a>  <span class="uid"><a href="//slashdot.org/~phantomfive">( 622387 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64554189"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64554189">You started listing the pitfalls of overloaded operators.</div>
	</div>

	<div class="commentSub" id="comment_sub_64554189">

</div>
</div>

<div id="replyto_64554189"></div>

<ul id="group_64554189">
	<li id="hiddens_64554189" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li><li id="tree_64553485" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553485" class="commentstatus"></div>
<div id="comment_64553485" class="cw">
	<div id="comment_top_64553485" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553485" name="comment_link_64553485" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553485" onclick="return D2.setFocusComment(64553485)" >Re:</a>


		 	<span id="comment_score_64553485" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553485); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Jeremi">Jeremi</a>  <span class="uid"><a href="//slashdot.org/~Jeremi">( 14640 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553485"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553485"><p><div class="quote"><p>The problem with C++ is the un-intuitive design that leads to many pitfalls that are easily fallen into.</p></div><p>Right, but the un-intuitive design is a direct consequence of having so many features and a mandate to maintain near-100% backwards compatibility across 45 years of evolving language and library design.</p><p>Or to put it another way:  it would be possible, in principle, to take C++, chop out all the backwards-compatibility cruft and unsafe or no-longer-considered-best-practices misfeatures, and declare the result to be a new language that would have most or all of the power of C++ with none of the sharp edges.  T<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553485">

</div>
</div>

<div id="replyto_64553485"></div>

<ul id="group_64553485">
	<li id="hiddens_64553485" class="hide"></li>
</ul>

<ul id="commtree_64553485"><li id="tree_64554193" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64554193" class="commentstatus"></div>
<div id="comment_64554193" class="cw">
	<div id="comment_top_64554193" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64554193" name="comment_link_64554193" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64554193" onclick="return D2.setFocusComment(64554193)" >Re:</a>


		 	<span id="comment_score_64554193" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64554193); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~phantomfive">phantomfive</a>  <span class="uid"><a href="//slashdot.org/~phantomfive">( 622387 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64554193"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64554193"><p><div class="quote"><p>Right, but the un-intuitive design is a direct consequence of having so many features and a mandate to maintain near-100% backwards compatibility across 45 years</p></div><p>No, that is false. It is an excuse you believed for some reason.<br> <br>
C is elegant design. C++ is crap design. Pretending that the crap design was necessary because of "backwards compatibility" doesn't even make sense, I don't understand why you believe that.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64554193">

</div>
</div>

<div id="replyto_64554193"></div>

<ul id="group_64554193">
	<li id="hiddens_64554193" class="hide"></li>
</ul>

<ul id="commtree_64554193"><li id="tree_64554347" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64554347" class="commentstatus"></div>
<div id="comment_64554347" class="cw">
	<div id="comment_top_64554347" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64554347" name="comment_link_64554347" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64554347" onclick="return D2.setFocusComment(64554347)" >Re:</a>


		 	<span id="comment_score_64554347" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64554347); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Jeremi">Jeremi</a>  <span class="uid"><a href="//slashdot.org/~Jeremi">( 14640 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64554347"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64554347"><p><div class="quote"><p> Pretending that the crap design was necessary because of "backwards compatibility" doesn't even make sense, I don't understand why you believe that.</p></div><p>You misunderstood.  The <i>implementation</i> of the crap design wasn't necessary -- a better standards committee might well have produced a better design.  Unfortunately, they didn't.</p><p>But once the crap design was finalized and widely adopted, the <i>preservation</i> of the crap design became necessary, because once a large number of people have written software that relies on C++ working a certain way, to break all that code would be language suicide.</p><p>And that's why C++ remains difficult and error-prone today.  Even if ev<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64554347">

</div>
</div>

<div id="replyto_64554347"></div>

<ul id="group_64554347">
	<li id="hiddens_64554347" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li><li id="tree_64552485" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64552485" class="commentstatus"></div>
<div id="comment_64552485" class="cw">
	<div id="comment_top_64552485" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552485" name="comment_link_64552485" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552485" onclick="return D2.setFocusComment(64552485)" >Do you really care?</a>


		 	<span id="comment_score_64552485" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552485); return false"><span class=opt>Score:</span>5</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Mr.+Dollar+Ton">Mr. Dollar Ton</a>  <span class="uid"><a href="//slashdot.org/~Mr.+Dollar+Ton">( 5495648 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552485">		
		on Saturday June 15, 2024 @11:34PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552485">#64552485</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552485"><p>Unless you're a limp one-language trick, you learn to write reasonable code several languages quite early in your career and then you just add more.</p><p>I don't know what car analogy is there, maybe defining your auto mechanic skills by the brand of wrenches you use.</p><p>Who does that?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552485">
<span class="ind"></span><a id="reply_link_64552485" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64552485" onclick="D2.replyTo(64552485); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Do you really care?%20by%20Mr. Dollar Ton%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552485" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552485" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552485" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64552485" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64552485" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64552485"></div>

<ul id="group_64552485">
	<li id="hiddens_64552485" class="hide"></li>
</ul>

<ul id="commtree_64552485"><li id="tree_64552503" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552503" class="commentstatus"></div>
<div id="comment_64552503" class="cw">
	<div id="comment_top_64552503" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552503" name="comment_link_64552503" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552503" onclick="return D2.setFocusComment(64552503)" >Re:</a>


		 	<span id="comment_score_64552503" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552503); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~phantomfive">phantomfive</a>  <span class="uid"><a href="//slashdot.org/~phantomfive">( 622387 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552503"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552503">I wish I could choose the programming language I use. I have strong preferences. Unfortunately, I never get to use the language I want because I want to get paid.</div>
	</div>

	<div class="commentSub" id="comment_sub_64552503">

</div>
</div>

<div id="replyto_64552503"></div>

<ul id="group_64552503">
	<li id="hiddens_64552503" class="hide"></li>
</ul>

<ul id="commtree_64552503"><li id="tree_64552571" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552571" class="commentstatus"></div>
<div id="comment_64552571" class="cw">
	<div id="comment_top_64552571" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552571" name="comment_link_64552571" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552571" onclick="return D2.setFocusComment(64552571)" >Re:</a>


		 	<span id="comment_score_64552571" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552571); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Mr.+Dollar+Ton">Mr. Dollar Ton</a>  <span class="uid"><a href="//slashdot.org/~Mr.+Dollar+Ton">( 5495648 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552571"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552571"><p>Yes, so eventually you learn all that matter. And some that don't.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552571">

</div>
</div>

<div id="replyto_64552571"></div>

<ul id="group_64552571">
	<li id="hiddens_64552571" class="hide"></li>
</ul>

<ul id="commtree_64552571"><li id="tree_64552715" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552715" class="commentstatus"></div>
<div id="comment_64552715" class="cw">
	<div id="comment_top_64552715" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552715" name="comment_link_64552715" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552715" onclick="return D2.setFocusComment(64552715)" >Re:</a>


		 	<span id="comment_score_64552715" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552715); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~phantomfive">phantomfive</a>  <span class="uid"><a href="//slashdot.org/~phantomfive">( 622387 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552715"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552715">Yeap. It's not that hard.</div>
	</div>

	<div class="commentSub" id="comment_sub_64552715">

</div>
</div>

<div id="replyto_64552715"></div>

<ul id="group_64552715">
	<li id="hiddens_64552715" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64552671" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552671" class="commentstatus"></div>
<div id="comment_64552671" class="cw">
	<div id="comment_top_64552671" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552671" name="comment_link_64552671" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552671" onclick="return D2.setFocusComment(64552671)" >"Reasonable" code?</a>


		 	<span id="comment_score_64552671" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552671); return false"><span class=opt>Score:</span>2</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552671"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552671"><p>I hate to break the news to you my friend but a lot of employers want a lot more than "reasonable" code particularly in aerospace and defence where I've worked (where admittedly is usually more a case of Ada and restricted versions of C than C++) so you won't get away with moderate knowledge of a language, you need to be absolutely on point.</p><p>"the brand of wrenches you use."</p><p>C++ is not a wrench, its more like a full workshop including OBD diagnostics and it literally will takes years to get up to proper speed<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552671">

</div>
</div>

<div id="replyto_64552671"></div>

<ul id="group_64552671">
	<li id="hiddens_64552671" class="hide"></li>
</ul>

<ul id="commtree_64552671"><li id="tree_64552703" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64552703" class="commentstatus"></div>
<div id="comment_64552703" class="cw">
</div>

<div id="replyto_64552703"></div>

<ul id="group_64552703">
	<li id="hiddens_64552703" class="hide"></li>
</ul>

<ul id="commtree_64552703"><li id="tree_64552717" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552717" class="commentstatus"></div>
<div id="comment_64552717" class="cw">
	<div id="comment_top_64552717" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552717" name="comment_link_64552717" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552717" onclick="return D2.setFocusComment(64552717)" >Re:</a>


		 	<span id="comment_score_64552717" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552717); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552717"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552717"><p>If you don't know the difference between the meanings of reasonable and very good then go buy yourself a dictionary. I'm reasonable at driving but you won't find me on an F1 starting grid anytime soon.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552717">

</div>
</div>

<div id="replyto_64552717"></div>

<ul id="group_64552717">
	<li id="hiddens_64552717" class="hide"></li>
</ul>

<ul id="commtree_64552717"><li id="tree_64552999" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552999" class="commentstatus"></div>
<div id="comment_64552999" class="cw">
	<div id="comment_top_64552999" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552999" name="comment_link_64552999" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552999" onclick="return D2.setFocusComment(64552999)" >Re: "Reasonable" code?</a>


		 	<span id="comment_score_64552999" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552999); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~home-electro.com">home-electro.com</a>  <span class="uid"><a href="//slashdot.org/~home-electro.com">( 1284676 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552999"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552999"><p>Don't be an ass</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552999">

</div>
</div>

<div id="replyto_64552999"></div>

<ul id="group_64552999">
	<li id="hiddens_64552999" class="hide"></li>
</ul>

<ul id="commtree_64552999"><li id="tree_64553315" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553315" class="commentstatus"></div>
<div id="comment_64553315" class="cw">
	<div id="comment_top_64553315" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553315" name="comment_link_64553315" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553315" onclick="return D2.setFocusComment(64553315)" >Re:</a>


		 	<span id="comment_score_64553315" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553315); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553315"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553315"><p>Oh look, some halfwit who learnt "to code" with html or similar thinks he understands what real dev is about.</p><p>Go play with your web designer mate.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553315">

</div>
</div>

<div id="replyto_64553315"></div>

<ul id="group_64553315">
	<li id="hiddens_64553315" class="hide"></li>
</ul>

<ul id="commtree_64553315"><li id="tree_64553401" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64553401" class="commentstatus"></div>
<div id="comment_64553401" class="cw">
</div>

<div id="replyto_64553401"></div>

<ul id="group_64553401">
	<li id="hiddens_64553401" class="hide"></li>
</ul>

<ul id="commtree_64553401"><li id="tree_64553729" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553729" class="commentstatus"></div>
<div id="comment_64553729" class="cw">
	<div id="comment_top_64553729" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553729" name="comment_link_64553729" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553729" onclick="return D2.setFocusComment(64553729)" >Re:  "Reasonable" code?</a>


		 	<span id="comment_score_64553729" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553729); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553729"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553729"><p>Diddums, was someone triggered?<nobr> <wbr></nobr>:)</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553729">

</div>
</div>

<div id="replyto_64553729"></div>

<ul id="group_64553729">
	<li id="hiddens_64553729" class="hide"></li>
</ul>

</li></ul></li><li id="hidestring_64553315"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64553315">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li></ul></li></ul></li></ul></li><li id="hidestring_64552671"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64552671">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64552699" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552699" class="commentstatus"></div>
<div id="comment_64552699" class="cw">
	<div id="comment_top_64552699" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552699" name="comment_link_64552699" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552699" onclick="return D2.setFocusComment(64552699)" >Re:</a>


		 	<span id="comment_score_64552699" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552699); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~dvice">dvice</a>  <span class="uid"><a href="//slashdot.org/~dvice">( 6309704 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552699"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552699"><p>If you are starting a project with budget of 10 million dollars or more and it is estimated that the project will be online for a decade or two and there are other requirements for the projects also, do you care what language you use in the project?</p><p>You need to worry<br>- Where do you get the developers for the project?<br>- Where do you get new developers after a decade?<br>- Is the language active after a decade? Does it get security updates?<br>- Does the language have license costs or legal issues?<br>- Does the language wo<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552699">

</div>
</div>

<div id="replyto_64552699"></div>

<ul id="group_64552699">
	<li id="hiddens_64552699" class="hide"></li>
</ul>

<ul id="commtree_64552699"><li id="tree_64552731" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552731" class="commentstatus"></div>
<div id="comment_64552731" class="cw">
	<div id="comment_top_64552731" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552731" name="comment_link_64552731" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552731" onclick="return D2.setFocusComment(64552731)" >Re:</a>


		 	<span id="comment_score_64552731" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552731); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Mr.+Dollar+Ton">Mr. Dollar Ton</a>  <span class="uid"><a href="//slashdot.org/~Mr.+Dollar+Ton">( 5495648 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552731"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552731"><p>Yes, you need to worry about many things, and most of the things you need to worry about are quite tangential to the "popularity" of the language today as measured by the number of Google searches of the language name in the past month.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552731">

</div>
</div>

<div id="replyto_64552731"></div>

<ul id="group_64552731">
	<li id="hiddens_64552731" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64552495" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552495" class="commentstatus"></div>
<div id="comment_64552495" class="cw">
	<div id="comment_top_64552495" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552495" name="comment_link_64552495" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552495" onclick="return D2.setFocusComment(64552495)" >Again?</a>


		 	<span id="comment_score_64552495" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552495); return false"><span class=opt>Score:</span>2</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~alantus">alantus</a>  <span class="uid"><a href="//slashdot.org/~alantus">( 882150 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552495"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552495">Couldn't care less about this Tiobe thing, it's a very flawed method to measure language popularity.<br>
Anyone who makes any kind of decision based on this is out of his mind.<br>
Who keeps submitting this?</div>
	</div>

	<div class="commentSub" id="comment_sub_64552495">

</div>
</div>

<div id="replyto_64552495"></div>

<ul id="group_64552495">
	<li id="hiddens_64552495" class="hide"></li>
</ul>

<ul id="commtree_64552495"><li id="tree_64552523" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552523" class="commentstatus"></div>
<div id="comment_64552523" class="cw">
	<div id="comment_top_64552523" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552523" name="comment_link_64552523" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552523" onclick="return D2.setFocusComment(64552523)" >Re:</a>


		 	<span id="comment_score_64552523" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552523); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ShanghaiBill">ShanghaiBill</a>  <span class="uid"><a href="//slashdot.org/~ShanghaiBill">( 739463 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552523"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552523"><p><div class="quote"><p>Anyone who makes any kind of decision based on this is out of his mind.</p></div><p>The TIOBE index is flawed but is a rough measure of popularity.</p><p>Popularity is important when choosing a language. The more popular a language is, the easier it will be to hire proficient programmers. There will also be more libraries, documentation, and support available.</p><p>Also, there are reasons why unpopular languages are unpopular. I've worked with Ada, Ruby, and Haskell. I am very happy to watch them die.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552523">

</div>
</div>

<div id="replyto_64552523"></div>

<ul id="group_64552523">
	<li id="hiddens_64552523" class="hide"></li>
</ul>

<ul id="commtree_64552523"><li id="tree_64552707" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552707" class="commentstatus"></div>
<div id="comment_64552707" class="cw">
	<div id="comment_top_64552707" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552707" name="comment_link_64552707" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552707" onclick="return D2.setFocusComment(64552707)" >Re:</a>


		 	<span id="comment_score_64552707" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552707); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~toutankh">toutankh</a>  <span class="uid"><a href="//slashdot.org/~toutankh">( 1544253 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552707"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552707"><p><div class="quote"><p>The more popular a language is, the easier it will be to hire proficient programmers.</p></div><p>And it will be even easier to hire bad programmers, because the market is saturated with them.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552707">

</div>
</div>

<div id="replyto_64552707"></div>

<ul id="group_64552707">
	<li id="hiddens_64552707" class="hide"></li>
</ul>

<ul id="commtree_64552707"><li id="tree_64553447" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553447" class="commentstatus"></div>
<div id="comment_64553447" class="cw">
	<div id="comment_top_64553447" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553447" name="comment_link_64553447" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553447" onclick="return D2.setFocusComment(64553447)" >Re:</a>


		 	<span id="comment_score_64553447" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553447); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ShanghaiBill">ShanghaiBill</a>  <span class="uid"><a href="//slashdot.org/~ShanghaiBill">( 739463 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553447"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553447"><p>You can find bad programmers for any language.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553447">

</div>
</div>

<div id="replyto_64553447"></div>

<ul id="group_64553447">
	<li id="hiddens_64553447" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64552709" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552709" class="commentstatus"></div>
<div id="comment_64552709" class="cw">
	<div id="comment_top_64552709" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552709" name="comment_link_64552709" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552709" onclick="return D2.setFocusComment(64552709)" >Re:</a>


		 	<span id="comment_score_64552709" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552709); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~vadim_t">vadim_t</a>  <span class="uid"><a href="//slashdot.org/~vadim_t">( 324782 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552709"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552709"><p>It's not flawed, that would imply it does an overall sane thing but in a way that's not quite right. TIOBE is not even wrong.</p><p>They just look at an arbitrary number returned by some search engines then apply ill-defined fudge factors.</p><p>Problem is, Google results have little to do with actual usage. Somebody had a spat and duplicated a Wiki? Language got more popular! Popular site dropped off the net? The reverse. A programming language takes the absolutely trivial step to maximize of "$LANG programming"? Sudden<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552709">

</div>
</div>

<div id="replyto_64552709"></div>

<ul id="group_64552709">
	<li id="hiddens_64552709" class="hide"></li>
</ul>

</li><li id="tree_64552983" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552983" class="commentstatus"></div>
<div id="comment_64552983" class="cw">
	<div id="comment_top_64552983" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552983" name="comment_link_64552983" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552983" onclick="return D2.setFocusComment(64552983)" >Re:</a>


		 	<span id="comment_score_64552983" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552983); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~angel'o'sphere">angel'o'sphere</a>  <span class="uid"><a href="//slashdot.org/~angel'o'sphere">( 80593 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552983"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552983"><p>TIOBE does not measure popularity.<br>It counts google search requests and stack over flow hits.</p><p>In a certain sense it counts unpopularity.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552983">

</div>
</div>

<div id="replyto_64552983"></div>

<ul id="group_64552983">
	<li id="hiddens_64552983" class="hide"></li>
</ul>

<ul id="commtree_64552983"><li id="tree_64553011" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553011" class="commentstatus"></div>
<div id="comment_64553011" class="cw">
	<div id="comment_top_64553011" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553011" name="comment_link_64553011" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553011" onclick="return D2.setFocusComment(64553011)" >Re: Again?</a>


		 	<span id="comment_score_64553011" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553011); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~home-electro.com">home-electro.com</a>  <span class="uid"><a href="//slashdot.org/~home-electro.com">( 1284676 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553011"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553011"><p>That is an unique point of view.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553011">

</div>
</div>

<div id="replyto_64553011"></div>

<ul id="group_64553011">
	<li id="hiddens_64553011" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li><li id="tree_64552497" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552497" class="commentstatus"></div>
<div id="comment_64552497" class="cw">
	<div id="comment_top_64552497" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552497" name="comment_link_64552497" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552497" onclick="return D2.setFocusComment(64552497)" >Read the Definition of their ranking.</a>


		 	<span id="comment_score_64552497" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552497); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~IcyWolfy">IcyWolfy</a>  <span class="uid"><a href="//slashdot.org/~IcyWolfy">( 514669 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552497"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552497"><p>&gt; The ratings are calculated by counting hits of the most popular search engines. The search query that is used is<br>&gt; +" programming"<br>&gt; The number of hits determines the ratings of a language</p><p>So, what they are saying is that python has the most number of people posting online for help on how to do basic stuff.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552497">

</div>
</div>

<div id="replyto_64552497"></div>

<ul id="group_64552497">
	<li id="hiddens_64552497" class="hide"></li>
</ul>

<ul id="commtree_64552497"><li id="tree_64552499" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552499" class="commentstatus"></div>
<div id="comment_64552499" class="cw">
	<div id="comment_top_64552499" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552499" name="comment_link_64552499" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552499" onclick="return D2.setFocusComment(64552499)" >Re:</a>


		 	<span id="comment_score_64552499" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552499); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~IcyWolfy">IcyWolfy</a>  <span class="uid"><a href="//slashdot.org/~IcyWolfy">( 514669 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552499"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552499"><p>Should have read +"{language} programming".</p><p>Always forget that SL can't post angle brackets in comments.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552499">

</div>
</div>

<div id="replyto_64552499"></div>

<ul id="group_64552499">
	<li id="hiddens_64552499" class="hide"></li>
</ul>

<ul id="commtree_64552499"><li id="tree_64553615" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553615" class="commentstatus"></div>
<div id="comment_64553615" class="cw">
	<div id="comment_top_64553615" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553615" name="comment_link_64553615" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553615" onclick="return D2.setFocusComment(64553615)" >Re:</a>


		 	<span id="comment_score_64553615" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553615); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~drinkypoo">drinkypoo</a>  <span class="uid"><a href="//slashdot.org/~drinkypoo">( 153816 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553615"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553615"><p>&amp;lt; and &amp;gt; produce &lt; and &gt;</p><p>&amp;amp; to produce &amp;</p><p>Slashdot supports a few other named HTML entities, not sure if there is a list. &amp;mdash; for &mdash; and &amp;ndash; for &ndash; are the only ones that come to mind ATM.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553615">

</div>
</div>

<div id="replyto_64553615"></div>

<ul id="group_64553615">
	<li id="hiddens_64553615" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64552651" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552651" class="commentstatus"></div>
<div id="comment_64552651" class="cw">
	<div id="comment_top_64552651" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552651" name="comment_link_64552651" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552651" onclick="return D2.setFocusComment(64552651)" >Finally!</a>


		 	<span id="comment_score_64552651" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552651); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Bu11etmagnet">Bu11etmagnet</a>  <span class="uid"><a href="//slashdot.org/~Bu11etmagnet">( 1071376 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552651"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552651">Eat your heart out, Linus Torvalds!
<p><nobr> <wbr></nobr>:)</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552651">

</div>
</div>

<div id="replyto_64552651"></div>

<ul id="group_64552651">
	<li id="hiddens_64552651" class="hide"></li>
</ul>

<ul id="commtree_64552651"><li id="tree_64552805" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552805" class="commentstatus"></div>
<div id="comment_64552805" class="cw">
	<div id="comment_top_64552805" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552805" name="comment_link_64552805" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552805" onclick="return D2.setFocusComment(64552805)" >Re: Finally!</a>


		 	<span id="comment_score_64552805" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552805); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~eclectro">eclectro</a>  <span class="uid"><a href="//slashdot.org/~eclectro">( 227083 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552805"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552805"><p>No, Linux did have an inkling of what he was doing. Programmers do not want to hear it but C++ is on a downward slope. The problem being it is an inherently insecure language with possible buffer overflow and memory type exploits that remain a possibility within the C++ world. It's a needless liability for companies when there are much more secure languages arriving (aka rust). Lawyers will be able to litigate that these new languages are not being used if there happens to be a bad data breach!</p><p>Companies are<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552805">

</div>
</div>

<div id="replyto_64552805"></div>

<ul id="group_64552805">
	<li id="hiddens_64552805" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64552655" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552655" class="commentstatus"></div>
<div id="comment_64552655" class="cw">
	<div id="comment_top_64552655" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552655" name="comment_link_64552655" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552655" onclick="return D2.setFocusComment(64552655)" >The main strengths of C++ are its performance</a>


		 	<span id="comment_score_64552655" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552655); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~EkriirkE">EkriirkE</a>  <span class="uid"><a href="//slashdot.org/~EkriirkE">( 1075937 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552655"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552655">LOL

Thanks for that. Now I know how far to trust these results</div>
	</div>

	<div class="commentSub" id="comment_sub_64552655">

</div>
</div>

<div id="replyto_64552655"></div>

<ul id="group_64552655">
	<li id="hiddens_64552655" class="hide"></li>
</ul>

</li><li id="tree_64552663" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552663" class="commentstatus"></div>
<div id="comment_64552663" class="cw">
	<div id="comment_top_64552663" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552663" name="comment_link_64552663" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552663" onclick="return D2.setFocusComment(64552663)" >Hmmm. </a>


		 	<span id="comment_score_64552663" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552663); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~jd">jd</a>  <span class="uid"><a href="//slashdot.org/~jd">( 1658 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552663"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552663"><p>A language that evolves fast has, by definition, both constructs that were poorly thought-out and a lack of constructs that developers actually need.</p><p>Since backwards compatibility is built-in, it also has a vast amount of cruft. And this is the really bad part. That cruft will include constructs that are rarely, if ever, used, so are rarely, if ever, tested. It also has to handle an ever-increasing number of cases, which means the compiler is more complex (so will contain more bugs) and will be slower (impac<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552663">

</div>
</div>

<div id="replyto_64552663"></div>

<ul id="group_64552663">
	<li id="hiddens_64552663" class="hide"></li>
</ul>

<ul id="commtree_64552663"><li id="tree_64552677" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552677" class="commentstatus"></div>
<div id="comment_64552677" class="cw">
	<div id="comment_top_64552677" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552677" name="comment_link_64552677" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552677" onclick="return D2.setFocusComment(64552677)" >Re:</a>


		 	<span id="comment_score_64552677" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552677); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552677"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552677"><p>IMO its not so much the backwards compat thats the problem , its the endless "this seemed like a good idea in the bar after smoking a few tokes" features that no one ever asked for that they bung in and is just more crap you need to learn because you can guarantee that someone somewhere will have used it. Eg the 2017 fold syntax which looks useful but is actually fairly useless except in a few niche cases. Also the fuckton of meta constructs - is_constructable() etc which I can't even imagine a use case for<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552677">

</div>
</div>

<div id="replyto_64552677"></div>

<ul id="group_64552677">
	<li id="hiddens_64552677" class="hide"></li>
</ul>

<ul id="commtree_64552677"><li id="tree_64553565" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553565" class="commentstatus"></div>
<div id="comment_64553565" class="cw">
	<div id="comment_top_64553565" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553565" name="comment_link_64553565" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553565" onclick="return D2.setFocusComment(64553565)" >Re:</a>


		 	<span id="comment_score_64553565" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553565); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Jeremi">Jeremi</a>  <span class="uid"><a href="//slashdot.org/~Jeremi">( 14640 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553565"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553565"><p><div class="quote"><p> Wtf? Just add the keyword "pure" FFS!</p> </div><p>The counterargument is that adding the new keyword would break all existing code that uses "pure" as a variable or function name or etc.</p><p>So for consistency, the C++ committee decided to do what they usually do:  sometimes add a new keyword (potential breakage be damned) and sometimes adopt a weird syntax to avoid adding a new keyword.<nobr> <wbr></nobr>/s</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553565">

</div>
</div>

<div id="replyto_64553565"></div>

<ul id="group_64553565">
	<li id="hiddens_64553565" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64552785" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64552785" class="commentstatus"></div>
<div id="comment_64552785" class="cw">
	<div id="comment_top_64552785" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552785" name="comment_link_64552785" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552785" onclick="return D2.setFocusComment(64552785)" >Re:Hmmm. </a>


		 	<span id="comment_score_64552785" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552785); return false"><span class=opt>Score:</span>4</a>, Interesting)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~serviscope_minor">serviscope_minor</a>  <span class="uid"><a href="//slashdot.org/~serviscope_minor">( 664417 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552785">		
		on Sunday June 16, 2024 @06:50AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552785">#64552785</a>)
		<small><a href="//slashdot.org/~serviscope_minor/journal/" title="Wednesday April 05, 2023 @04:34AM" class="user_journal_display">Journal</a> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552785"><p>I'm going to dispute most of this. C++ isn't perfect but...</p><p>C++ hasn't evolved fast. If anything it's been pretty slow, especially the painfully long 98 to 11 gap. It's now 45 years old, old enough to be the parent of some people with "senior" job titles.</p><p>C++ doesn't have vast amounts of "cruft" as you call it. It certainly has rarely used features, but they are things that you absolutely need but rarely and that serve as foundations.</p><p>If you are using volatile a lot, or lock free concurrency constructs a lot, or manual memory allocation a lot, poor explicit lifetime management a lot, then you are likely doing something wrong. But you need all of those in the language because without low level constructs you cannot build the higher level ones. They should all generally be wrapped and rarely seen floating in the wild, but you still need them.</p><p>
&nbsp; So I challenge you, find some features which fit the mould of "cruft" especially ones that have complex interactions that cause problems and for which there is a reasonable alternative.</p><p>Many many attempts have been made to "overhaul" C++ without keeping compatibility.  Many have failed, some have succeeded in their own right but very very few have even managed to scratch the domains where C++ is very good.</p><p>If it's not compatible in some way, then you lose the advantage of decades of very vert solid libraries. So really it has to offer something more than a temporary cessation of "cruft".</p><p>But no, I disagree that C++ is massively over engineered.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552785">
<span class="ind"></span><a id="reply_link_64552785" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64552785" onclick="D2.replyTo(64552785); return false;">Reply to This</a> <span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=64552663" onclick="return D2.selectParent(64552663)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Re:Hmmm. %20by%20serviscope_minor%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552785" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552785" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552785" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64552785" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64552785" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64552785"></div>

<ul id="group_64552785">
	<li id="hiddens_64552785" class="hide"></li>
</ul>

<ul id="commtree_64552785"><li id="tree_64553033" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553033" class="commentstatus"></div>
<div id="comment_64553033" class="cw">
	<div id="comment_top_64553033" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553033" name="comment_link_64553033" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553033" onclick="return D2.setFocusComment(64553033)" >Re:</a>


		 	<span id="comment_score_64553033" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553033); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~angel'o'sphere">angel'o'sphere</a>  <span class="uid"><a href="//slashdot.org/~angel'o'sphere">( 80593 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553033"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553033"><p>The only big problem problem with C++ is that they reuse(d) C keywords that make no sense without reading the manual and then _memorizing_ them.</p><p>And to my disappointment some other languages took over those keywords from C++ (like Java and C#).</p><p>Examples: static, auto.</p><p>A "static" member of a class is most certainly in no way static like an English dictionary would define the word.<br>This makes teaching languages a bit more complex than it should be. "auto" is a corner case, assuming you do not know what auto means<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553033">

</div>
</div>

<div id="replyto_64553033"></div>

<ul id="group_64553033">
	<li id="hiddens_64553033" class="hide"></li>
</ul>

<ul id="commtree_64553033"><li id="tree_64553183" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553183" class="commentstatus"></div>
<div id="comment_64553183" class="cw">
	<div id="comment_top_64553183" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553183" name="comment_link_64553183" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553183" onclick="return D2.setFocusComment(64553183)" >Re: Hmmm.</a>


		 	<span id="comment_score_64553183" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553183); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~home-electro.com">home-electro.com</a>  <span class="uid"><a href="//slashdot.org/~home-electro.com">( 1284676 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553183"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553183"><p>Complaining over the usage of word "static".... How original. Static refers to allocation of a variable... It's not hard to understand</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553183">

</div>
</div>

<div id="replyto_64553183"></div>

<ul id="group_64553183">
	<li id="hiddens_64553183" class="hide"></li>
</ul>

<ul id="commtree_64553183"><li id="tree_64553207" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553207" class="commentstatus"></div>
<div id="comment_64553207" class="cw">
	<div id="comment_top_64553207" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553207" name="comment_link_64553207" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553207" onclick="return D2.setFocusComment(64553207)" >Re:</a>


		 	<span id="comment_score_64553207" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553207); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~angel'o'sphere">angel'o'sphere</a>  <span class="uid"><a href="//slashdot.org/~angel'o'sphere">( 80593 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553207"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553207"><p>Then look up the different meanings of static in C/C++/Java.</p><p>It does not mean,. what you think it means.</p><p>And in case you want to reread your sentence: <i>Static refers to allocation of a variable</i> - strictly speaking: it is wrong.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553207">

</div>
</div>

<div id="replyto_64553207"></div>

<ul id="group_64553207">
	<li id="hiddens_64553207" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64553361" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553361" class="commentstatus"></div>
<div id="comment_64553361" class="cw">
	<div id="comment_top_64553361" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553361" name="comment_link_64553361" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553361" onclick="return D2.setFocusComment(64553361)" >Re:</a>


		 	<span id="comment_score_64553361" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553361); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~WaffleMonster">WaffleMonster</a>  <span class="uid"><a href="//slashdot.org/~WaffleMonster">( 969671 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553361"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553361"><p><div class="quote"><p>A "static" member of a class is most certainly in no way static like an English dictionary would define the word.</p></div><p>I looked up the word static in the dictionary and it lists 9 different definitions.  Static simply means the thing (e.g. function, variable) is scoped to the TU rather than the container (e.g. function or class) in which it was defined.</p><p>One of the many definitions of static is stationary which seems apt.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553361">

</div>
</div>

<div id="replyto_64553361"></div>

<ul id="group_64553361">
	<li id="hiddens_64553361" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64554341" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64554341" class="commentstatus"></div>
<div id="comment_64554341" class="cw">
	<div id="comment_top_64554341" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64554341" name="comment_link_64554341" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64554341" onclick="return D2.setFocusComment(64554341)" >Re:</a>


		 	<span id="comment_score_64554341" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64554341); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~WarlockD">WarlockD</a>  <span class="uid"><a href="//slashdot.org/~WarlockD">( 623872 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64554341"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64554341">It came a long way from making sure the first arguments in a C function was a pointer to your context.  I hate to say it, but your right.  It takes a while to obsolute functions.  It took till, er I think C++20, that volatile was finally obsoleted now that we have std::atomics.  That's really what has being going on is moving all the low level stuff into the library so you just need to modify the library rather than the compiler for this stuff.<br> <br>
Still, kind of wish there was some clarification on what const</div>
	</div>

	<div class="commentSub" id="comment_sub_64554341">

</div>
</div>

<div id="replyto_64554341"></div>

<ul id="group_64554341">
	<li id="hiddens_64554341" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64553489" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553489" class="commentstatus"></div>
<div id="comment_64553489" class="cw">
	<div id="comment_top_64553489" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553489" name="comment_link_64553489" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553489" onclick="return D2.setFocusComment(64553489)" >Re:</a>


		 	<span id="comment_score_64553489" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553489); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553489"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553489"><p>Agreed. When C++ was designed, nobody expected it to be used as a general purpose language. Oh, and look, it is not. For example, things like inefficient virtual function dispatch are a dead giveaway that it is not even a proper OO language. Another is the general non-orthogonal nature of visibility, which  is screwed up to an impressive level. There are more. This is a complex, hard to handle monster with surprises in too many places and it should never have seen the light of day.</p><p>My take is the only reason<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553489">

</div>
</div>

<div id="replyto_64553489"></div>

<ul id="group_64553489">
	<li id="hiddens_64553489" class="hide"></li>
</ul>

</li><li id="tree_64553555" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553555" class="commentstatus"></div>
<div id="comment_64553555" class="cw">
	<div id="comment_top_64553555" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553555" name="comment_link_64553555" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553555" onclick="return D2.setFocusComment(64553555)" >Re:</a>


		 	<span id="comment_score_64553555" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553555); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Jeremi">Jeremi</a>  <span class="uid"><a href="//slashdot.org/~Jeremi">( 14640 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553555"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553555"><p><div class="quote"><p>Really, C++ needs a complete overhaul, backwards compatibility be damned.</p></div><p>You're not wrong -- the only problem is, backwards compatibility with existing C++ codebases (and existing C++'s developers' brains) is the main reason for C++'s continued popularity.  The beautiful shiny language that comes out at the end of your overhaul wouldn't be C++ in any meaningful sense of the word, so almost nobody would use it.  (The people who <i>would</i> use it are already using Rust<nobr> <wbr></nobr>;) )</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553555">

</div>
</div>

<div id="replyto_64553555"></div>

<ul id="group_64553555">
	<li id="hiddens_64553555" class="hide"></li>
</ul>

</li><li id="tree_64553755" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553755" class="commentstatus"></div>
<div id="comment_64553755" class="cw">
	<div id="comment_top_64553755" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553755" name="comment_link_64553755" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553755" onclick="return D2.setFocusComment(64553755)" >Re:</a>


		 	<span id="comment_score_64553755" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553755); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Tough+Love">Tough Love</a>  <span class="uid"><a href="//slashdot.org/~Tough+Love">( 215404 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553755"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553755"><p><div class="quote"><p>C++ needs a complete overhaul, backwards compatibility be damned.</p></div><p>Right, and call it "Rust".</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553755">

</div>
</div>

<div id="replyto_64553755"></div>

<ul id="group_64553755">
	<li id="hiddens_64553755" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64552799" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64552799" class="commentstatus"></div>
<div id="comment_64552799" class="cw">
	<div id="comment_top_64552799" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552799" name="comment_link_64552799" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552799" onclick="return D2.setFocusComment(64552799)" >Give it up!</a>


		 	<span id="comment_score_64552799" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552799); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~278MorkandMindy">278MorkandMindy</a>  <span class="uid"><a href="//slashdot.org/~278MorkandMindy">( 922498 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552799">		
		on Sunday June 16, 2024 @07:07AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552799">#64552799</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552799"><p>There is literally (used correctly) no way to say which is "more popular" as that term is not defined. More people using it? More downloads? More complete programs produced? (not that you could really count that anyway)</p><p>The only important metric is if the language is still being used and evolving/being supported. This penis measuring competition is meaningless.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552799">
<span class="ind"></span><a id="reply_link_64552799" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64552799" onclick="D2.replyTo(64552799); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Give it up!%20by%20278MorkandMindy%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552799" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552799" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23358225&cid=64552799" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64552799" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64552799" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64552799"></div>

<ul id="group_64552799">
	<li id="hiddens_64552799" class="hide"></li>
</ul>

<ul id="commtree_64552799"><li id="tree_64553179" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64553179" class="commentstatus"></div>
<div id="comment_64553179" class="cw">
</div>

<div id="replyto_64553179"></div>

<ul id="group_64553179">
	<li id="hiddens_64553179" class="hide"></li>
</ul>

</li><li id="hidestring_64552799"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23358225&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64552799">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64553421" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553421" class="commentstatus"></div>
<div id="comment_64553421" class="cw">
	<div id="comment_top_64553421" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553421" name="comment_link_64553421" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553421" onclick="return D2.setFocusComment(64553421)" >TIOBE doesn't rank code that makes money.  </a>


		 	<span id="comment_score_64553421" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553421); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Above">Above</a>  <span class="uid"><a href="//slashdot.org/~Above">( 100351 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553421"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553421">Code that makes money is not available for public consumption and thus not ranked. This list is at best the most popular languages for open source.</div>
	</div>

	<div class="commentSub" id="comment_sub_64553421">

</div>
</div>

<div id="replyto_64553421"></div>

<ul id="group_64553421">
	<li id="hiddens_64553421" class="hide"></li>
</ul>

<ul id="commtree_64553421"><li id="tree_64553757" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553757" class="commentstatus"></div>
<div id="comment_64553757" class="cw">
	<div id="comment_top_64553757" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553757" name="comment_link_64553757" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553757" onclick="return D2.setFocusComment(64553757)" >Re:</a>


		 	<span id="comment_score_64553757" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553757); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Tough+Love">Tough Love</a>  <span class="uid"><a href="//slashdot.org/~Tough+Love">( 215404 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553757"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553757"><p>Rubbish. Where do you think bespoke coders go to answer their coding questions?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553757">

</div>
</div>

<div id="replyto_64553757"></div>

<ul id="group_64553757">
	<li id="hiddens_64553757" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64553479" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553479" class="commentstatus"></div>
<div id="comment_64553479" class="cw">
	<div id="comment_top_64553479" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553479" name="comment_link_64553479" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553479" onclick="return D2.setFocusComment(64553479)" >C jobs are often less explicite</a>


		 	<span id="comment_score_64553479" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553479); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553479"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553479"><p>For example, a lot are things like writing firmware, drivers, high-performance software, etc. C++ is pretty unsuitable for these.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553479">

</div>
</div>

<div id="replyto_64553479"></div>

<ul id="group_64553479">
	<li id="hiddens_64553479" class="hide"></li>
</ul>

<ul id="commtree_64553479"><li id="tree_64553761" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553761" class="commentstatus"></div>
<div id="comment_64553761" class="cw">
	<div id="comment_top_64553761" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553761" name="comment_link_64553761" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553761" onclick="return D2.setFocusComment(64553761)" >Re:</a>


		 	<span id="comment_score_64553761" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553761); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Tough+Love">Tough Love</a>  <span class="uid"><a href="//slashdot.org/~Tough+Love">( 215404 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553761"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553761"><p>Not a shred of truth to that. <a href="https://www.qt.io/embedded-development-talk/c-for-embedded-advantages-disadvantages-and-myths" title="www.qt.io">Educate yourself.</a> [www.qt.io]</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553761">

</div>
</div>

<div id="replyto_64553761"></div>

<ul id="group_64553761">
	<li id="hiddens_64553761" class="hide"></li>
</ul>

<ul id="commtree_64553761"><li id="tree_64553849" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553849" class="commentstatus"></div>
<div id="comment_64553849" class="cw">
	<div id="comment_top_64553849" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553849" name="comment_link_64553849" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553849" onclick="return D2.setFocusComment(64553849)" >Re:</a>


		 	<span id="comment_score_64553849" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553849); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553849"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553849"><p>No need to educate myself. Your view is rather limited. On new designs with an all-C++ enabled development team, there may even be some truth to your reference. But that is not the standard case.</p><p>Fact is, the C++ fans have been pushing how great their language is for everything for a long time. Nobody outside that community believes it and for good reasons. This effect can be observed with other language communities as well.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553849">

</div>
</div>

<div id="replyto_64553849"></div>

<ul id="group_64553849">
	<li id="hiddens_64553849" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64552525" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64552525" class="commentstatus"></div>
<div id="comment_64552525" class="cw">
</div>

<div id="replyto_64552525"></div>

<ul id="group_64552525">
	<li id="hiddens_64552525" class="hide"></li>
</ul>

<ul id="commtree_64552525"><li id="tree_64552689" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552689" class="commentstatus"></div>
<div id="comment_64552689" class="cw">
	<div id="comment_top_64552689" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552689" name="comment_link_64552689" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552689" onclick="return D2.setFocusComment(64552689)" >Re:</a>


		 	<span id="comment_score_64552689" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552689); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552689"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552689"><p>Unfortunately due to the C++ commitee adding endless crap no one will ever use they haven't had time to add useful stuff such as a way to jump out of a specific number of nested loops without either using hideously inefficient loop flag variables which complicate the code and are a bug waiting to happen, exceptions or a goto. In this one specific instance a goto is usually the clearest option.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552689">

</div>
</div>

<div id="replyto_64552689"></div>

<ul id="group_64552689">
	<li id="hiddens_64552689" class="hide"></li>
</ul>

<ul id="commtree_64552689"><li id="tree_64552791" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64552791" class="commentstatus"></div>
<div id="comment_64552791" class="cw">
	<div id="comment_top_64552791" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64552791" name="comment_link_64552791" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64552791" onclick="return D2.setFocusComment(64552791)" >Re:</a>


		 	<span id="comment_score_64552791" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64552791); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~serviscope_minor">serviscope_minor</a>  <span class="uid"><a href="//slashdot.org/~serviscope_minor">( 664417 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64552791"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64552791"><p>So use go-to, then what's the problem?</p><p>It's not like goto causes instant code death.</p><p>Anyway just because you can't figure out the new features doesn't mean the rest of us can't make good use of them.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64552791">

</div>
</div>

<div id="replyto_64552791"></div>

<ul id="group_64552791">
	<li id="hiddens_64552791" class="hide"></li>
</ul>

<ul id="commtree_64552791"><li id="tree_64553329" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553329" class="commentstatus"></div>
<div id="comment_64553329" class="cw">
	<div id="comment_top_64553329" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553329" name="comment_link_64553329" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553329" onclick="return D2.setFocusComment(64553329)" >Re:</a>


		 	<span id="comment_score_64553329" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553329); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553329"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553329"><p>"So use go-to, then what's the problem?"</p><p>I do numbnuts, I was pointing out its advantage to the OP. Do try and keep up.</p><p>"Anyway just because you can't figure out the new features doesn't mean the rest of us can't make good use of them."</p><p>Oh look, it must be straw man day again.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553329">

</div>
</div>

<div id="replyto_64553329"></div>

<ul id="group_64553329">
	<li id="hiddens_64553329" class="hide"></li>
</ul>

<ul id="commtree_64553329"><li id="tree_64553445" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553445" class="commentstatus"></div>
<div id="comment_64553445" class="cw">
	<div id="comment_top_64553445" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553445" name="comment_link_64553445" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553445" onclick="return D2.setFocusComment(64553445)" >Re:</a>


		 	<span id="comment_score_64553445" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553445); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~serviscope_minor">serviscope_minor</a>  <span class="uid"><a href="//slashdot.org/~serviscope_minor">( 664417 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553445"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553445"><p>Well you understand logical fallacies about as well as you understand C++.</p><p>You were whining about the committee not adding features for which there is a perfectly good solution.</p><p>Also you are complaining no one uses the features when in reality those of us who understand then use them.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553445">

</div>
</div>

<div id="replyto_64553445"></div>

<ul id="group_64553445">
	<li id="hiddens_64553445" class="hide"></li>
</ul>

<ul id="commtree_64553445"><li id="tree_64553725" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553725" class="commentstatus"></div>
<div id="comment_64553725" class="cw">
	<div id="comment_top_64553725" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553725" name="comment_link_64553725" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553725" onclick="return D2.setFocusComment(64553725)" >Re: What counts as C vs C++?</a>


		 	<span id="comment_score_64553725" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553725); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Viol8">Viol8</a>  <span class="uid"><a href="//slashdot.org/~Viol8">( 599362 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553725"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553725"><p>Ok I'll bite, which features? Presumably you're psychic and know which ones I was talking about.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553725">

</div>
</div>

<div id="replyto_64553725"></div>

<ul id="group_64553725">
	<li id="hiddens_64553725" class="hide"></li>
</ul>

<ul id="commtree_64553725"><li id="tree_64553845" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553845" class="commentstatus"></div>
<div id="comment_64553845" class="cw">
	<div id="comment_top_64553845" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553845" name="comment_link_64553845" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553845" onclick="return D2.setFocusComment(64553845)" >Re:</a>


		 	<span id="comment_score_64553845" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553845); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~serviscope_minor">serviscope_minor</a>  <span class="uid"><a href="//slashdot.org/~serviscope_minor">( 664417 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553845"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553845"><p>Are you a GPT work a very small token buffer?</p><p>You appear to have forgotten that you referred to unspecified "endless crap".</p><p>Those features. The "endless crap" you refer up is the features you can't figure out. Or feel free to specify then I can mock you for your lack of skill.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64553845">

</div>
</div>

<div id="replyto_64553845"></div>

<ul id="group_64553845">
	<li id="hiddens_64553845" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li></ul></li><li id="tree_64553695" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64553695" class="commentstatus"></div>
<div id="comment_64553695" class="cw">
	<div id="comment_top_64553695" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64553695" name="comment_link_64553695" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;cid=64553695" onclick="return D2.setFocusComment(64553695)" >Re: What counts as C vs C++?</a>


		 	<span id="comment_score_64553695" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64553695); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~spaglia">spaglia</a>  <span class="uid"><a href="//slashdot.org/~spaglia">( 1163639 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64553695"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64553695">I always thought something like break(2) would be useful in this scenario.</div>
	</div>

	<div class="commentSub" id="comment_sub_64553695">

</div>
</div>

<div id="replyto_64553695"></div>

<ul id="group_64553695">
	<li id="hiddens_64553695" class="hide"></li>
</ul>

</li></ul></li></ul></li>
			<li id="roothiddens" class="hide"></li>
		</ul>
	
	
	
	

<noscript><p><b>There may be more comments in this discussion. Without JavaScript enabled, you might want to <a href="//developers.slashdot.org/users.pl?op=editcomm">turn on Classic Discussion System</a> in your preferences instead.</b></p></noscript>
<div id="discussion_buttons" class="clearfix">






</div>


<div class="newcmnt"><div id="replyto_0"></div></div>


	<script type="text/javascript">
<!--
		D2.currents()['hidden']   = 8;
		D2.currents()['full']     = 6;
		D2.currents()['oneline']  = 86;
		// D2.currents_total(100);

		D2.abbrev_comments({64553485:661,64554347:727,64552741:521,64553489:522,64552663:522,64553531:570,64553451:522,64552709:529,64552513:654,64552699:542,64552671:528,64553525:758,64553057:881,64552805:522,64552937:549,64554341:520,64552677:515,64552815:521,64552771:248,64553215:522,64553499:716,64553033:540});
		D2.noshow_comments([64552429,64553741,64552481,64552547,64553769,64552543,64552703,64553401,64553179,64552525]);
		D2.pieces_comments([64552419,64552449,64552693,64552741,64552937,64553155,64553525,64553551,64553461,64554203,64553471,64554151,64553719,64552457,64552945,64553253,64553499,64553613,64553749,64552951,64554285,64552815,64553215,64554017,64552513,64552681,64553301,64553327,64553451,64553409,64552771,64553057,64553457,64554197,64553531,64554043,64554189,64553485,64554193,64554347,64552503,64552571,64552715,64552671,64552717,64552999,64553315,64553729,64552699,64552731,64552495,64552523,64552707,64553447,64552709,64552983,64553011,64552497,64552499,64553615,64552651,64552805,64552655,64552663,64552677,64553565,64553033,64553183,64553207,64553361,64554341,64553489,64553555,64553755,64553421,64553757,64553479,64553761,64553849,64552689,64552791,64553329,64553445,64553725,64553845,64553695]);
		D2.init_hiddens([64553461,64552429,64552487,64552419,64553315,64552671,64552799]);

		D2.finishLoading();


		if (D2.thresh_totals()[6][6][1] == 0) {
			D2.replyTo(0, 1);
		}


//-->
	</script>


</div>



	
	
		<div id="clickgen" class="grid_24 b">
    <section class="grid_16 f">
        <div>
			<h4 class="nobg">
			    <a href="" class="selected btmrel" onClick="getRelatedStoriesForStory(429635);return false">Related Links</a>
			    <span class="tops fright">Top of the: <a href="" class="btmday" onClick="getTopStories(1);return false">day</a>, <a class="btmweek" href="" onClick="getTopStories(7); return false">week</a>, <a href="" onClick="getTopStories(30);return false" class="btmmonth">month</a>.</span>
			</h4>
			<ul class="nobullets bmrelatedlist">


	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>321<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/23/08/07/0136228/should-a-variables-type-come-after-its-name?sdsrc=popbyskidbtmprev">Should a Variable's Type Come After Its Name?</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>293<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/23/09/02/1753239/are-scrums-a-cancer?sdsrc=popbyskidbtmprev">Are Scrums a Cancer?</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>258<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/24/03/19/019240/c-creator-rebuts-white-house-warning?sdsrc=popbyskidbtmprev">C++ Creator Rebuts White House Warning</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>228<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/24/02/28/1529238/white-house-urges-devs-to-switch-to-memory-safe-programming-languages?sdsrc=popbyskidbtmprev">White House Urges Devs To Switch To Memory-Safe Programming Languages</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>226<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/23/06/26/018234/34-of-ap-cs-students-couldnt-solve-this-java-based-2d-array-question?sdsrc=popbyskidbtmprev">34% of AP CS Students Couldn't Solve This Java-Based 2D Array Question</a>
	</li>


</ul>
        </div>
    </section>
    <aside class="grid_8 st">
		<section class="grid_24 f">
			<div>
				<h5 class="tlnav"><a href="//science.slashdot.org/story/24/06/16/0415237/is-there-life-on-this-saturn-moon-scientists-plan-a-mission-to-find-out?sdsrc=nextbtmnext">next</a></h5>
				<div class="grid_24">
	    
	    
            	 <span class="grid_7 tcenter"><img src="//a.fsdn.com/sd/topics/space_64.png" width="64" height="64" alt="Space"></span>
	    
					<p class="grid_12"><a href="//science.slashdot.org/story/24/06/16/0415237/is-there-life-on-this-saturn-moon-scientists-plan-a-mission-to-find-out?sdsrc=nextbtmprev">Is There Life on This Saturn Moon?  Scientists Plan a Mission to Find Out</a></p>
					<span class="grid_5 tcenter comments"><span class="cmntcnt_large fleft"><span class="slant"></span><span>50<span class="hide"> comments</span></span></span></span>
	
				</div>
			</div>
		</section>
		<section class="grid_24">
			<div>
				<h5 class="tlnav"><a href="//science.slashdot.org/story/24/06/15/2048219/security-lessons-from-the-change-healthcare-ransomware-catastrophe?sdsrc=prevbtmprev">previous</a></h5>
				<div class="grid_24">
	    
            	 <span class="grid_7 tcenter"><img src="//a.fsdn.com/sd/topics/medicine_64.png?refresh=now" width="64" height="64" alt="Medicine"></span>
	    
					<p class="grid_12"><a href="//science.slashdot.org/story/24/06/15/2048219/security-lessons-from-the-change-healthcare-ransomware-catastrophe?sdsrc=prevbtmprev">Security Lessons from the Change Healthcare Ransomware Catastrophe</a></p>

					<span class="grid_5 tcenter comments"><span class="cmntcnt_large fleft"><span class="slant"></span><span>44<span class="hide"> comments</span></span></span></span>
				</div>
			</div>
		</section>
	</aside>
</div>
	

</section>
			</div>
		</div>
<div id="bottom-masonry" class="jobbioapp"></div>
		<div class="row top-space">


			<div class="grid_24">
				<!-- 728px ad -->

				<div class="adwrap">
<div id='div-gpt-ad-728x90_c'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_c');});</script></div>
</div>
				<!-- end 728px ad -->
				<!-- Slashdot Deals 6 Best Sellers -->
					<div class="row deals-footer">
						<div class="units-8 indent-2 deals-wrapper">
						  <div class="deals-header"><h1>Slashdot Top Deals</h1></div>
						  <div id="deals-output">
							<script id="deals-template" type="text/x-handlebars-template">
							  {{#each deal}}
								<div class="deal">
								  <a href="{{urlPath permalink}}?&utm_source=slashdot.org&utm_medium=dealfeed-footerfeed&utm_campaign={{slug}}" target="_blank">
								  	<img src="{{main_image}}" alt="" />
								  </a>
								  <p class="title"><a href="{{urlPath permalink}}?&utm_source=slashdot.org&utm_medium=dealfeed-footerfeed&utm_campaign={{slug}}" target="_blank">{{title}}</a></p>
								  <p class="deal-price">{{centConversion price_in_cents}}</p>
								</div>
							  {{/each}}
							</script>
						  </div>
						</div>
					</div>
					<script>
						if ( sdAdBlockActive && window.is_euro_union === 0) {
                                                    bizx.cmp.ifConsent('', ['all'], function () {
							$.ajaxSetup({
								cache: true
							});
							$.getScript( "//a.fsdn.com/sd/js/scripts/min/deals-min.js", function(){
								runDealsWidget();
							});
                                                    });
						}
					</script>

					<!-- End Slashdot Deals 6 Best Sellers -->
				</div>
			</div>
		</div>
	</div>
	<!-- SMACKS: END COMMENTS SECTION -->
</div>
<!-- SMACKS: END COMMENTS CONTAINER -->


	

<script type="text/javascript">

$(function(){
$('#firehose-filter').
	focus(function(event){
		gFocusedText = this;
	}).
	blur(function(event){
		if ( gFocusedText === this ) {
			gFocusedText = null;
		}
	});


apply_updates_when(		'at-end', true);
});
</script>

<!-- body end --><!-- footer type=current begin -->

	
	</section>
	
	


	<footer id="fhft" class="grid_24 nf aoc">
		<div id="logo_nf" class="fleft">
			<a href="//slashdot.org"><span>Slashdot</span></a>
		</div>
		<nav role="firehose footer">
			
				
				
				
				

				
						<span class="ind"></span><a class="btn first" href="//developers.slashdot.org/comments.pl?sid=23358225&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Post</a>
				
				<a class="btn hide" id="footer_moderate_button">Moderate</a>
				<a class="btn hide" id="footer_moderatorhelp_button">Moderator Help</a>
				<a class="btn hide" id="footer_delete_button" title="Checked comments will be deleted.">Delete</a>
				<script>
					(function($){
						var old_moderate_btn = $("#discussion_moderate_button");
						if (old_moderate_btn.length) {
							var moderate_btn = $("#footer_moderate_button");
							moderate_btn.click(
								function(){old_moderate_btn.click()}
							);
							moderate_btn.removeClass('hide');
						}

						var old_moderatorhelp_btn = $("#discussion_moderatorhelp_button");
						if (old_moderatorhelp_btn.length) {
							var moderatorhelp_btn = $("#footer_moderatorhelp_button");
							moderatorhelp_btn.click(
								function(){old_moderatorhelp_btn.click()}
							);
							moderatorhelp_btn.attr(
								'href', old_moderatorhelp_btn.attr('href')
							);
							moderatorhelp_btn.removeClass('hide');
						}

						var old_delete_btn = $("#discussion_delete_button");
						if (old_delete_btn.length) {
							var delete_btn = $("#footer_delete_button");
							delete_btn.click(
								function(){old_delete_btn.click()}
							);
							delete_btn.removeClass('hide');
						}

						$('#discussion_buttons').addClass('hide');
					})(Slash.jQuery); // (function($){
				</script>
				<ul class="fleft">
					
						<li class="fleft selected">
							<span class="nbutton btn hide link reset" id="more_comments_button">
								<a href="#" onclick="D2.ajaxFetchComments(0,1); return false">
									<span id="more_comments_num_a" class="hide">Get more comments</span>
								</a>
							</span>
						</li>
					
					
						<li class="fleft">
							<span class="loadedcommentcnt">100</span> of <span class="totalcommentcnt">103</span> loaded
						</li>
					
				</ul>
				
					<script type="text/javascript">D2.finishLoading()</script>
				
			

			
			<ul class="fright submitstory">
					<li class="fright">
						<a href="/submit">Submit<span class="opt"> Story</span></a>
					</li>
			</ul>
		</nav>
		


	</footer>
	<section class="bq">
		<blockquote class="msg grid_24" cite="https://slashdot.org">
			<p>You know, the difference between this company and the Titanic is that the
Titanic had paying customers.</p>
			<span class="slant"></span>
		</blockquote>
	</section>
	<footer id="ft" class="grid_24">
		<nav class="grid_10" role="footer">
			<ul>
				<li><a href="//slashdot.org/faq">FAQ</a></li>
				<li><a href="//slashdot.org/archive.pl">Story Archive</a></li>
				<li><a href="//slashdot.org/hof.shtml">Hall of Fame</a></li>
				<li><a href="https://slashdotmedia.com/advertising-and-marketing-services/" rel="nofollow">Advertising</a></li>
				<li><a href="https://slashdotmedia.com/terms-of-use/" rel="nofollow">Terms</a></li>
				<li><a href="https://slashdotmedia.com/privacy-statement/" rel="nofollow">Privacy Statement</a></li>
				<li><a href="//slashdot.org/faq/slashmeta.shtml">About</a></li>
				<li><a href="mailto:feedback@slashdot.org">Feedback</a></li>
				<li><a href="#" onclick="set_mobile_pref('mobile',1);return false;">Mobile View</a></li>
				<li><a href="//slashdot.org/blog">Blog</a></li>
				<li><a href="#" id="opt-out-link"></a></li>
				<li><button class="btn opt-out" id="opt-out-button" style="display:none">
					<img src="//a.fsdn.com/sd/ccpa-optout.png" alt="Icon">
					Do Not Sell or Share My Personal Information</button></li>

			</ul>
		</nav>
		<br>
		
		<div class="grid_14 tright tm"><span class="nobr">Copyright &copy; 2024 Slashdot Media. All Rights Reserved.</span></div>

	<div class="modal-custom overlay-custom" id="ccpa-modal" style="max-width:100%">
		<div class="modal-content modal-content-ccpa">
	    	<span class="close" id="modal-close">&times;</span>
			<div class="modal-header" id="ccpa-modal-content-destination"></div>
		</div>
	</div>

	</footer>
	
	<div class="overlay"></div>
<div class="modal-box">
    <a href="#" id="close-modal">Close</a>
    <article class="modal-content">
    </article>
    <footer>
</div>




<div id="modal_cover" class="hide" onclick="hide_modal_box(); return false;"></div>
<div id="modal_box" class="hide">
      <div id="modal_box_content"></div>
      <header class="n">
                  <span class="fadeout"></span>
                  <span class="fadeoutfade"></span>
		  <span class="pf"><a class="ico close" onclick="hide_modal_box(); return false;" href="#"><span>Close</span></a></span>
		  <h3 class="pf"><div id="logo"><a href="//slashdot.org">Slashdot</a></div><span id="preference_title"></span></h3>
      </header>
</div>
	
	<!-- CCM Tag -->
<script type="text/javascript">
bizx.cmp.ifConsent({purposes: 'all', vendors: 'bombora'}, function() {
        /*global _ml:true, window */
        _ml = window._ml || {};
        _ml.eid = '771';

        var s = document.getElementsByTagName('script')[0], cd = new Date(), mltag = document.createElement('script');
        mltag.type = 'text/javascript'; mltag.async = true;
        mltag.src = '//ml314.com/tag.aspx?' + cd.getDate() + cd.getMonth() + cd.getFullYear();
        s.parentNode.insertBefore(mltag, s);
});
</script>
<!-- End CCM Tag -->

<script type="text/javascript">
window.google_analytics_uacct = "UA-199823890-2";

var _gaq = _gaq || [];





  _gaq.push(['_setAccount', 'UA-199823890-2']);
  _gaq.push(['_setDomainName', '.slashdot.org']);

	
		_gaq.push(['_addIgnoredRef', 'slashdot.org']);
	


  _gaq.push(['_setCustomVar', 1, 'User Type',  'Anon', 3]);		
	
	_gaq.push(['_setCustomVar', 2, 'Page','article2', 3]);

	



// track beta behavior for user
var betamatches = document.cookie.match(/betagroup=(-?\d+)/);

if(betamatches && betamatches[1]) {
  if(betamatches[1] == -1) {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','opt-out', 3]);
  } else {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','unredirected', 3]);
  }
}



  _gaq.push(['_trackPageview']);
  _gaq.push(['_trackPageLoadTime']);


if (window.is_euro_union === 0) {
bizx.cmp.ifConsent('', ['all'], function () {
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
});
}
</script>

<!-- CCM GA Push -->
<script>
    if (typeof _ml !== 'undefined' && _ml.us) {
        if (_ml.us.tp && _ml.us.tp.length > 0) {
            ga('set', 'dimension2', _ml.us.tp[0]);
        }
        if (_ml.us.pc && _ml.us.pc.length > 0) {
            ga('set', 'dimension7', _ml.us.pc[0]);
        }
        ga('set', 'dimension3', _ml.us.ind);
        ga('set', 'dimension4', _ml.us.cr);
        ga('set', 'dimension5', _ml.us.cs);
        ga('set', 'dimension6', _ml.us.dm);
        ga('set', 'dimension8', _ml.us.sn);
    }
</script>

<!-- Sticky Ads -->
<script type="text/javascript">
var topBannerViewed = false;
function initSticky(){
	if (SD.Ads.acceptable_ads_active) {
		return;
	}
		
	if($('#div-gpt-ad-728x90_a').length > 0 && $('#div-gpt-ad-300x250_a').length > 0 && window.outerWidth >= 1070 && !sdAdBlockActive){
	    $(window).scroll(function(){
		var y = $(document).scrollTop();
		var z =  y + window.outerHeight;
		var navOffset = 0;
		var offset = [
		    $('.nav-wrap').outerHeight(true),
		    $('.nav-secondary-wrap').outerHeight(true)
		];
		for(row in offset){
		    if(offset[row]) navOffset = navOffset + parseInt(offset[row]);
		}
		$('.adwrap-unviewed').each(function(){
		    var cls = 'adwrap-sticky';
		    var toggleCls = 'adwrap';
				//$('.banner-wrapper').css('height', $('.banner-contain').outerHeight());
		    if($(this).hasClass('railad')) {
			if(topBannerViewed){
			    var topPixels = $(this).offset().top;
			    navOffset += $('.adwrap').outerHeight();
			    if(y >= topPixels && y >= navOffset){
				$('#slashboxes').css('top', 0).css('position','sticky').css('right',13);
			    } else {
				$('#slashboxes').removeAttr('style');
			    }
			}
			return;
		    }
		    var topPixels = $(this).offset().top;
		if(y >= topPixels && y >= navOffset){
			$(this).addClass(cls);
			$(this).removeClass('adwrap');
					if(cls == 'adwrap-sticky') { //top banner
			    topBannerViewed = false;
						$('#slashboxes').css('top',$(this).outerHeight() || 0).css('position','sticky').css('right',13);
					}
		if(topBannerViewed) {
			    //console.log('hereeee');
						$('#slashboxes').css('top', 0).css('position','sticky').css('right',13);
					}
		    }else{
									//console.log('topBannerViewed', topBannerViewed);
			$(this).removeClass(cls);
			$(this).addClass(toggleCls);
			$('#slashboxes').removeAttr('style');
		    }
		});
			if($('.adwrap-viewed-banner').length > 0){
			  //console.log('ads topBanner displayed');
				topBannerViewed = true;
				$('.adwrap-viewed-banner').removeClass('adwrap-unviewed').removeClass('adwrap-sticky').addClass('adwrap');
			}
	    if($('.adwrap-viewed-railad').length > 0){
							//console.log('ads sidebar displayed');
		    $('.adwrap-viewed-railad').removeClass('adwrap-unviewed').removeClass('adwrap-railad-sticky');
				$('#slashboxes').removeAttr('style');
			}
	    });
	}
}
bizx.cmp.ifConsent({purposes: 'all', vendors: 'google-ads'}, function () {
	if (!sdAdBlockActive) {
		initSticky();
	}
	if (SD.Ads.acceptable_ads_active) {
		// similar to remove* code above in initSticky
		$('.adwrap-unviewed').removeClass('adwrap-unviewed').removeClass('adwrap-sticky').addClass('adwrap').removeClass('adwrap-railad-sticky');
		$('#slashboxes').removeAttr('style');
	}
});
</script>

<!-- Piwik -->
<script type="text/javascript">
  var _paq = _paq || [];
  _paq.push(["setCookieDomain", "*.slashdot.org"]);
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
function initPiwikAndNels() {
  (function() {
    var u="//analytics.slashdotmedia.com/";
    _paq.push(['setTrackerUrl', u+'sd.php']);
    _paq.push(['setSiteId', 40]);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'sd.js'; s.parentNode.insertBefore(g,s);
  })();

    if(window.location.pathname == '/'){
        var nelId = (location.search.split('nel_id=')[1] || '').split('&')[0];
        var url = '/ajax.pl?op=nel';
        if(nelId){
            url += '&nel_id='+nelId;
        }
        $.ajax({
            url: url,
            type: 'POST',
            success: function(html){
                $('#firehoselist article').eq(1).after(html);
            }
        });
    }
    //announcement NEL
    if(document.getElementById('announcementText')){
      $('#announcementText').hide();
      var hlUrl = '/ajax.pl?op=hl_nel';
      if(nelId){
        hlUrl += '&nel_id='+nelId;
      }
      $.ajax({
        url: hlUrl,
        type: 'POST',
        success: function(html){
          if(html.length < 10){
            $('#announcementText').show();
            return;
          }
          $('#announcementText').html(html).show();
        },
        error: function () {
          $('#announcementText').show();
        }
      });
    }
}
bizx.cmp.ifConsent({purposes: ['storage', 'measurement'], vendors: 'sdm'}, initPiwikAndNels);
$('#main-nav-badge-link').on('click', function(e){
     window._paq.push(['trackEvent', 'Nav Menu', 'GC']);
});

<!-- 6sense -->
bizx.cmp.ifConsent({purposes: 'all', vendors: '6sense'}, async() => {
    (function(){
    var s = document.getElementsByTagName("script")[0];
    var b = document.createElement("script");
    b.type = "text/javascript";
    b.async = true;b.defer=true;b.id='6senseWebTag';
    b.src = "https://j.6sc.co/j/58729049-be80-466a-9abf-b3911430bbd8.js";
    s.parentNode.insertBefore(b, s);
    })();
})
</script>


<!-- Datonics -->
<script type="text/javascript">
if (window.is_euro_union === 0) {
    bizx.cmp.ifConsent('', ['all'], function () {
        bizx.cmp.embedScript("//ads.pro-market.net/ads/scripts/site-143573.js", true);
    });
}
</script>
	<script id="after-content" type="text/javascript">
(function( $, fn, console ){
	$ && fn && $(function(){ fn($, console); });
})(window.jQuery, window.pageload_done, window.console);
</script>
	
	<script type='text/javascript'>
	if(!document.location.href.match(/source=autorefresh/)) {
		document.write('<img src="//slashdot.org/images/js.gif?557">');
	}
</script>
<noscript>
	<img src="//slashdot.org/images/njs.gif?462">
</noscript>
	<div class="busy genericspinner hide"><span>Working...</span></div>

	    <script>
            var regular_opt_out_link = true;

            if (bizx.cmp.show_do_not_sell()) {
                regular_opt_out_link = false;
                 document.getElementById('opt-out-button').setAttribute('style', 'display:inline');
            }

            if (window.is_euro_union === 1) {
                regular_opt_out_link = false;
                var elem = '<a href="#" title="Privacy Choices" onclick="bizx.cmp.promptConsent(); return false;">Privacy Choices</a>';
                document.getElementById('opt-out-link').innerHTML = elem;
            }

            if (regular_opt_out_link == true) {
                var elem = '<a href="https://slashdotmedia.com/opt-out-choices" title="Opt Out" rel="nofollow">Opt Out</a>';
                document.getElementById('opt-out-link').innerHTML = elem;
            }
            var cmp_modal = document.getElementById('ccpa-modal');
            var btn = document.getElementById('opt-out-button');
            var span = document.getElementById('modal-close');

            btn.onclick = function() {
            	cmp_modal.style.display = 'block';
            };

            span.onclick = function() {
            	cmp_modal.style.display = 'none';
            };

         </script>

	<script>
		if(typeof(Storage)!=="undefined"){
			window.scrollTo(0,sessionStorage.scrollPos);
				$(window).scroll(function () {
				//You've scrolled this much:
				sessionStorage.scrollPos = $(window).scrollTop();
			});
		}
		$(function(){
			$('a').click(function(){
				delete sessionStorage.scrollPos;
			})
		});
		// window.onbeforeunload = function () {
		// 	console.log('bakc button clicked');
		// 	delete sessionStorage.scrollPos;
		// }
		window.onpopstate=function() {
			delete sessionStorage.scrollPos;
		}
	</script>
	

	
		<!-- 1x1 story page -->
		<div id='div-gpt-ad-1x1'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-1x1');});</script></div>
	

	</body>
	</html>


	<!-- footer type=current end -->