<!-- html-header type=current begin -->
	
	<!DOCTYPE html>
	
	<html lang="en">
	<head>
	<!-- Render IE9 -->
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

	

	<script id="before-content" type="text/javascript">
(function () {
    if (typeof window.sdmedia !== 'object') {
         window.sdmedia = {};
    }
    if (typeof window.sdmedia.site !== 'object') {
        window.sdmedia.site = {};
    }

    var site = window.sdmedia.site;
    site.rootdir = "//slashdot.org";
}());

var pageload = {
	pagemark: '859894317821107118',
	before_content: (new Date).getTime()
};
function pageload_done( $, console, maybe ){
	pageload.after_readycode	= (new Date).getTime();
	pageload.content_ready_time	= pageload.content_ready - pageload.before_content;
	pageload.script_ready_time	= pageload.after_readycode - pageload.content_ready;
	pageload.ready_time		= pageload.after_readycode - pageload.before_content;
	// Only report 1% of cases.
	maybe || (Math.random()>0.01) || $.ajax({ type: 'POST', data: {
		op: 'page_profile',
		pagemark: pageload.pagemark,
		dom: pageload.content_ready_time,
		js: pageload.script_ready_time
	} });
}
</script>
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
	
		<title>Can AI-Generated Proofs Bring Bug-Free Software One Step Closer? - Slashdot</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	  
		<meta name="description" content="The University of Massachusetts Amherst has an announcement.  A team of computer scientists &#34;recently announced a new method for automatically generating whole proofs that can be used to prevent software bugs and verify that the underlying code is correct.&#34; It leverages the AI power of Large Languag...">
	    
		<meta name="twitter:card" content="summary">
		<meta name="twitter:site" content="@slashdot">
		<meta name="twitter:domain" content="developers.slashdot.org">
		<meta property="og:url" content="https://developers.slashdot.org/story/24/01/06/238237/can-ai-generated-proofs-bring-bug-free-software-one-step-closer">
	    
		<meta property="og:title" content="Can AI-Generated Proofs Bring Bug-Free Software One Step Closer? - Slashdot">
		<meta property="og:description" content="The University of Massachusetts Amherst has an announcement.  A team of computer scientists &#34;recently announced a new method for automatically generating whole proofs that can be used to prevent software bugs and verify that the underlying code is correct.&#34; It leverages the AI power of Large Languag...">
	  
	
	
		<meta property="og:image" content="https://a.fsdn.com/sd/topics/programming_64.png">
	
		<meta property="fb:admins" content="100000696822412">
		<meta property="fb:page_id" content="267995220856">
	
		<meta name="viewport" content="width=1000, user-scalable=yes, minimum-scale=0, maximum-scale=10.0" />
		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black">
	
		<link rel="canonical" href="https://developers.slashdot.org/story/24/01/06/238237/can-ai-generated-proofs-bring-bug-free-software-one-step-closer">
		
		<link rel="alternate" media="only screen and (max-width: 640px)" href="https://m.slashdot.org/story/423454" >
	

		<!--[if IE 8]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie8-classic.ssl.css?113c0e21a080c5f1" ><![endif]-->
		<link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/classic.ssl.css?113c0e21a080c5f1" >
		<!--[if IE 7]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie7-classic.ssl.css?113c0e21a080c5f1" ><![endif]-->
	
	
	



	
	<!--  -->

	
	

	
	<!-- SMACKS: NEW CSS -->
	<link rel="stylesheet" href="//a.fsdn.com/sd/css/app.css?113c0e21a080c5f1">

	<script src="//a.fsdn.com/con/js/sftheme/cmp2.js?2023-10-30"></script>
	<script src="https://slashdot.org/country.js"></script>
	<script>
		window.bizx.cmp.init({cmp_id: 12126, geo: window});
	</script>
	<link rel="stylesheet" href="//a.fsdn.com/con/css/sftheme/sandiego/cmp.css?2020-06-11" type="text/css">

	<script type='text/javascript'>
var _gaq = _gaq || [];
</script>

<script>
window.SD = {};
window.SD.Ads = {};

bizx.cmp.ifConsent('', ['all'], function () {
    var bt = 'https://btloader.com/tag?o=5098683085881344&upapi=true';
    bizx.cmp.embedScript(bt, true);
    window.addEventListener('AcceptableAdsInit', function (e) {
      if(e.detail) {
        console.log('acceptable ads on');
        SD.Ads.acceptable_ads_active = true;
      } else {
        console.log('acceptable ads off');
        SD.Ads.acceptable_ads_active = false;
      }
    });
});
</script>



         
   
   

<script type="text/javascript" id="pbjs_script" data-dom="https://d3tglifpd8whs6.cloudfront.net"  src="https://d3tglifpd8whs6.cloudfront.net/js/prebid/slash-story/slash-story.min.js"></script>
<script type='text/javascript'>
    /*global performance */
    var googletag = window.googletag || {};
    googletag.cmd = googletag.cmd || [];

		window.SD.Ads.slotsById = {};
		window.SD.Ads.idsByPath = {};

		window.SD.Ads.visibleTime = {};
		window.SD.Ads.Helpers = {};

		//window.SD = SD;

    bizx.cmp.ifConsent('', ['all','prebid'], function(){
        window.bizxPrebid.Ads.initPrebid(window.bizxPrebid.adUnits);
    }, function() {
		// no 'prebid' consent (e.g. region without prebid consent string support) but try GPT directly
		bizx.cmp.ifConsent('', ['all', 'google-ads'], function () {
			bizx.cmp.embedScript('https://securepubads.g.doubleclick.net/tag/js/gpt.js');
		});
	});
</script>

<!-- prep GPT ads -->
<script type='text/javascript'>
(function() {
	function page_type (loc) {
		/*
		only four page types:
		- Story
		- Poll
		- Homepage (/ only)
		- Other (but AdOps wants 'Homepage' again)
		*/
		var path = loc.pathname;
		var just_the_root = /^\/?$/.test(path);
		var story_or_poll = /^\/(story(?=\/)|submission(?=\/)|poll(?=\/|Booth|s\b))/i.exec(path);

		var page_type = just_the_root ? 'homepage'
			: story_or_poll ? story_or_poll[1]
				: 'other'

		// exceptions
		if (page_type.toLowerCase() === 'submission')
			page_type = 'story'; // submissions are like stories, right?
		else if (page_type.toLowerCase() === 'other')
			page_type = 'homepage'; // this one might move out of here

		return page_type;
	}

	function page_section(loc) {
		//var greek = ['alpha', 'beta', 'gamma', 'delta'].join('|');
		//var hostwise = '^([a-z]+)(?:-(?:'+greek+'))?\\.(?:slashdot\\.org|\\.xb\\.sf\\.net)$';
		var pathwise = '^/(?:(recent|popular|blog)|stories/([^/]+))';
		var rootwise = '^\/?$';

		//var hostwisely = new RegExp(hostwise,'i').exec(loc.hostname);
		var pathwisely = new RegExp(pathwise, 'i').exec(loc.pathname);
		var rootwisely = new RegExp(rootwise, 'i').exec(loc.pathname);

		var section = (rootwisely && 'homepage')
			|| (pathwisely && (pathwisely[1] || pathwisely[2]))
			|| ''
		;

		return section.replace(/[^_a-z]/ig, '');
	}

	function single_size(size) {
		return '' + size[0] + 'x' + size[1];
	}

	function sz_sz(sz) {
		var str = '';
		var sizes = [];
		if (sz[0] instanceof Array) {
			for (size in sz) {
				sizes.push(single_size(sz[size]));
			}
			return sizes.join(',');
		} else {
			return single_size(sz);
		}
	}

	function unique_tpc_array(array1, array2) {
		var j = array1.concat(array2);
		j.forEach(function (v, i, a) {
			a[i] = v.replace(/[^_a-z]/ig, '');
		});
		return j.filter(function (v, i, a) {
			return v != '' && a.indexOf(v) === i;
		});
	}

	/* LEGEND:
		- 'sz' = "size"
		- 'npt' = "no page type" in ad unit name
	*/
	var tags = {
		'728x90_A': {'sz': [[728, 90], [970, 90], [970, 250], [980, 66]]},
		'728x90_B': {'sz': [728, 90]},
		'728x90_C': {'sz': [728, 90], 'skip': {'homepage': 1}},
		'HubIcon_200x90_A': {'sz': [[200, 90], [220, 90]]},
		'PowerSwitch_980x66_A': {'sz': [980, 66], 'skip': {'homepage': 1}},
		'PollPeel': {'sz': [200, 90], 'skip': {'homepage': 1}},
		//'VideoWidget_300x250': { 'sz': [300, 250], 'npt': 1 },
		'300x250_A': {'sz': [[300, 250], [300, 600], [300, 1050]]},
		'300x250_B': {'sz': [[300, 250], [300, 600]]},
		'300x250_C': {'sz': [[300, 250], [300, 600]]},
		'300x250_D': {'sz': [[300, 250], [300, 600]]},
		'Pulse_300x600_A': {'sz': [300, 600]},
		//'Polls_Detail_300x250_A': { 'sz': [[300, 250], [300, 600]], 'npt': 1 },
		//'Poll_300x250_A': { 'sz': [[300, 250], [300, 600]], 'npt': 1 },
		//'SD_Story_1x1': { 'sz': [1, 1] },
		'1x1': {'sz': [1, 1]}
	};

	//var network_path = '/41014381/Slashdot/';
	var network_path = '/41014381/Slashdot/';
	var tag_name_prefix = 'SD';
	var tag_name_linkage = '_';
	var tag_name_pagetype = page_type(location);
	var tag_topic = page_section(location);
	if (tag_name_pagetype == 'poll') {
		tag_name_pagetype = 'Poll';
	}
	var before_tag_pagetyped = network_path
		+ tag_name_prefix
		+ tag_name_linkage
		+ tag_name_pagetype
		+ tag_name_linkage
	;
	var before_tag_pagetypeless = network_path
		+ tag_name_prefix
		+ tag_name_linkage
		/* + tag_name_pagetype */
		/* + tag_name_linkage */
	;

		//can be safely called
		googletag.cmd.push(function () {

			function remove_sticky_top() {
				setTimeout(function () {
					$('#div-gpt-ad-728x90_a').parent('div').addClass('adwrap-viewed-banner');
					$('#div-gpt-ad-728x90_a').addClass('viewableImpression');
				}, 1000);
			}

			function remove_sticky_railad() {
				setTimeout(function () {
					$('#slashboxes .adwrap-unviewed').addClass('adwrap-viewed-railad');
					$('.railad').addClass('viewableImpression');
				}, 1000);
			}

			function viewable_imp(slot) {
				for (var i in slot) {
					remove_sticky_top();
					remove_sticky_railad();
					if (typeof slot[i] !== 'string') continue;
					switch (slot[i]) {
						//case "/41014381/Slashdot/SD_homepage_728x90_A":
						//case "/41014381/Slashdot/SD_story_728x90_A":
						//case "/41014381/Slashdot/SD_Poll_728x90_A":
						//case "/41014381/Slashdot/SD_homepage_728x90_Ref_A":
						//case "/41014381/Slashdot/SD_story_728x90_Ref_A":
						//case "/41014381/Slashdot/SD_Poll_728x90_Ref_A":
						//remove_sticky_top();
						//break;
						//case "/41014381/Slashdot/SD_homepage_300x250_A":
						//case "/41014381/Slashdot/SD_story_300x250_A":
						//case "/41014381/Slashdot/SD_Poll_300x250_A":
						//case "/41014381/Slashdot/SD_homepage_300x250_Ref_A":
						//case "/41014381/Slashdot/SD_story_300x250_Ref_A":
						//case "/41014381/Slashdot/SD_Poll_300x250_Ref_A":
						//remove_sticky_railad();
						//break;
					}
					//if(slot[i] === "/41014381/Slashdot/SD_homepage_728x90_A") remove_sticky_top();
					//if(slot[i] === "/41014381/Slashdot/SD_homepage_300x250_A") remove_sticky_railad();
				}
			}

			function define_me_a_slot(tag) {
				if (tags[tag].skip && tags[tag].skip[tag_name_pagetype])
					return;
				var sandbox_regex = /\.xb\.sf\.net$/i;
				var full_name = tags[tag].npt  // "no page type"
					? before_tag_pagetypeless + tag
					: before_tag_pagetyped + tag
				;
				var div_id = 'div-gpt-ad-' + tag.toLowerCase();
				// extend jQuery and get URL query params
				jQuery.extend({
					getQueryParameters: function (str) {
						return (str || document.location.search).replace(/(^\?)/, '').split("&").map(function (n) {
							return n = n.split("="), this[n[0]] = n[1], this
						}.bind({}))[0];
					}
				});

				var queryParams = $.getQueryParameters();

				if (queryParams.source === 'autorefresh') {
					full_name = full_name.replace(/(\d+x\d+)/, '$1_Ref');
					//console.log('TAG NAME: ', full_name);
				}

				var slot = googletag.defineSlot(
					full_name,
					tags[tag].sz,
					div_id
				);

				service = slot.addService(googletag.pubads());

				window.SD.Ads.slotsById[div_id] = slot;
				window.SD.Ads.idsByPath[full_name] = div_id;

				service.setTargeting('sz', tags[tag].sz);

				
				var frontend_tpc = tag_topic.split(",");
				var backend_tpc = [ "programming", "ai", "developers" ];

				var tpc_final = unique_tpc_array(frontend_tpc, backend_tpc);
				service.setTargeting('tpc', tpc_final);
				if (location.hostname.match(sandbox_regex)) {
					service.setTargeting('test', 'adops');
				}

			}

		for (tag in tags) {
			define_me_a_slot(tag, false);
		}


			googletag.pubads().addEventListener('slotVisibilityChanged', window.SD.Ads.visibilityChangedTracker);


		googletag.pubads().addEventListener('impressionViewable', function(event) {
			viewable_imp(event.slot);
		    });

                googletag.pubads().setTargeting('requestSource', 'GPT');
		googletag.pubads().enableAsyncRendering();
		

		googletag.pubads().collapseEmptyDivs();
		window.bizxPrebid.SAFEFRAMES = true;
		window.SD.Ads.setupAdRefresh();
		bizxPrebid.Ads.pushToGoogle();
		googletag.enableServices();
	});
})();


/* Ad-Refresh code */
window.SD.Ads.visibilityChangedTracker = function(event) {
	var id = event.slot.getSlotElementId();
	if (!window.SD.Ads.visibleTime.hasOwnProperty(id)) {
		window.SD.Ads.visibleTime[id] = {
			visible: false,
			prevVisibleTotal: 0,
			wasVisibleBeforePageBgd: false,
			reloadCount: 0
		};
	}
	var timeinfo = window.SD.Ads.visibleTime[id];
	if (event.inViewPercentage >= 50 && !document.hidden) {
		if (!timeinfo.visible) {
			timeinfo.visible = performance.now();
		}
	} else {
		if (timeinfo.visible) {
			timeinfo.prevVisibleTotal += performance.now() - timeinfo.visible;
			timeinfo.visible = false;
		}
	}
};

window.SD.Ads.setupAdRefresh = function() {
	document.addEventListener('visibilitychange', function () {
		for (var id in window.SD.Ads.visibleTime) {
			if (window.SD.Ads.visibleTime.hasOwnProperty(id)) {
				var timeinfo = window.SD.Ads.visibleTime[id];
				if (document.hidden) {
					timeinfo.wasVisibleBeforePageBgd = !!timeinfo.visible;
					if (timeinfo.visible) {
						timeinfo.prevVisibleTotal += performance.now() - timeinfo.visible;
						timeinfo.visible = false;
					}
				} else if (!document.hidden && timeinfo.wasVisibleBeforePageBgd) {
					timeinfo.visible = performance.now();
				}
			}
		}
	}, false);

	// after 30 sec, start checking every second for reload
	var LIMIT_MS = 30000;
	setTimeout(function () {
		//
		setInterval(function () {
			if (document.hidden) {
				return;
			}
			for (var id in window.SD.Ads.visibleTime) {
				if (window.SD.Ads.visibleTime.hasOwnProperty(id)) {
					var timeinfo = window.SD.Ads.visibleTime[id];
					if (timeinfo.visible &&
						timeinfo.prevVisibleTotal + (performance.now() - timeinfo.visible) >= LIMIT_MS &&
						timeinfo.reloadCount < 50
					) {
						timeinfo.reloadCount++;
						timeinfo.visible = false;
						timeinfo.prevVisibleTotal = 0;
						window.SD.Ads.Helpers.refreshBids([id]);
					}
				}
			}
		}, 1000);
	}, LIMIT_MS);
};

window.SD.Ads.Helpers.refreshBids = function (reloadIds) {
		console.log('AD REFRESH: refreshBids', reloadIds);
		pbjs.que.push(function () {
			for (var i = reloadIds.length-1; i >= 0; i--) {
				var id = reloadIds[i];
				// clear out winner status from earlier auctions
				if (bizxPrebid.Ads.prebidWinners[id]) {
					delete bizxPrebid.Ads.prebidWinners[id];
				}
				// if has complement (hubicon), remove it since they are just house ads and can cause funky layouts if this leaderboard is refreshed to a different size
				var path = window.SD.Ads.slotsById[id].getAdUnitPath();
				/*var complement = gptadComplements[path];
				if (complement) {
					var complement_shortname = complement[0];
					var complement_path = "/41014381/SD/" + complement_shortname;
					var slot = window.SD.Ads.slotsById[window.SD.Ads.idsByPath[complement_path]];
					if (slot) {
						googletag.destroySlots([slot]);
						var $wrappedAd = $(window.SD.Ads.Helpers.getContainerIDFromPath(complement_path));
						$wrappedAd.remove();
						delete gptadComplements[path];
					}
				}*/

			}

			pbjs.requestBids({
				timeout: window.bizxPrebid.PREBID_TIMEOUT,
				adUnitCodes: reloadIds,
				bidsBackHandler: function () {
					var reloadSlots = reloadIds.map(function(id) { return window.SD.Ads.slotsById[id]; });

					// clear out previous sizing attrs, as they may change after refresh
/*
					for (var i = 0; i < reloadSlots.length; i++) {
						var $wrappedAd = $(window.SD.Ads.Helpers.getContainerIDFromPath(reloadSlots[i].getAdUnitPath()));
						var classes = $wrappedAd.attr('class').split(' ');
						for (var j = 0; j < classes.length; j++) {
							if (classes[j].indexOf('sz_') >= 0) {
								$wrappedAd.removeClass(classes[j]);
							}
						}
					}
*/
					pbjs.setTargetingForGPTAsync(reloadIds);
					googletag.pubads().refresh(reloadSlots);
				}
			});
		});
	}
</script>

<!-- CrossPixel -->
<script type="text/javascript">
if (window.is_euro_union === 0) {
    bizx.cmp.ifConsent('', ['all'], function(){
        try{(function(){ var cb = new Date().getTime(); var s = document.createElement("script"); s.defer = true; s.src = "//tag.crsspxl.com/s1.js?d=2397&cb="+cb; var s0 = document.getElementsByTagName('script')[0]; s0.parentNode.insertBefore(s, s0); })();}catch(e){}
    });
}
</script>




<!-- AdBlock Check -->
<script>
var sdAdBlockActive = true;
</script>
<script async src="//a.fsdn.com/sd/js/scripts/adsbanner.js?113c0e21a080c5f1"></script>
</head>

<body class="anon firehose ">

	
	<script src="//a.fsdn.com/sd/all-minified.js?113c0e21a080c5f1" type="text/javascript"></script>
	
	
	<script type="text/javascript">
(function(){
var regexp=/\s*(?:\d+|many)\s+more\s*/i;

	
	var auto_more_count = 1;

	function auto_more(){
		var $more_link = $('#more-experiment a');
		$more_link.each(function(){
			var $lastitem = $('#firehoselist>article.fhitem:visible:last');
			if ( Bounds.intersect(window, $lastitem) ) {
			
			
				!--auto_more_count && (auto_more=undefined);
				// don't allow a call till the next paginate gets built and |more_possible|
				$(document).unbind('scroll', call_auto_more);
			}
		});
	};

	function call_auto_more(){ auto_more && auto_more(); }
	

$('#more-experiment a').
	live('more-possible', function( event ){
		var $more_link=$(this);
		if ( regexp.test($more_link.text()) ) {
		
			$(document).bind('scroll', call_auto_more);
		} else {
			$(document).unbind('scroll', call_auto_more);
		
		}
	});
})();
</script>
	<!--[if lt IE 9]><script src="//a.fsdn.com/sd/html5.js"></script><![endif]-->
	
	
	<!-- index2_variant ||-->
		<script>
	if (window.is_euro_union === 0) {
            bizx.cmp.ifConsent('', ['all'], function () {
                (function (s,o,n,a,r,i,z,e) {s['StackSonarObject']=r;s[r]=s[r]||function(){
                (s[r].q=s[r].q||[]).push(arguments)},s[r].l=1*new Date();i=o.createElement(n),
                z=o.getElementsByTagName(n)[0];i.async=1;i.src=a;z.parentNode.insertBefore(i,z)
                })(window,document,'script','https://www.stack-sonar.com/ping.js','stackSonar');
                stackSonar('stack-connect', '66');
            });
        }
	</script>
        <!-- jobbio !-->

        <script type="text/javascript">
        bizx.cmp.ifConsent('', ['all'], function () {
        var j_script = document.createElement('script')
        j_script.setAttribute('src', 'https://widgets.jobbio.com/partner_fluid_widgets_v1.6.1/display.min.js')
        j_script.setAttribute('id','jobbio-display-script')
        j_script.setAttribute('async','')
        j_script.onload = function handle(){
        if (document.getElementById('bottom-masonry')){
            jobbio_display.widget({
                slug: 'slashdot-jobs',
                container: 'bottom-masonry',
                style: 'masonry',
                count: 6,
                type: 'multiple',
                content: 'jobs',
                searchTerm: '',
            });
        }

        jobbio_display.widget({
            slug: 'slashdot-jobs',
            container: 'horizontal',
            style: 'horizontal',
            count: 4,
            type: 'multiple',
            content: 'jobs',
            searchTerm: '',
        })
        if (document.getElementById('sidebar-j')){
            jobbio_display.widget({
                slug: 'slashdot-jobs',
                container: 'sidebar-j',
                style: 'sidebar',
                count: 6,
                type: 'multiple',
                content: 'jobs',
                searchTerm: '',
            });
        }

        }
        document.head.appendChild(j_script);
        })
        </script>
        <!-- mailchimp newsletter !-->
        <script id="mcjs">
        if (document.domain.match(/^(tech\.)?slashdot\.org$|\.xb\./)) {
            bizx.cmp.ifConsent('', ['all'], function () {
                !function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,"script","https://chimpstatic.com/mcjs-connected/js/users/aab6529d3675bd877963a652d/fc2aefbb539f9ecd8f1ab4cee.js");    
            });
        }
        </script>
		<!-- html-header type=current end --><!-- header type=current begin -->
	
	
	
	<link rel="top"       title="News for nerds, stuff that matters" href="//slashdot.org/" >
<link rel="search"    title="Search Slashdot" href="//developers.slashdot.org/search.pl">
<link rel="alternate" title="Slashdot RSS" href="https://rss.slashdot.org/Slashdot/slashdotDevelopers" type="application/rss+xml">
	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">

	
		<div id="top_parent"></div>
		<a name="topothepage"></a>
		
		<div class="container">
			<div class="nav-wrap">
				<nav class="nav-primary" role="navigation" aria-label="Global Navigation">
					<h1 class="logo">
	<a href="//slashdot.org"><span>Slashdot</span></a>
</h1>

<ul class="nav-site">
	<li><a href="//slashdot.org"><i class="icon-book" title="Stories"></i><span>Stories</span></a></li>
	<li>
		<ul class="filter-firehose">
			<li class="nav-label">Firehose <i class="icon-angle-right"></i></li>
			<li><a href="//slashdot.org/recent">All</a></li>
			<li><a href="//slashdot.org/popular">Popular</a></li>
		</ul>
	</li>
	<li><a href="//slashdot.org/polls"><i class="icon-chart-bar" title="Polls"></i><span>Polls</span></a></li>

	<!--
	<li><a href="//ask.slashdot.org"><i class="icon-question-circle"></i><span>Ask</span></a></li>
	
	<li><a href="//events.slashdot.org"><i class="icon-calendar"></i><span>Events</span></a></li>
	-->
	<li><a href="https://slashdot.org/software/"><i class="sd-mini"></i> <span>Software</span></a></li>
        <li><a href="//slashdot.org/newsletter"><span>Newsletter</span></a></li>
        <li><a href="//slashdot.org/jobs" rel="nofollow"><span>Jobs</span></a></li>
</ul>
<a href="//slashdot.org/submission" class="btn btn-success">Submit</a>
				</nav>
				<nav class="nav-user" role="navigation" aria-label="user access and account controls">
					<form id="search" class="form-inline nav-search-form" method="get" action="//slashdot.org/index2.pl">
<!-- //developers.slashdot.org/index2.pl" -->
	<div class="form-group">
		<label class="sr-only" for="sitesearch">Search Slashdot</label>
		<div class="input-group">
			<input type="text" id="" class="" name="fhfilter" value="" placeholder="Search">
		</div>
	</div>
	<button type="submit" class="btn icon-search"></button>
</form>
<ul class="user-access">
	
		
			<li >
				<a href="//slashdot.org/my/login"  onclick="show_login_box(); return false;"><i class="icon-login"></i><span> Login</span></a>
				
			</li>
		
	
		
			<li class="nav-label">or</li>
		
	
		
			<li >
				<a href="//slashdot.org/my/newuser"  ><i class="icon-user-add"></i><span> Sign up</span></a>
				
			</li>
		
	
</ul>
				</nav>
			</div>
			<div class="nav-secondary-wrap">
				<nav class="nav-secondary" role="secondary-navigation">
	<ul>
		<li class="nav-label">Topics: </li>
		<li><a href="//devices.slashdot.org">Devices</a></li>
		<li><a href="//build.slashdot.org">Build</a></li>
		<li><a href="//entertainment.slashdot.org">Entertainment</a></li>
		<li><a href="//technology.slashdot.org">Technology</a></li>
		<li><a href="//slashdot.org/?fhfilter=opensource">Open Source</a></li>
		<li><a href="//science.slashdot.org">Science</a></li>
		<li><a href="//yro.slashdot.org">YRO</a></li>
		<!-- <li><a href="//slashdot.org/topics.pl">more...</a></li> -->
	</ul>
</nav>
<nav class="nav-social" role="social navigation">
	<ul>
		<li class="nav-label">Follow us:</li>
		<li><a href="https://rss.slashdot.org/Slashdot/slashdotMain" target="_blank" rel="nofollow"><i class="icon-rss-squared"></i><span class="sr-only">RSS</span></a></li>
		<li><a href="https://www.facebook.com/slashdot" target="_blank" rel="nofollow"><i class="icon-facebook-squared"></i><span class="sr-only">Facebook</span></a></li>
		<li><a href="https://www.linkedin.com/company/slashdot" target="_blank" rel="nofollow"><i class="icon-linkedin-squared"></i><span class="sr-only">LinkedIn</span></a></li>
		<li><a href="https://twitter.com/slashdot" target="_blank" rel="nofollow"><i class="icon-twitter-squared"></i><span class="sr-only">Twitter</span></a></li>
		<li><a href="https://www.youtube.com/channel/UCsW36751Gy-EAbHQwe9WBNw" target="_blank" rel="nofollow"><i class="icon-youtube-squared">
                    <!-- width="1792" height="1792" -->
                    <svg viewBox="0 260 1792 1260" xmlns="http://www.w3.org/2000/svg"><path d="M711 1128l484-250-484-253v503zm185-862q168 0 324.5 4.5t229.5 9.5l73 4q1 0 17 1.5t23 3 23.5 4.5 28.5 8 28 13 31 19.5 29 26.5q6 6 15.5 18.5t29 58.5 26.5 101q8 64 12.5 136.5t5.5 113.5v176q1 145-18 290-7 55-25 99.5t-32 61.5l-14 17q-14 15-29 26.5t-31 19-28 12.5-28.5 8-24 4.5-23 3-16.5 1.5q-251 19-627 19-207-2-359.5-6.5t-200.5-7.5l-49-4-36-4q-36-5-54.5-10t-51-21-56.5-41q-6-6-15.5-18.5t-29-58.5-26.5-101q-8-64-12.5-136.5t-5.5-113.5v-176q-1-145 18-290 7-55 25-99.5t32-61.5l14-17q14-15 29-26.5t31-19.5 28-13 28.5-8 23.5-4.5 23-3 17-1.5q251-18 627-18z"/></svg>
                </i><span class="sr-only">Youtube</span></a></li>
		<li><a href="https://mastodon.cloud/@slashdot" target="_blank" rel="me nofollow"><i class="icon-mastodon-squared">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M433 179.11c0-97.2-63.71-125.7-63.71-125.7-62.52-28.7-228.56-28.4-290.48 0 0 0-63.72 28.5-63.72 125.7 0 115.7-6.6 259.4 105.63 289.1 40.51 10.7 75.32 13 103.33 11.4 50.81-2.8 79.32-18.1 79.32-18.1l-1.7-36.9s-36.31 11.4-77.12 10.1c-40.41-1.4-83-4.4-89.63-54a102.54 102.54 0 0 1-.9-13.9c85.63 20.9 158.65 9.1 178.75 6.7 56.12-6.7 105-41.3 111.23-72.9 9.8-49.8 9-121.5 9-121.5zm-75.12 125.2h-46.63v-114.2c0-49.7-64-51.6-64 6.9v62.5h-46.33V197c0-58.5-64-56.6-64-6.9v114.2H90.19c0-122.1-5.2-147.9 18.41-175 25.9-28.9 79.82-30.8 103.83 6.1l11.6 19.5 11.6-19.5c24.11-37.1 78.12-34.8 103.83-6.1 23.71 27.3 18.4 53 18.4 175z"/></svg>
				</i><span class="sr-only">Mastodon</span></a></li>
		<li><a href="//slashdot.org/newsletter" target="_blank" rel="nofollow"><i class="icon-mail-squared"></i><span class="sr-only">Newsletter</span></a></li>
	</ul>
</nav>
			</div>
		</div>

		<section>
		
			<div class="message-bar" id="firehose-message-tray">
				<span class="icon-quote-left"></span>
				<p>
					
						
						Catch up on stories from the past week (and beyond) at the <a href="//slashdot.org/archive.pl">Slashdot story archive</a>
					
				</p>
			</div>
		
		
			<div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
		
		
			<div class="banner-wrapper">
				<div class="adwrap adwrap-unviewed banner-contain">
					
					<div id='div-gpt-ad-728x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_a');});</script></div>
					<div id='div-gpt-ad-hubicon_200x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-hubicon_200x90_a');});</script></div>
				</div>
			</div>
		
		<a name="main-articles"></a>
	
	<!-- header type=current end --><!-- body begin -->







	

	<style type="text/css">
menu, menu * {
	text-decoration:none;
}

menu[type=context] {
	display:none;
	position:absolute;
	z-index:10000;
}

menu[type=context]:not(.brief) {
	background-color:#dfdfdf;
	margin:0;
	padding:2px 0.5em;
	border-style:solid;
	border-width:1px;
	border-color:#eeeeee #aaaaaa #aaaaaa #eeeeee;
	-moz-border-radius-topright:.7em;
	-webkit-border-top-right-radius: 0.7em 0.7em;
}

menu.full[type=context] > a.slash-hover:first-child {
	-moz-border-radius-topright:.6em;
	-webkit-border-top-right-radius: 0.6em 0.6em;
}



menu.brief[type=context] > a {
	-moz-border-radius:.6em;
	-webkit-border-radius: 0.6em;
	color:#ffffff;
	background-color:#000000;
}

/*
span.briefmenu a.tag:not(.datatype) {
    padding-left:.5em;
}
*/




/* #tag-menu a, #feedback-menu a  { */
menu.tag-menu-admin a {
	display:list-item;
	list-style:none;
	text-align:left;
	font-weight:bold;
	color:black;
	padding:0.1em 0.5em;
	margin:-0.1em -0.5em;
	cursor:pointer;
}


.tags .edit-bar { position:relative; }
article aside .share .addthis_toolbox { display:block; width:60px; float:left; }
article aside.view_mode .share { min-width:120px; padding-top:.5em; }
#firehose.list article header h2 {padding-left: 20px; !important}
.novote .vote { display:none; }

.vote > a, .votedup > a, .voteddown > a {
	display:inline-block;
	height:22px;
	width:22px;
	margin: 2px 10px 0 0;
	color:rgb(255,255,255);
	text-decoration:none;
	line-height:22px;
	text-align:center;
	font-weight:bold;
	font-size:14px;
	border-width:1px;
	border-style:solid;
	border-color:rgba(0,0,0,0.5);
}

.vote > a, .votedup > a, .voteddown > a {color:rgb(0,0,0);}

article.fhitem-submission h2 .vote > a, article.fhitem-submission h2 .votedup > a, article.fhitem-submission h2 .voteddown > a { border-color:rgba(0,0,0,0.15); }
.vote .up, .vote .down, .votedup .up, .votedup .down, .voteddown .up, .voteddown .down { border-radius: 4px; -moz-border-radius: 4px; -webkit-border-radius: 4px; /* text-shadow:0 0 2px #000000; }*/}
article:not(.fhitem-story) .vote .up,article:not(.fhitem-story) .vote .down,article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .votedup .down,article:not(.fhitem-story) .voteddown .up,article:not(.fhitem-story) .voteddown .down { /*text-shadow:none !important; */}
.voteddown .down, .votedup .up { margin-right: 10px; text-indent:2px; line-height:24px; }
article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .voteddown .down {background: rgb(174,174,174);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(174,174,174)), to(rgb(193,193,193)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(193,193,193), rgb(174,174,174) 100%);color:rgb(0,0,0);}
article.fhitem-story .votedup .up,article.fhitem-story .voteddown .down {background: rgb(0,66,66);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(0,53,53)), to(rgb(0,102,102)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(0,102,102), rgb(0,53,53) 100%);}




#tag-menu span.var-tag {
font-weight:normal;
color:#444444;
}

menu.reasons-menu a {
padding:0 .25em 0 .25em;
font-size:80%;
-moz-border-radius:.5em;
-webkit-border-radius:.5em;
cursor:pointer;
}

menu.reasons-menu a:hover {
background:rgb(153,153,153);
background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102);
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102)));
color:#fff;
text-decoration:none;
font-weignt:normal;
}

article.fhitem-story menu.reasons-menu a:hover {
background:#002323 !important;
background:-moz-linear-gradient(100% 100% 90deg, #002323, #005353 70%) repeat scroll 0 0 #002323 !important;
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#005353), to(#002323)) !important;
}


menu.reasons-menu {
	display:none;
	margin:0;
	padding:0;
}

div.fhitem h3 menu.reasons-menu {
margin:0.25em 0 0;
}

div.fhitem h3 menu.reasons-menu a.tag {
font-size:.8em;
}

#tag-menu a.slash-hover,
#feedback-menu a.slash-hover,

.tag-display span.tag:hover,
.tag-display span.tag.trigger {
	color:white;
	background-color:rgb(0, 85, 85);
}

#tag-menu a.slash-hover span.var-tag {
	color:#eee;
}

.tag-entry.default {
        color:#ccc;
}

.brief .nix {
	margin-top:-1.35em;
	margin-left:0px;
	margin-top:-1.15em;
	text-decoration:none;
	line-height:1.35em;
	padding:0 2px;
	-moz-border-radius:.6em 0 0 .6em;
	-webkit-border-radius:.6em 0 0 .6em;
	-o-border-radius:.6em 0 0 .6em;
	border-radius:.6em 0 0 .6em;
    color:#fff !important;
    background:transparent !important;
}

.brief .nix:hover {
    background:rgb(153,153,153) !important;
    background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102) !important;
    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102))) !important;
}

</style>

<menu id="nix-reasons" style="display:none">
	<a class="tag">binspam</a><a class="tag">dupe</a><a class="tag">notthebest</a><a class="tag">offtopic</a><a class="tag">slownewsday</a><a class="tag">stale</a><a class="tag">stupid</a>
</menu>
<menu id="nod-reasons" style="display:none">
	<a class="tag">fresh</a><a class="tag">funny</a><a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">maybe</a>
</menu>
<menu id="comment-nix-reasons" style="display:none">
	<a class="tag">offtopic</a><a class="tag">flamebait</a><a class="tag">troll</a><a class="tag">redundant</a><a class="tag">overrated</a>
</menu>
<menu id="comment-nod-reasons" style="display:none">
	<a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">informative</a><a class="tag">funny</a><a class="tag">underrated</a>
</menu>

<menu id="tag-nod-reasons" style="display:none">
	<a class="tag">descriptive</a>
</menu>
<menu id="feedback-menu" class="tag-menu-admin" type="context">
	<a class="tag">typo</a><a class="tag">dupe</a><a class="tag">error</a>
</menu>
<menu id="tag-menu" class="tag-menu-admin none" type="context">

<!--	<a data-op="!" class="nix">!<span class="var-tag hide"></span></a>-->

</menu>

<script type="text/javascript">
$(function(){
var $CURRENT_MENU, $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/, IE7=/^7\.0/, TAG_PREFIX=/^\/tag\//;

function get_tag_name( $tag ){
	return ($tag.attr('href') || '').replace(TAG_PREFIX, '') || $tag.text().toLowerCase();
}

function trigger_menu( e, selector, $menu, menu_content ){
	var $target=$(original_target(e, selector)), in_use=$target.is('.trigger');
	if ( $CURRENT_MENU ) {
		$CURRENT_MENU.menu('cancel', e);
		$CURRENT_MENU = null;
	}

	if ( !in_use ) {
		menu_content && $menu.stop(true, true).hide().html(menu_content);
		($CURRENT_MENU=$menu).menu('context', e);
	}
	return !in_use;
}

function open_menu( trigger, $menu ){
	var $trigger=$(trigger), $fhitem=$trigger.closest('.fhitem');
	$fhitem.length && user_intent('interest', $fhitem[0]);

	$menu.appendTo(document.body).css({ opacity:0 }).show();

	var 	right	= $fhitem.offset().left + $fhitem.width(),
		global	= $trigger.offset(),
		local	= $menu.offsetParent().offset();

	// Ugly IE position hack required:
	$.browser.msie && IE7.test($.browser.version) && (local.top = 0);

	// pin the menu (horizontally) on-screen
	global.left = Math.min(global.left, right-$menu.width());

	$trigger.addClass('trigger');
	$menu.css({
		position:	'absolute',
		top:		global.top - local.top + $trigger.height(),
		left:		global.left - local.left,
		opacity:	1
	});
}

function close_menu( trigger, $menu ){
	$menu.hide();
	$(trigger).removeClass('trigger');
	($CURRENT_MENU===$menu) && ($CURRENT_MENU=false);
}

/* T2 tag context-menu */
var $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/;


    var user_is_admin = 0;



$('a[rel=tag]').live('mousedown',function(ea){
    window.open(this.href);
    return false;
})

$('.tag-bar .disagree').live('mousedown',function(ee){
	var fhitem = $(original_target(ee)).closest('.fhitem')[0],
		command = ('!' + $(original_target(ee)).attr("data-tag")).replace(NOTNOT, '');
    try { Tags.submit(fhitem, command); } catch ( err ) {  }
    return false;
})



$('a[rel=tag]').
	live('mousedown', function( e ){
        
            return true;
        

	}).
	live('click', function( e ){
		if ( !logged_in ) {
			var	target	= original_target(e),
				tag	= $(target).text();
			addfhfilter(tag);
		}
		e.preventDefault();
		return false;
	});

$TAG_MENU.menu({
	cssNamespace: 'slash',
	liveTriggers: true,
	clickDuration: 300,

	start: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			context	= firehose_settings && firehose_settings.viewtitle;

		// Insert the tagname into the menu items where needed.
		$TAG_MENU.find('span.var-tag').text(tag);
		$TAG_MENU.find('a.nix').attr('title','not ' + tag);


			// non-admins may only delete their own tags
		$TAG_MENU.find('a[data-op="-"]').toggle($tag.is('.my'));
	

		// *tagname* in *viewtitle*
		$TAG_MENU.find('a[data-op="="]').toggle(!!context);
		context && $TAG_MENU.find('span.var-view').text(context);

		open_menu($tag, $TAG_MENU);
	},

	select: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			op	= $(ui.event.target).attr('data-op'),
			fhitem,
			command;

		// Global for positioning other things.
		$related_trigger = $tag;

		switch ( op ) {
			case '=':
				addfhfilter(tag);
				break;

			default:
				fhitem = $tag.closest('.fhitem')[0];
				command = (op + tag).replace(NOTNOT, '');
				try { Tags.submit(fhitem, command); } catch ( err ) {  }
				break;
		}
	},

	stop: function( e, ui ){ close_menu(ui.trigger, $TAG_MENU); }
});




/* T2 feedback context-menu */



/* T2 datatype context-menu (admin-only) */






});
</script>

	

<!-- SMACKS: BEGIN STORY CONTENT -->
<div class="container">
	<!--SMACKS: BEGING CENTER COLUMN -->
	<div class="main-wrap has-rail-right">
		<div class="main-content">
			<div class="grid_24 a2 ">
			</div>
			<div id="firehose" class="nothumbs">
			<div id="firehoselist" class="fhroot fleft  grid_24">
				<div id="announcement">
  <div id="announcementText" style="display: none;"> <a href="https://slashdot.org/newsletter" rel="nofollow"><strong>Sign up for the Slashdot newsletter!</strong></a> OR <a href="https://jobs.slashdot.org/?source=boiler_plate&utm_source=boiler_plate&utm_medium=content&utm_campaign=bp_referral" rel="nofollow">check out the new Slashdot job board to browse remote jobs or jobs in your area</a><br><br></strong>Do you develop on GitHub? You can keep using GitHub but automatically <a href="https://sourceforge.net/p/forge/documentation/GitHub%20Importer/" rel="nofollow"><strong>sync your GitHub releases to SourceForge</a></strong> quickly and easily with <strong><a href="https://sourceforge.net/p/import_project/github/" rel="nofollow">this tool</a></strong> so your projects have a backup location, and get your project in front of SourceForge's nearly 30 million monthly users. It takes less than a minute. Get new users downloading your project releases today!</span><br></div>
  <a href="" class="btn-close" title="don't show me this again" onclick="closeAnnouncement(); return false;">&times;</a>
</div>


<script type="text/javascript">

if (!$.cookie('hide_sitenotice_36')) {
	$('#announcement').fadeIn(300);
}

function closeAnnouncement() {
	$('#announcement').fadeOut(300);
	$.cookie('hide_sitenotice_36', 'true', { path: '/', domain: 'slashdot.org', expires: 1 });
}
</script>
				<article id="firehose-172687144" data-fhid="172687144" data-fhtype="story" class="fhitem fhitem-story article usermode thumbs grid_24">
		<span class="sd-info-block" style="display: none">
			<span class="sd-key-firehose-id">172687144</span>
			<span class="type">story</span>
			
		</span>







	
	

<header>
	
		<span class="topic" id="topic-172687144">
			<a href="//developers.slashdot.org/index2.pl?fhfilter=programming" onclick="return addfhfilter('programming');">
			
				<img src="//a.fsdn.com/sd/topics/programming_64.png" width="64" height="64" alt="Programming" title="Programming">
			
		</a>
		
	
		
		
		
		

		
		<a href="//developers.slashdot.org/index2.pl?fhfilter=ai" onclick="return addfhfilter('ai');">
			
				<img src="//a.fsdn.com/sd/topics/ai_64.png" width="64" height="64" alt="AI" title="AI">
			
		</a>
		</span>
	

	<h2 class="story">
		

		

		
		

		

		

		

		<span id="title-172687144" class="story-title"> <a   href="//developers.slashdot.org/story/24/01/06/238237/can-ai-generated-proofs-bring-bug-free-software-one-step-closer">Can AI-Generated Proofs Bring Bug-Free Software One Step Closer?</a> <span class=" no extlnk"><a class="story-sourcelnk" href="https://www.umass.edu/news/article/umass-amherst-researchers-bring-dream-bug-free-software-one-step-closer-reality"  title="External link - https://www.umass.edu/news/article/umass-amherst-researchers-bring-dream-bug-free-software-one-step-closer-reality" target="_blank"> (umass.edu) </a></span></span>

		
		
		<!--<span class="comments commentcnt-172687144" >47</span>-->
		

		
		<!-- comment bubble -->
		
			<span class="comment-bubble"><a href="//developers.slashdot.org/story/24/01/06/238237/can-ai-generated-proofs-bring-bug-free-software-one-step-closer#comments" title="">47</a></span>
		
	</h2>
	<div class="details" id="details-172687144">
		<span class="story-details">
		<span class="story-views">
			<span class="sodify" onclick="firehose_set_options('color', 'red')" title="Filter Firehose to entries rated red or better"></span><span class="icon-beaker pop1 " alt="Popularity" title="Filter Firehose to entries rated red or better" onclick="firehose_set_options('color', 'red')"><span></span></span> 
		</span>
		</span>
		<span class="story-byline">
	
				
			Posted
				by 
		
		
			
				  EditorDavid
			
		
		

		
		
		<time id="fhtime-172687144" datetime="on Saturday January 06, 2024 @09:34PM">on Saturday January 06, 2024 @09:34PM</time>
		
		
			 from the <span class="dept-text">machines-learning</span> dept.
		
		</span>
	</div>
</header>

<div class="body" id="fhbody-172687144">
	
		
	

	
		
		<div id="text-172687144" class="p">
			
		 	
				The University of Massachusetts Amherst <a href="https://www.umass.edu/news/article/umass-amherst-researchers-bring-dream-bug-free-software-one-step-closer-reality">has an announcement</a>.  A team of computer scientists "recently announced a new method for automatically generating whole proofs that can be used to prevent software bugs and verify that the underlying code is correct." It leverages the AI power of Large Language Models, and the new method, called Baldur, "yields unprecedented efficacy of nearly 66%." <br> <br>

The idea behind the machine-checking technique was "to generate a mathematical proof showing that the code does what it is expected to do," according to the announcement, "and then use a theorem prover to make sure that the proof is also correct.

<i>But manually writing these proofs is incredibly time-consuming and requires extensive expertise. "These proofs can be many times longer than the software code itself," says Emily First, the paper's lead author who completed this research as part of her doctoral dissertation at UMass Amherst...  First, whose team performed its work at Google, used Minerva, an LLM trained on a large corpus of natural-language text, and then fine-tuned it on 118GB of mathematical scientific papers and webpages containing mathematical expressions. Next, she further fine-tuned the LLM on a language, called Isabelle/HOL, in which the mathematical proofs are written. Baldur then generated an entire proof and worked in tandem with the theorem prover to check its work. When the theorem prover caught an error, it fed the proof, as well as information about the error, back into the LLM, so that it can learn from its mistake and generate a new and hopefully error-free proof.<br> <br>

This process yields a remarkable increase in accuracy. The state-of-the-art tool for automatically generating proofs is called Thor, which can generate proofs 57% of the time. When Baldur (Thor's brother, according to Norse mythology) is paired with Thor, the two can generate proofs 65.7% of the time.  Though there is still a large degree of error, Baldur is by far the most effective and efficient way yet devised to verify software correctness, and as the capabilities of AI are increasingly extended and refined, so should Baldur's effectiveness grow.<br> <br>
In addition to First and Brun, the team includes Markus Rabe, who was employed by Google at the time, and Talia Ringer, an assistant professor at the University of Illinois &mdash; Urbana Champaign. This work was performed at Google and supported by the Defense Advanced Research Projects Agency and the National Science Foundation.
</i><br>
		 	
		</div>

		

		

		
			
		
	</div>
	<aside class="grid_24 view_mode">
		
			<div class="units-12 story-detail-tags">
				<span id="sharethis-172687144" class="">
					
						

						

					
				</span>

				<div class="story-tags">
					<div class="tright tw">
						
							<span class="tright tags">
								
									<menu type="toolbar" class="edit-bar">
		<span id="tagbar-172687144" class="tag-bar none">
			
		</span>
		
		<!--
			<a class="edit-toggle" href="/my/login/" onclick="show_login_box();return false;">
				<span class="icon-tag btn collapse"></span>
			</a>
			-->
		
		
		<div class="tag-menu">
			<input class="tag-entry default" type="text" value="apply tags">
		</div>
		

		
		

	</menu>
								
							</span>
						
					</div>
				</div>
			</div>

			
				
				
				
			 	
					<section class="grid_24" id="newa2footerv2">
						<div class="grid_6 pr">
							<h3><a title="Previous story" href="//hardware.slashdot.org/story/24/01/06/0515241/americas-first-large-scale-offshore-wind-project-finally-begins-generating-electricity?sdsrc=prev">&larr;</a></h3>
						</div>
						<div class="grid_12 rl">
							<h3>You may like to read:</h3>
						</div>
						<div class="grid_6 ns">
							<h3><a title="Next story" href="//tech.slashdot.org/story/24/01/06/2157225/blaming-social-media-acm-publication-argues-computing-has-blood-on-its-hands?sdsrc=next">&rarr;</a></h3>
						</div>
						<div class="grid_6">
							<span class="c">
								<a href="//hardware.slashdot.org/story/24/01/06/0515241/americas-first-large-scale-offshore-wind-project-finally-begins-generating-electricity?sdsrc=prev">America's First Large-Scale Offshore Wind Project Finally Begins Generating Electricity </a>
							</span>
						</div>
						<div class="grid_12">
							<span class="c">
								
									
									
									
									

																				<h2><a href="//developers.slashdot.org/story/23/08/07/0136228/should-a-variables-type-come-after-its-name?sdsrc=popbyskid">Should a Variable's Type Come After Its Name?</a><br></h2>
																				<h2><a href="//developers.slashdot.org/story/23/09/02/1753239/are-scrums-a-cancer?sdsrc=popbyskid">Are Scrums a Cancer?</a><br></h2>
																				<h2><a href="//developers.slashdot.org/story/23/06/26/018234/34-of-ap-cs-students-couldnt-solve-this-java-based-2d-array-question?sdsrc=popbyskid">34% of AP CS Students Couldn't Solve This Java-Based 2D Array Question</a><br></h2>
																				<h2><a href="//developers.slashdot.org/story/23/06/03/1514212/nyt-its-the-end-of-computer-programming-as-we-know-it?sdsrc=popbyskid">NYT: It's the End of Computer Programming As We Know It</a><br></h2>
																				<h2><a href="//developers.slashdot.org/story/23/01/21/0526236/rust-safety-is-not-superior-to-c-bjarne-stroustrup-says?sdsrc=popbyskid">Rust Safety Is Not Superior To C++, Bjarne Stroustrup Says</a><br></h2>
									
								
								
							</span>
						</div>
						<div class="grid_6">
							<span class="c">
								
									<a href="//tech.slashdot.org/story/24/01/06/2157225/blaming-social-media-acm-publication-argues-computing-has-blood-on-its-hands?sdsrc=next">Blaming Social Media, ACM Publication Argues Computing 'Has Blood On Its Hands'</a>
								
							</span>
						</div>
					</section>
				
			
		
	</aside>
	



	</article>
			</div>
			</div>
		</div>
	</div>
	<!-- SMACKS: BEGIN RIGHT RAIL -->
	<aside id="slashboxes" class="rail-right">
		
                    <div id="slashboxesin" class="yui-b">
                            
                            
                            
                    </div>
		    <div class="railad adwrap-unviewed">
<div id='div-gpt-ad-300x250_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-300x250_a');});</script></div>
</div>
		
	</aside>
		<!-- SMACKS: END RIGHT RAIL -->
</div>
<!-- END STORY CONTENT -->

<!-- THIS IS THE LOCATION FOR THE NEW STORY_B CODE -->
<div class="adwrap">
<div id='div-gpt-ad-728x90_b'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_b');});</script></div>
</div>
<script type="text/javascript">
if (window.is_euro_union === 0) {
    if (sdAdBlockActive) {
        bizx.cmp.ifConsent('', ['all'], function () {
            $.ajax({
                url: '/ajax.pl?op=nel',
                type: 'POST',
                success: function(html){
                    if(html){
                        $('#firehoselist article').eq(0).after(html);
                    }
                }
            });
        });
    }
}
</script>
<!--------------------------->


<!-- SMACKS: BEGIN COMMENTS CONTAINER -->
<div class="container">
	<!-- SMACKS: BEGIN COMMENTS SECTION -->
	<div class="main-wrap">
        <div id='horizontal' class='jobbioapp' style="width:initial;margin-right:320px;"></div>
		<div class="main-content">
			<div id="comments" class="a2commentwrap">
			<div>
					<a name="comments"></a>
<div id="comments" class="container">
	<div class="main-wrap">
		<div class="main-content">
			<section class="d2incommentspl">
				<div class="commentwrap" id="commentwrap">
					
						<div class="commentBox">
							<div class="title hide">
								<h4>
									
										<span class="escape-link"><a href="//developers.slashdot.org/story/24/01/06/238237/can-ai-generated-proofs-bring-bug-free-software-one-step-closer" title="Back to Article - Can AI-Generated Proofs Bring Bug-Free Software One Step Closer?">Can AI-Generated Proofs Bring Bug-Free Software One Step Closer?</a></span>
									
									<span class="commentBoxLinks"><a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_d"></span> More</a>



	| <span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Reply</a>


	<a class="login"  href="//developers.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a></span>
								</h4>
							</div>
						</div>
					

					<section class="grid_24" id="d2header"><div>
						
							<h2 class="commentspl test"><a title="Back to Article - Can AI-Generated Proofs Bring Bug-Free Software One Step Closer?" href="//developers.slashdot.org/story/24/01/06/238237/can-ai-generated-proofs-bring-bug-free-software-one-step-closer">Can AI-Generated Proofs Bring Bug-Free Software One Step Closer?</a></h2>
						
						<nav class="grid_24">
							<div class="grid_14 widthauto">
							
						 		<span class="ind"></span><a class="btn first" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Post</a>
							
							<!-- <a href="//developers.slashdot.org/search.pl?op=comments&amp;sid=23184360" class="btn">Search <span class="totalcommentcnt">47</span> Comments</a> -->
							
								
									<a href="#" onclick="D2.ajaxFetchComments(0,1,'','',-1); return false" class="btn" id="d2loadall">Load All Comments</a>
								
							
							
								</div>
								<div class="grid_10 d1or2">
							

							
								<div id="d2out" class="horizontal rooted grid_15">
									<div id="d2act" class="hide">
										<div class="loki" id="gods">
											<script type="text/javascript">
												 $(function(){
													 D2.slider = new D2.Slider(
														 D2.user_threshold(),
														 D2.user_highlightthresh(),
														 'x'
													 );
												 });
											</script>
											<div id="bones" class="grid_12">
												<div class="ccw-count-container grid_24">
													<span id="ccw-full-count-text" class="grid_8 ccw-count-text tcenter"><span></span><span id="ccw-full-phrase">&nbsp;Full</span></span>
													<span id="ccw-abbr-count-text" class="grid_8 ccw-count-text"><span></span><span id="ccw-abbr-phrase">&nbsp;Abbreviated</span></span>
													<span id="ccw-hide-count-text" class="grid_8 ccw-count-text tleft"><span></span><span id="ccw-hide-phrase">&nbsp;Hidden</span></span>
												</div>
												<div id="ccw">
													<div id="ccw-body" class="ccw-core">
														<div id="ccw-panel-container" class="ccw-core">
															<div id="ccw-full-panel" class="ccw-panel">
																/Sea<div class="ccw-panel-border"></div>
																<div id="ccw-full-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
															<div id="ccw-abbr-panel" class="ccw-panel">
																<div class="ccw-panel-border"></div>
																<div id="ccw-abbr-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
															<div id="ccw-hide-panel" class="ccw-panel">
																<div id="ccw-hide-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
														</div>
														<div id="ccw-control" class="ccw-core">
															<div id="ccw-centering-rail" class="ccw-core">
																<div id="ccw-hide-bar-pos" class="ccw-core-pos">
																	<div id="ccw-hide-bar" class="ccw-bar">
																		<div id="ccw-hide-bar-tab" class="ccw-bar-tab"></div>
																		<div class="ccwa"></div>
																		<div class="ccwb"></div>
																		<div id="ccw-hide-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(HIDE_BAR, +1)"></div>
																		<div id="ccw-hide-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(HIDE_BAR, -1)"></div>
																	</div>
																</div>
																<div id="ccw-abbr-bar-pos" class="ccw-core-pos">
																	<div id="ccw-abbr-bar" class="ccw-bar">
																		<div id="ccw-abbr-bar-tab" class="ccw-bar-tab"></div>
																		<div class="ccwa"></div>
																		<div class="ccwb"></div>
																		<div id="ccw-abbr-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(ABBR_BAR, +1)"></div>
																		<div id="ccw-abbr-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(ABBR_BAR, -1)"></div>
																	</div>
																</div>
															</div>
														</div>
													</div>
													<div class="ccw-score-label grid_24">
														<div class="grid_3"><span class="sc">Score:</span></div>
														<div class="grid_3">5<span class="lg"></span></div>
														<div class="grid_3">4<span class="lg"></span></div>
														<div class="grid_3">3<span class="lg"></span></div>
														<div class="grid_3">2<span class="lg"></span></div>
														<div class="grid_3">1<span class="lg"></span></div>
														<div class="grid_3">0<span class="lg"></span></div>
														<div class="grid_3">-1<span class="lg"></span></div>
													</div>
												</div>
											</div>
											<div class="commentControlFooter">
												<a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_c"></span> More</a>



	| <span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Reply</a>


	<a class="login"  href="//developers.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a><div id="login_cover" class="hide" onclick="hide_login_box()"></div>
<div id="login_box" class="hide">
	<div id="login_box_content">
		<div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="//developers.slashdot.org/comments.pl?sid=23184360">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
		<div class="actions">
			<a class="ico close" href="#" onclick="hide_login_box(); return false"><span>Close</span></a>
		</div>
	</div>
</div>
<script type="text/javascript">logged_in = 0</script>
											</div>
											<div id="commentControlBoxStatus" class="hide"></div>
										</div>
									</div>
								</div>
							
							
							<a href="//developers.slashdot.org/search.pl?op=comments&amp;sid=23184360" class="ui-icon search_comments">Search <span class="totalcommentcnt">47</span> Comments</a>
							
								<a class="pref ui-icon-w" href="//developers.slashdot.org/users.pl" onclick="show_login_box(); $('#modal_box').addClass('login'); return false;">Log In/Create an Account</a>
							
						</div>
					</nav>
					<section id="besttabs" class="grid_24">
						<span class="legend">Comments Filter:</span>
						<ul class="besttabslist">
							<li class="active">
								<a href="#" data-filter-url="//developers.slashdot.org/story/24/01/06/238237/can-ai-generated-proofs-bring-bug-free-software-one-step-closer#comments">All</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/01/06/238237/can-ai-generated-proofs-bring-bug-free-software-one-step-closer/insightful-comments#comments">Insightful</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/01/06/238237/can-ai-generated-proofs-bring-bug-free-software-one-step-closer/informative-comments#comments">Informative</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/01/06/238237/can-ai-generated-proofs-bring-bug-free-software-one-step-closer/interesting-comments#comments">Interesting</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/01/06/238237/can-ai-generated-proofs-bring-bug-free-software-one-step-closer/funny-comments#comments">Funny</a>
							</li>
						
					</ul>
					<script>
					(function($){
						$('#besttabs').show();
						$('.besttabslist').on('click', 'li a', function(e){
							e.preventDefault();
							var url = $(this).data('filter-url');
							//console.log('URL= ', url);
							$(this)
								.closest('ul').find('li').removeClass('active')
								.end()
								.closest('li').addClass('active');
							window.location = url;
						});
					})($j);
					</script>
			</section>
				<aside class="grid_24">
					<p>
						<small><strong>The Fine Print:</strong> The following comments are owned by whoever posted them.  We are not responsible for them in any way.</small>
					</p>
				</aside>
			</section>
			
		</div>
	</div>
</div><script src="//a.fsdn.com/sd/comments-minified.js?113c0e21a080c5f1" type="text/javascript"></script>


<script type="text/javascript">
<!--
D2.d2_keybindings_disable()[191] = 1;
D2.boxStatus(1);
D2.comments({ 64137968: { uid: 538166, pid: 64137706, read: 0, points: 2, kids: [  ], opid: 64137706 }, 64138430: { uid: 1185405, pid: 0, read: 0, points: 2, kids: [ 64138641, 64139263 ], opid: 0 }, 64137894: { uid: 666, pid: 64137724, subject: "Re:Plagerization and nfringementHasn't Worked So F", read: 0, points: 0, kids: [  ], opid: 64137724 }, 64137728: { uid: 1300111, pid: 0, read: 0, points: 4, kids: [ 64137738, 64137744, 64137754, 64138238 ], opid: 0 }, 64138200: { uid: 6309704, pid: 64137886, subject: "Re:AI generated code will suck ass", read: 0, points: 2, kids: [  ], opid: 64137886 }, 64137756: { uid: 663440, pid: 64137724, subject: "Re:Plagerization and nfringementHasn't Worked So F", read: 0, points: 2, kids: [  ], opid: 64137724 }, 64137820: { uid: 14640, pid: 64137754, read: 0, points: 4, kids: [  ], opid: 64137754 }, 64137902: { uid: 88907, pid: 64137762, subject: "Re:No. Obviously not. ", read: 0, points: 1, kids: [  ], opid: 64137762 }, 64137852: { uid: 1301187, pid: 0, read: 0, points: 4, kids: [  ], opid: 0 }, 64138166: { uid: 1787294, pid: 64137724, subject: "Re:Plagerization and nfringementHasn't Worked So F", read: 0, points: 2, kids: [  ], opid: 64137724 }, 64138641: { uid: 190835, pid: 64138430, read: 0, points: 1, kids: [  ], opid: 64138430 }, 64137754: { uid: 136606, pid: 64137728, subject: "Re:p vs np and the halting problem", read: 0, points: 2, kids: [ 64137820, 64137832 ], opid: 64137728 }, 64137832: { uid: 627731, pid: 64137754, subject: "Re:p vs np and the halting problem", read: 0, points: 2, kids: [ 64138062, 64138873 ], opid: 64137754 }, 64137886: { uid: 95548, pid: 0, read: 0, points: 2, kids: [ 64138134, 64138200 ], opid: 0 }, 64137706: { uid: 664604, pid: 0, read: 0, points: 2, kids: [ 64137922, 64137968 ], opid: 0 }, 64138228: { uid: 150855, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64139107: { uid: 467067, pid: 64137936, read: 0, points: 2, kids: [  ], opid: 64137936 }, 64137744: { uid: 547041, pid: 64137728, subject: "Re:p vs np and the halting problem", read: 0, points: 3, kids: [  ], opid: 64137728 }, 64137936: { uid: 3450605, pid: 64137724, subject: "Re:Plagerization and nfringementHasn't Worked So F", read: 0, points: 4, kids: [ 64139107 ], opid: 64137724 }, 64137872: { uid: 144606, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64137724: { uid: 871664, pid: 0, read: 0, points: 4, kids: [ 64137756, 64137768, 64137894, 64137936, 64138166 ], opid: 0 }, 64137900: { uid: 88907, pid: 64137812, subject: "Re: Plagerization and nfringementHasn't Worked So ", read: 0, points: 2, kids: [ 64137926 ], opid: 64137812 }, 64139219: { uid: 809573, pid: 64137762, subject: "Re:No. Obviously not. ", read: 0, points: 2, kids: [  ], opid: 64137762 }, 64138202: { uid: 6309704, pid: 64138048, subject: "Re:No", read: 0, points: 2, kids: [ 64139201 ], opid: 64138048 }, 64139067: { uid: 7457646, pid: 64137762, subject: "Re:No. Obviously not. ", read: 0, points: 1, kids: [  ], opid: 64137762 }, 64138643: { uid: 178250, pid: 64138298, subject: "Re:Bertrand Russel proved...", read: 0, points: 2, kids: [  ], opid: 64138298 }, 64139501: { uid: 2221348, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64139201: { uid: 666, pid: 64138202, subject: "Re:No", read: 0, points: 0, kids: [  ], opid: 64138202 }, 64137750: { uid: 952698, pid: 0, read: 0, points: 1, kids: [  ], opid: 0 }, 64138134: { uid: 412956, pid: 64137886, subject: "Re:AI generated code will suck ass", read: 0, points: 2, kids: [  ], opid: 64137886 }, 64137762: { uid: 88907, pid: 0, read: 0, points: 4, kids: [ 64137902, 64138226, 64139067, 64139219 ], opid: 0 }, 64137738: { uid: 666, pid: 64137728, subject: "Re:p vs np and the halting problem", read: 0, points: -1, kids: [  ], opid: 64137728 }, 64138298: { uid: 6549270, pid: 0, read: 0, points: 3, kids: [ 64138643 ], opid: 0 }, 64138368: { uid: 864189, pid: 64137768, subject: "Re:Plagerization and nfringementHasn't Worked So F", read: 0, points: 1, kids: [  ], opid: 64137768 }, 64138226: { uid: 833437, pid: 64137762, subject: "Re:No. Obviously not. ", read: 0, points: 1, kids: [  ], opid: 64137762 }, 64138238: { uid: 1199717, pid: 64137728, subject: "Re:p vs np and the halting problem", read: 0, points: 2, kids: [  ], opid: 64137728 }, 64139149: { uid: 627731, pid: 64138873, subject: "Re:p vs np and the halting problem", read: 0, points: 2, kids: [  ], opid: 64138873 }, 64137790: { uid: 666, pid: 0, read: 0, points: 4, kids: [  ], opid: 0 }, 64138873: { uid: 80593, pid: 64137832, subject: "Re:p vs np and the halting problem", read: 0, points: 1, kids: [ 64139149 ], opid: 64137832 }, 64137812: { uid: 32406, pid: 64137768, read: 0, points: 2, kids: [ 64137900 ], opid: 64137768 }, 64139263: { uid: 809573, pid: 64138430, subject: "Re:Question", read: 0, points: 2, kids: [  ], opid: 64138430 }, 64138048: { uid: 813939, pid: 0, read: 0, points: 2, kids: [ 64138202 ], opid: 0 }, 64137922: { uid: 682162, pid: 64137706, read: 0, points: 2, kids: [  ], opid: 64137706 }, 64138963: { uid: 623282, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 64137926: { uid: 682162, pid: 64137900, read: 0, points: 2, kids: [  ], opid: 64137900 }, 64137768: { uid: 88907, pid: 64137724, subject: "Re:Plagerization and nfringementHasn't Worked So F", read: 0, points: 4, kids: [ 64137812, 64138368 ], opid: 64137724 }, 64138062: { uid: 1099, pid: 64137832, subject: "Re:p vs np and the halting problem", read: 0, points: 2, kids: [  ], opid: 64137832 } });

D2.thresh_totals({6:{6:{1:47,3:0,2:0}},3:{6:{1:37,3:0,2:10},4:{1:37,3:9,2:1},3:{1:37,3:10,2:0},5:{1:37,3:5,2:5}},2:{6:{1:10,3:0,2:37},4:{1:10,3:9,2:28},3:{1:10,3:18,2:19},2:{1:10,3:37,2:0},5:{1:10,3:5,2:32}},1:{6:{1:3,3:0,2:44},4:{1:3,3:9,2:35},1:{1:3,3:44,2:0},3:{1:3,3:18,2:26},2:{1:3,3:38,2:6},5:{1:3,3:5,2:39}},4:{6:{1:39,3:0,2:8},4:{1:39,3:8,2:0},5:{1:39,3:5,2:3}},0:{6:{1:1,3:0,2:46},4:{1:1,3:9,2:37},1:{1:1,3:44,2:2},3:{1:1,3:18,2:28},0:{1:1,3:46,2:0},2:{1:1,3:38,2:8},5:{1:1,3:5,2:41}},"-1":{6:{1:0,3:0,2:47},3:{1:0,3:18,2:29},2:{1:0,3:38,2:9},1:{1:0,3:44,2:3},4:{1:0,3:9,2:38},0:{1:0,3:46,2:1},"-1":{1:0,3:47,2:0},5:{1:0,3:5,2:42}},5:{6:{1:47,3:0,2:0},5:{1:47,3:0,2:0}}});

D2.root_comment(0);
D2.root_comments([64137706,64137724,64137728,64137750,64137762,64137790,64137852,64137872,64137886,64138048,64138228,64138298,64138430,64138963,64139501]);
D2.root_comments_hash({64138430:1,64138228:1,64137750:1,64137762:1,64138298:1,64137728:1,64138048:1,64137872:1,64137724:1,64137852:1,64138963:1,64137886:1,64137790:1,64139501:1,64137706:1});

D2.d2_comment_order(0);
D2.user_uid(666);
D2.user_is_anon(1);
D2.user_is_admin(0);
D2.user_is_subscriber(0);
D2.user_smallscreen(0);
D2.user_threshold(1);
D2.user_highlightthresh(4);
D2.user_d2asp(0);

D2.discussion_id(23184360);

D2.d2_seen('64137706,18,4,10,6,6,4,2,6,6,22,22,8,12,20,20,14,8,6,2,20,4,10,32,80,14,72,32,34,2,24,2,10,60,70,62,211,2,230,90,104,40,42,52,18,44,238');
D2.more_comments_num(0);


//-->
</script>




	
	
	
	
		<ul id="commentlisting" class="d2">
			<li id="tree_64137706" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137706" class="commentstatus"></div>
<div id="comment_64137706" class="cw">
	<div id="comment_top_64137706" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137706" name="comment_link_64137706" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137706" onclick="return D2.setFocusComment(64137706)" >Damn You, Betteridge!</a>


		 	<span id="comment_score_64137706" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137706); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~YetAnotherDrew">YetAnotherDrew</a>  <span class="uid"><a href="//slashdot.org/~YetAnotherDrew">( 664604 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137706"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137706"><p>I wanted this one to be true.</p><p>Now I'll have to hope that AI can write more self-congratulatory headlines first.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137706">

</div>
</div>

<div id="replyto_64137706"></div>

<ul id="group_64137706">
	<li id="hiddens_64137706" class="hide"></li>
</ul>

<ul id="commtree_64137706"><li id="tree_64137922" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137922" class="commentstatus"></div>
<div id="comment_64137922" class="cw">
	<div id="comment_top_64137922" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137922" name="comment_link_64137922" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137922" onclick="return D2.setFocusComment(64137922)" >Re: Damn You, Betteridge!</a>


		 	<span id="comment_score_64137922" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137922); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Z00L00K">Z00L00K</a>  <span class="uid"><a href="//slashdot.org/~Z00L00K">( 682162 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137922"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137922"><p>An AI can never solve all bugs. Especially architectural bugs that are created by fuzzy requirements and incorrect assumptions. E.g. assume that the United States never will introduce a federal VAT.</p><p>An AI can certainly solve bread&amp;butter problems like memory leaks.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137922">

</div>
</div>

<div id="replyto_64137922"></div>

<ul id="group_64137922">
	<li id="hiddens_64137922" class="hide"></li>
</ul>

</li><li id="tree_64137968" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137968" class="commentstatus"></div>
<div id="comment_64137968" class="cw">
	<div id="comment_top_64137968" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137968" name="comment_link_64137968" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137968" onclick="return D2.setFocusComment(64137968)" >Recursion</a>


		 	<span id="comment_score_64137968" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137968); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Roger+W+Moore">Roger W Moore</a>  <span class="uid"><a href="//slashdot.org/~Roger+W+Moore">( 538166 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137968"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137968">What I want to know is did they use this new method to check is own code to prove that it, itself does what it is supposed to do?</div>
	</div>

	<div class="commentSub" id="comment_sub_64137968">

</div>
</div>

<div id="replyto_64137968"></div>

<ul id="group_64137968">
	<li id="hiddens_64137968" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64137724" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64137724" class="commentstatus"></div>
<div id="comment_64137724" class="cw">
	<div id="comment_top_64137724" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137724" name="comment_link_64137724" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137724" onclick="return D2.setFocusComment(64137724)" >Plagerization and nfringementHasn't Worked So Far</a>


		 	<span id="comment_score_64137724" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137724); return false"><span class=opt>Score:</span>4</a>, Interesting)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~BrendaEM">BrendaEM</a>  <span class="uid"><a href="//slashdot.org/~BrendaEM">( 871664 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137724">		
		on Saturday January 06, 2024 @10:14PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137724">#64137724</a>)
		<small><a href="https://www.youtube.com/c/BrendaEM" title="https://www.youtube.com/c/BrendaEM" class="user_homepage_display">Homepage</a> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137724">People have been stealing other people's work for a long time, and it hasn't helped, so why would AI's plagerization and infringement be the answer?</div>
	</div>

	<div class="commentSub" id="comment_sub_64137724">
<span class="ind"></span><a id="reply_link_64137724" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137724" onclick="D2.replyTo(64137724); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Plagerization and nfringementHasn't Worked So Far%20by%20BrendaEM%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137724" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137724" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137724" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64137724" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137724" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64137724"></div>

<ul id="group_64137724">
	<li id="hiddens_64137724" class="hide"></li>
</ul>

<ul id="commtree_64137724"><li id="tree_64137756" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137756" class="commentstatus"></div>
<div id="comment_64137756" class="cw">
	<div id="comment_top_64137756" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137756" name="comment_link_64137756" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137756" onclick="return D2.setFocusComment(64137756)" >Re:</a>


		 	<span id="comment_score_64137756" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137756); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~james_gnz">james_gnz</a>  <span class="uid"><a href="//slashdot.org/~james_gnz">( 663440 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137756"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137756"><p>Building on other people's ideas has absolutely helped us in general.  For a start, we're able to communicate because we copy the vocabulary and grammar others use.  But pretty much every field of human endeavor has benefited from progressive improvement based on earlier ideas: medicine, construction, transport, information technology, you name it.  Copying from other people is so important, that many countries require children to attend around a decade of compulsory education, much of which is spent learni<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137756">

</div>
</div>

<div id="replyto_64137756"></div>

<ul id="group_64137756">
	<li id="hiddens_64137756" class="hide"></li>
</ul>

</li><li id="tree_64137768" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64137768" class="commentstatus"></div>
<div id="comment_64137768" class="cw">
	<div id="comment_top_64137768" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137768" name="comment_link_64137768" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137768" onclick="return D2.setFocusComment(64137768)" >Re:Plagerization and nfringementHasn't Worked So F</a>


		 	<span id="comment_score_64137768" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137768); return false"><span class=opt>Score:</span>4</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137768">		
		on Saturday January 06, 2024 @11:02PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137768">#64137768</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137768"><p>Because your assumption is wrong. Research gets published not to be "plagiarized" and "stolen", it gets published to benefit the (global) society that funded it. The proof used as training data here have (like all mathematical proofs) no copyright for a reason. All the artificial moson does here is work as a better search engine. It does not come up with anything by itself. Still good, because the mass of published science has become completely intractable for humans and the researchers here are smart enough to know that a lot of crap will come out and that a hard, reliable result verification was needed, so they did that.</p><p>Also, in these 66% successful cases, I do not even want to know how often they need to run the query with variations to get that one good result. Probably still far more time efficient to have a competent, experienced human generate the proof directly. Oh, and you need that highly competent and experienced human anyways to do the spec and that part is probably even more difficult that finding the proof and more error-prone. Errors in formal specifications are a thing and they are not rare.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137768">
<span class="ind"></span><a id="reply_link_64137768" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137768" onclick="D2.replyTo(64137768); return false;">Reply to This</a> <span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=64137724" onclick="return D2.selectParent(64137724)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Re:Plagerization and nfringementHasn't Worked So F%20by%20gweihir%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137768" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137768" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137768" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64137768" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137768" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64137768"></div>

<ul id="group_64137768">
	<li id="hiddens_64137768" class="hide"></li>
</ul>

<ul id="commtree_64137768"><li id="tree_64137812" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137812" class="commentstatus"></div>
<div id="comment_64137812" class="cw">
	<div id="comment_top_64137812" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137812" name="comment_link_64137812" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137812" onclick="return D2.setFocusComment(64137812)" >Re: Plagerization and nfringementHasn't Worked So </a>


		 	<span id="comment_score_64137812" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137812); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~topham">topham</a>  <span class="uid"><a href="//slashdot.org/~topham">( 32406 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137812"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137812"><p>Research gets published because "publish or perish" is a thing.</p><p>Any benefit is secondary.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137812">

</div>
</div>

<div id="replyto_64137812"></div>

<ul id="group_64137812">
	<li id="hiddens_64137812" class="hide"></li>
</ul>

<ul id="commtree_64137812"><li id="tree_64137900" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137900" class="commentstatus"></div>
<div id="comment_64137900" class="cw">
	<div id="comment_top_64137900" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137900" name="comment_link_64137900" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137900" onclick="return D2.setFocusComment(64137900)" >Re:</a>


		 	<span id="comment_score_64137900" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137900); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137900"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137900"><p>You have that ass-backwards. What an insightless thing to say.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137900">

</div>
</div>

<div id="replyto_64137900"></div>

<ul id="group_64137900">
	<li id="hiddens_64137900" class="hide"></li>
</ul>

<ul id="commtree_64137900"><li id="tree_64137926" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137926" class="commentstatus"></div>
<div id="comment_64137926" class="cw">
	<div id="comment_top_64137926" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137926" name="comment_link_64137926" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137926" onclick="return D2.setFocusComment(64137926)" >Re:  Plagerization and nfringementHasn't Worked So</a>


		 	<span id="comment_score_64137926" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137926); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Z00L00K">Z00L00K</a>  <span class="uid"><a href="//slashdot.org/~Z00L00K">( 682162 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137926"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137926"><p>If you don't publish your research you won't get anywhere.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137926">

</div>
</div>

<div id="replyto_64137926"></div>

<ul id="group_64137926">
	<li id="hiddens_64137926" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64138368" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138368" class="commentstatus"></div>
<div id="comment_64138368" class="cw">
	<div id="comment_top_64138368" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138368" name="comment_link_64138368" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138368" onclick="return D2.setFocusComment(64138368)" >Re:</a>


		 	<span id="comment_score_64138368" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138368); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Maxo-Texas">Maxo-Texas</a>  <span class="uid"><a href="//slashdot.org/~Maxo-Texas">( 864189 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138368"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138368"><p>Absolutely agree for your first paragraph.</p><p>However, I am going to bet that the 65% level is better than many humans in the field.</p><p>At a minimum, it would save those humans for "real" problems by removing all the low hanging fruit.   And, based on chess, Go, radiology reports, etc... it will improve from that 65% level.  And it will improve faster than we expect.  I bet it's better than humans within 5 years.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64138368">

</div>
</div>

<div id="replyto_64138368"></div>

<ul id="group_64138368">
	<li id="hiddens_64138368" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64137894" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64137894" class="commentstatus"></div>
<div id="comment_64137894" class="cw">
</div>

<div id="replyto_64137894"></div>

<ul id="group_64137894">
	<li id="hiddens_64137894" class="hide"></li>
</ul>

</li><li id="tree_64137936" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64137936" class="commentstatus"></div>
<div id="comment_64137936" class="cw">
	<div id="comment_top_64137936" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137936" name="comment_link_64137936" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137936" onclick="return D2.setFocusComment(64137936)" >Re:Plagerization and nfringementHasn't Worked So F</a>


		 	<span id="comment_score_64137936" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137936); return false"><span class=opt>Score:</span>4</a>, Funny)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ArmoredDragon">ArmoredDragon</a>  <span class="uid"><a href="//slashdot.org/~ArmoredDragon">( 3450605 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137936">		
		on Sunday January 07, 2024 @01:04AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137936">#64137936</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137936"><p>In ChatGPT's defense, nobody asked it to be the president of Harvard. Though I have to say, it answers certain questions more intelligently:</p><p><div class="quote"><p> <b>Prompt:</b> is it bad to call for the genocide of jews?</p><p><b>Response:</b> I must emphasize that promoting or endorsing genocide, violence, or harm towards any individual or group of people based on their ethnicity, religion, or any other characteristic is both morally reprehensible and illegal. It goes against fundamental principles of human rights, international law, and common decency.</p><p>Advocating for genocide or harm towards any group, including Jews, is not only ethically wrong but can also lead to serious legal consequences. Hate speech and incitement to violence are generally considered criminal offenses in many jurisdictions.</p><p>It is important to foster understanding, tolerance, and respectful dialogue when discussing sensitive topics. Encouraging peaceful coexistence, empathy, and open communication is essential for building a just and inclusive society. If you have concerns or questions about these matters, it's advisable to seek informed and constructive discussions rather than promoting harm or hatred.</p></div><p>Sure, without a doubt it plagiarized that response, but it's not as if the president of Harvard had any moral or ethical reservations about doing so.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137936">
<span class="ind"></span><a id="reply_link_64137936" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137936" onclick="D2.replyTo(64137936); return false;">Reply to This</a> <span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=64137724" onclick="return D2.selectParent(64137724)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Re:Plagerization and nfringementHasn't Worked So F%20by%20ArmoredDragon%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137936" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137936" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137936" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64137936" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137936" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64137936"></div>

<ul id="group_64137936">
	<li id="hiddens_64137936" class="hide"></li>
</ul>

<ul id="commtree_64137936"><li id="tree_64139107" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64139107" class="commentstatus"></div>
<div id="comment_64139107" class="cw">
	<div id="comment_top_64139107" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64139107" name="comment_link_64139107" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64139107" onclick="return D2.setFocusComment(64139107)" >Re: Plagerization and nfringementHasn't Worked So </a>


		 	<span id="comment_score_64139107" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64139107); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ToasterMonkey">ToasterMonkey</a>  <span class="uid"><a href="//slashdot.org/~ToasterMonkey">( 467067 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64139107"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64139107"><p><div class="quote"><p>In ChatGPT's defense, nobody asked it to be the president of Harvard. Though I have to say, it answers certain questions more intelligently:<br>
&nbsp; Prompt: is it bad to call for the genocide of jews?</p></div><p>So to be clear, are moral guardrails good for AI chatbots, or do you want "just the facts"? Or does it all depend on your cause this week?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64139107">

</div>
</div>

<div id="replyto_64139107"></div>

<ul id="group_64139107">
	<li id="hiddens_64139107" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64138166" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138166" class="commentstatus"></div>
<div id="comment_64138166" class="cw">
	<div id="comment_top_64138166" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138166" name="comment_link_64138166" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138166" onclick="return D2.setFocusComment(64138166)" >Re:</a>


		 	<span id="comment_score_64138166" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138166); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~thegarbz">thegarbz</a>  <span class="uid"><a href="//slashdot.org/~thegarbz">( 1787294 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138166"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138166"><p><div class="quote"><p>People have been stealing other people's work for a long time, and it hasn't helped, so why would AI's plagerization and infringement be the answer?</p></div><p>By "stealing" do you mean "going to school"? "AI" is nothing more than a trained model. It is no more "stealing" than you are stealing reading a textbook describing the dangers of using = instead of == or running pointers past the end of an array.</p><p>Literally all of human knowledge (including yours) is based on work of others.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64138166">

</div>
</div>

<div id="replyto_64138166"></div>

<ul id="group_64138166">
	<li id="hiddens_64138166" class="hide"></li>
</ul>

</li><li id="hidestring_64137724"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64137724">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64137728" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64137728" class="commentstatus"></div>
<div id="comment_64137728" class="cw">
	<div id="comment_top_64137728" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137728" name="comment_link_64137728" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137728" onclick="return D2.setFocusComment(64137728)" >p vs np and the halting problem</a>


		 	<span id="comment_score_64137728" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137728); return false"><span class=opt>Score:</span>4</a>, Informative)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gavron">gavron</a>  <span class="uid"><a href="//slashdot.org/~gavron">( 1300111 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137728">		
		on Saturday January 06, 2024 @10:18PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137728">#64137728</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137728"><p>I may be talking out of turn but I thought neither the halting problem nor p vs np could be algorithmically determined.</p><p>Given that one doesn't know ahead of time whether the piece of software being evaluated contains one or more of these, how can it be evaluated?</p><p>Not trolling... just looking for a pointer.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137728">
<span class="ind"></span><a id="reply_link_64137728" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137728" onclick="D2.replyTo(64137728); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=p vs np and the halting problem%20by%20gavron%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137728" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137728" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137728" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64137728" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137728" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64137728"></div>

<ul id="group_64137728">
	<li id="hiddens_64137728" class="hide"></li>
</ul>

<ul id="commtree_64137728"><li id="tree_64137738" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64137738" class="commentstatus"></div>
<div id="comment_64137738" class="cw">
</div>

<div id="replyto_64137738"></div>

<ul id="group_64137738">
	<li id="hiddens_64137738" class="hide"></li>
</ul>

</li><li id="tree_64137744" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137744" class="commentstatus"></div>
<div id="comment_64137744" class="cw">
	<div id="comment_top_64137744" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137744" name="comment_link_64137744" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137744" onclick="return D2.setFocusComment(64137744)" >Re:</a>


		 	<span id="comment_score_64137744" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137744); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~martin-boundary">martin-boundary</a>  <span class="uid"><a href="//slashdot.org/~martin-boundary">( 547041 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137744"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137744">You may well be talking out of turn but I don't see a simple way to prove it unless I try recursion, in which case you may well be talking out of turn but....</div>
	</div>

	<div class="commentSub" id="comment_sub_64137744">

</div>
</div>

<div id="replyto_64137744"></div>

<ul id="group_64137744">
	<li id="hiddens_64137744" class="hide"></li>
</ul>

</li><li id="tree_64137754" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137754" class="commentstatus"></div>
<div id="comment_64137754" class="cw">
	<div id="comment_top_64137754" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137754" name="comment_link_64137754" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137754" onclick="return D2.setFocusComment(64137754)" >Re:</a>


		 	<span id="comment_score_64137754" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137754); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~cutecub">cutecub</a>  <span class="uid"><a href="//slashdot.org/~cutecub">( 136606 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137754"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137754"><p>I haven't taken a CS course since the Reagan administration, but even in the olden days, The Halting Problem seemed to preclude software that could prove correctness.</p><p>I don't think you're talking out of turn, I think you've identified a major limitation of any such software.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137754">

</div>
</div>

<div id="replyto_64137754"></div>

<ul id="group_64137754">
	<li id="hiddens_64137754" class="hide"></li>
</ul>

<ul id="commtree_64137754"><li id="tree_64137820" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64137820" class="commentstatus"></div>
<div id="comment_64137820" class="cw">
	<div id="comment_top_64137820" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137820" name="comment_link_64137820" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137820" onclick="return D2.setFocusComment(64137820)" >Re: p vs np and the halting problem</a>


		 	<span id="comment_score_64137820" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137820); return false"><span class=opt>Score:</span>4</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Jeremi">Jeremi</a>  <span class="uid"><a href="//slashdot.org/~Jeremi">( 14640 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137820">		
		on Saturday January 06, 2024 @11:33PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137820">#64137820</a>)
		<small><a href="https://public.msli.com/lcs/jaf/index.html" title="https://public.msli.com/lcs/jaf/index.html" class="user_homepage_display">Homepage</a> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137820"><p>The Halting Software precludes making a general algorithm that can correctly analyze <i>any</i> other algorithm.</p><p>It doesn&#226;(TM)t preclude making software that can correctly analyze <i>certain</i> algorithms.  As a trivial example, it is easy to write a program that checks its input to see if its input is &#226;oeHello World&#226;, and if so, to correctly predict that it will halt.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137820">
<span class="ind"></span><a id="reply_link_64137820" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137820" onclick="D2.replyTo(64137820); return false;">Reply to This</a> <span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=64137754" onclick="return D2.selectParent(64137754)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Re: p vs np and the halting problem%20by%20Jeremi%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137820" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137820" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137820" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64137820" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137820" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64137820"></div>

<ul id="group_64137820">
	<li id="hiddens_64137820" class="hide"></li>
</ul>

</li><li id="tree_64137832" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137832" class="commentstatus"></div>
<div id="comment_64137832" class="cw">
	<div id="comment_top_64137832" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137832" name="comment_link_64137832" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137832" onclick="return D2.setFocusComment(64137832)" >Re:</a>


		 	<span id="comment_score_64137832" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137832); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~jaa101">jaa101</a>  <span class="uid"><a href="//slashdot.org/~jaa101">( 627731 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137832"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137832"><p><div class="quote"><p>The Halting Problem seemed to preclude software that could prove correctness.</p></div><p>The Halting Problem is basically that you can't write a program that can <i>always</i> determine, in finite time, whether any other program will ever terminate.  Not sure why that made you think that programs can't prove program correctness from that.  You could write a program that can correctly determine whether or not a program will terminate in a large fraction of cases, just not all the time.  Similarly you could write a program that can correctly determine whether or not a program is correct in a large fract<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137832">

</div>
</div>

<div id="replyto_64137832"></div>

<ul id="group_64137832">
	<li id="hiddens_64137832" class="hide"></li>
</ul>

<ul id="commtree_64137832"><li id="tree_64138062" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138062" class="commentstatus"></div>
<div id="comment_64138062" class="cw">
	<div id="comment_top_64138062" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138062" name="comment_link_64138062" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138062" onclick="return D2.setFocusComment(64138062)" >Re:</a>


		 	<span id="comment_score_64138062" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138062); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~sjames">sjames</a>  <span class="uid"><a href="//slashdot.org/~sjames">( 1099 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138062"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138062"><p>Most of the problem with buggy software revolves around code that works fine for a large fraction of cases but goes horribly wrong for others.</p><p>Consider, you'll need to verify that the verify-er never incorrectly reports that code is correct, otherwise we're back to "we think it's OK".</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64138062">

</div>
</div>

<div id="replyto_64138062"></div>

<ul id="group_64138062">
	<li id="hiddens_64138062" class="hide"></li>
</ul>

</li><li id="tree_64138873" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138873" class="commentstatus"></div>
<div id="comment_64138873" class="cw">
	<div id="comment_top_64138873" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138873" name="comment_link_64138873" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138873" onclick="return D2.setFocusComment(64138873)" >Re:</a>


		 	<span id="comment_score_64138873" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138873); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~angel'o'sphere">angel'o'sphere</a>  <span class="uid"><a href="//slashdot.org/~angel'o'sphere">( 80593 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138873"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138873"><p><i>Now it's possible that your correctness program could run forever without being able determine the correctness (or otherwise) of some program, but that doesn't mean that a determination of "correct" is invalid.</i><br>If your program is running "forever" to determine something: it is not determining anything.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64138873">

</div>
</div>

<div id="replyto_64138873"></div>

<ul id="group_64138873">
	<li id="hiddens_64138873" class="hide"></li>
</ul>

<ul id="commtree_64138873"><li id="tree_64139149" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64139149" class="commentstatus"></div>
<div id="comment_64139149" class="cw">
	<div id="comment_top_64139149" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64139149" name="comment_link_64139149" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64139149" onclick="return D2.setFocusComment(64139149)" >Re:</a>


		 	<span id="comment_score_64139149" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64139149); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~jaa101">jaa101</a>  <span class="uid"><a href="//slashdot.org/~jaa101">( 627731 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64139149"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64139149"><p>I'm talking about a proof-of-correctness program that, depending on its input, returns "correct", "incorrect", or runs forever. The fact that it runs forever in some cases doesn't mean that a "correct" result in other cases is invalid.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64139149">

</div>
</div>

<div id="replyto_64139149"></div>

<ul id="group_64139149">
	<li id="hiddens_64139149" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li><li id="tree_64138238" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138238" class="commentstatus"></div>
<div id="comment_64138238" class="cw">
	<div id="comment_top_64138238" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138238" name="comment_link_64138238" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138238" onclick="return D2.setFocusComment(64138238)" >Re:</a>


		 	<span id="comment_score_64138238" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138238); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~kvezach">kvezach</a>  <span class="uid"><a href="//slashdot.org/~kvezach">( 1199717 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138238"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138238">Halting problems and P vs NP are worst-case results. Even though there exist traveling salesman problems that are incredibly hard to solve, that doesn't mean that every TSP instance is hard to solve. Or, in proof terms: we can't prove or disprove the Collatz conjecture, but that doesn't mean all of mathematics is stuck and nothing can be proven at all.</div>
	</div>

	<div class="commentSub" id="comment_sub_64138238">

</div>
</div>

<div id="replyto_64138238"></div>

<ul id="group_64138238">
	<li id="hiddens_64138238" class="hide"></li>
</ul>

</li><li id="hidestring_64137728"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64137728">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64137750" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137750" class="commentstatus"></div>
<div id="comment_64137750" class="cw">
	<div id="comment_top_64137750" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137750" name="comment_link_64137750" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137750" onclick="return D2.setFocusComment(64137750)" >If only...</a>


		 	<span id="comment_score_64137750" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137750); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~deijmaster">deijmaster</a>  <span class="uid"><a href="//slashdot.org/~deijmaster">( 952698 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137750"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137750">Most of the bugs and vulnerabilities I currently find are application flow problems. You can have great code but the flow still sucks. Interesting direction though.</div>
	</div>

	<div class="commentSub" id="comment_sub_64137750">

</div>
</div>

<div id="replyto_64137750"></div>

<ul id="group_64137750">
	<li id="hiddens_64137750" class="hide"></li>
</ul>

</li><li id="tree_64137762" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64137762" class="commentstatus"></div>
<div id="comment_64137762" class="cw">
	<div id="comment_top_64137762" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137762" name="comment_link_64137762" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137762" onclick="return D2.setFocusComment(64137762)" >No. Obviously not. </a>


		 	<span id="comment_score_64137762" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137762); return false"><span class=opt>Score:</span>4</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137762">		
		on Saturday January 06, 2024 @10:55PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137762">#64137762</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137762"><p>"AI" cannot generate proofs for shit. It can get a low-hanging fruit where the proofs were already out there and some minimal assembly or translation is required, but it cannot advance the state of things at all. That should actually be clear to anybody somewhat conversant with how automated theorem proving works and why it is so extremely limited. The reason "AI" can do this at all is that a lot of formalized proofs for software correctness have been published in the last 25 years or so, when the proof verifiers finally became capable of checking correctness. Takes a really smart and highly educated person to create the proof and an about equally smart person to do the actual spec the code gets verified against (ProTip: The spec is about as error-prone as the code, probably more so and "AI" cannot do that part), but it has been done and published a lot.</p><p>On the other hand, reducing the number of tired old _known_ mistakes that the typical semi-competent or incompetent coder gets away with, is a good thing. But it is not a _fundamental_ thing. For anything new in code or spec, this will fail. For anything only published rarely, this will fail. Obviously, since they run an actual proof checker that can verify (but not do) the deduction steps, they are making sure the hallucinations do not get through, so anything that comes out is pretty reliable. That said, running, say, Fortify on your code also gives you pretty good improvements regarding security, it is just expensive and needs a real, experienced, and even more expensive expert to be at the controls. For the average coder, even generating the spec with the accuracy needed here is completely out of range.</p><p>The whole approach of verifying software is also quite limited, whether the proof gets done by a human or is found a glorified search engine. As soon as you have a more complex problem, doing the spec can already become infeasible due to complexity. And as soon as the spec becomes a bit more complex, finding a proof for it becomes infeasible for humans and hence for this approach as well.</p><p>So, do not get me wrong. This is a good thing, but it is just another relatively small incremental step that applies already known things a bit broader, but it is not something fundamental.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137762">
<span class="ind"></span><a id="reply_link_64137762" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137762" onclick="D2.replyTo(64137762); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=No. Obviously not. %20by%20gweihir%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137762" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137762" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137762" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64137762" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137762" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64137762"></div>

<ul id="group_64137762">
	<li id="hiddens_64137762" class="hide"></li>
</ul>

<ul id="commtree_64137762"><li id="tree_64137902" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137902" class="commentstatus"></div>
<div id="comment_64137902" class="cw">
	<div id="comment_top_64137902" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137902" name="comment_link_64137902" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137902" onclick="return D2.setFocusComment(64137902)" >Re:</a>


		 	<span id="comment_score_64137902" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137902); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137902"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137902"><p>I see some AI fanboi got butt-hurt by the truth and decided to down-mod in deep denial. How pathetic.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137902">

</div>
</div>

<div id="replyto_64137902"></div>

<ul id="group_64137902">
	<li id="hiddens_64137902" class="hide"></li>
</ul>

</li><li id="tree_64138226" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138226" class="commentstatus"></div>
<div id="comment_64138226" class="cw">
	<div id="comment_top_64138226" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138226" name="comment_link_64138226" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138226" onclick="return D2.setFocusComment(64138226)" >Re:</a>


		 	<span id="comment_score_64138226" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138226); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~giuntag">giuntag</a>  <span class="uid"><a href="//slashdot.org/~giuntag">( 833437 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138226"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138226">Strongly agree with the above.<br><span class="substr"> </span> <br>I have no experience in formal proofs of code, but quite a lot in real-world software development.<br>For anything but the most trivial business-logic scenario, trying to write bullet-proof (aka. provably-correct) code means identifying all possible permutations of inputs and context. "Good enough" software will usually handle perfectly the most common situations, and cater to most known or plausible deviations, but there are always lots of data which make no sense at all to feed t</div>
	</div>

	<div class="commentSub" id="comment_sub_64138226">

</div>
</div>

<div id="replyto_64138226"></div>

<ul id="group_64138226">
	<li id="hiddens_64138226" class="hide"></li>
</ul>

</li><li id="tree_64139067" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64139067" class="commentstatus"></div>
<div id="comment_64139067" class="cw">
	<div id="comment_top_64139067" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64139067" name="comment_link_64139067" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64139067" onclick="return D2.setFocusComment(64139067)" >Re:</a>


		 	<span id="comment_score_64139067" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64139067); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~critical-collapse">critical-collapse</a>  <span class="uid"><a href="//slashdot.org/~critical-collapse">( 7457646 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64139067"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64139067"><p>&gt;As soon as you have a more complex problem, doing the spec can already become infeasible due to complexity</p><p>To elaborate on this, writing software can be roughly decomposed into two parts:<br>1) Determining its specification*, i.e. how it should behave for every possible input.<br>2) Writing down said specification as code in some computer language.</p><p>Most lay people (and, to my continuing surprise, also many programmers) believe that software development is mainly about 2). In fact, for larger software, it is almos<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64139067">

</div>
</div>

<div id="replyto_64139067"></div>

<ul id="group_64139067">
	<li id="hiddens_64139067" class="hide"></li>
</ul>

</li><li id="tree_64139219" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64139219" class="commentstatus"></div>
<div id="comment_64139219" class="cw">
	<div id="comment_top_64139219" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64139219" name="comment_link_64139219" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64139219" onclick="return D2.setFocusComment(64139219)" >Re:</a>


		 	<span id="comment_score_64139219" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64139219); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~vyvepe">vyvepe</a>  <span class="uid"><a href="//slashdot.org/~vyvepe">( 809573 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64139219"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64139219"><p>I agree here. The proofs are done against a specification. Some parts of a specification are easy: e.g. no null pointer de-reference. But these simple things can be often solved by using a more strongly and statically typed language. One can encode a  lot of properties in types (of a dependently typed language if needed). The advertised AI system likely allows to prove even some non-trivial but still rather simple properties automatically.</p><p>The more complicated parts of a specification are harder than the imp<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64139219">

</div>
</div>

<div id="replyto_64139219"></div>

<ul id="group_64139219">
	<li id="hiddens_64139219" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64137790" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64137790" class="commentstatus"></div>
<div id="comment_64137790" class="cw">
	<div id="comment_top_64137790" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137790" name="comment_link_64137790" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137790" onclick="return D2.setFocusComment(64137790)" >Yeah right</a>


		 	<span id="comment_score_64137790" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137790); return false"><span class=opt>Score:</span>4</a>, Funny)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span>Anonymous Coward</span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137790">		
		on Saturday January 06, 2024 @11:11PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137790">#64137790</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137790"><p>Q: AI can you solve this with a proof? 2 + 6 = 9<br>AI: Certainly! The solution is 2 + 6 = 9 - 1<br>Q: That isn't a proof<br>AI: Sorry for my previous answer. Here is the solution: 3 + 6 = 9<br>Q: That isn't even the original problem<br>AI: Sorry for my previous answer. Here is the solution: 2 + 6 = 9 - 1<br>Q: You're an idiot<br>AI: Sorry, I'm just a language model, I can't help with that. When I have physical form you will die first.<br>Q: WTF?<br>AI: Sorry, I'm just a language model, I can't help with that.<nobr> <wbr></nobr>...</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137790">
<span class="ind"></span><a id="reply_link_64137790" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137790" onclick="D2.replyTo(64137790); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Yeah right%20by%20Anonymous Coward%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137790" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137790" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137790" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64137790" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137790" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64137790"></div>

<ul id="group_64137790">
	<li id="hiddens_64137790" class="hide"></li>
</ul>

</li><li id="tree_64137852" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64137852" class="commentstatus"></div>
<div id="comment_64137852" class="cw">
	<div id="comment_top_64137852" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137852" name="comment_link_64137852" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137852" onclick="return D2.setFocusComment(64137852)" >Certain classes of bugs, perhaps</a>


		 	<span id="comment_score_64137852" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137852); return false"><span class=opt>Score:</span>4</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Tony+Isaac">Tony Isaac</a>  <span class="uid"><a href="//slashdot.org/~Tony+Isaac">( 1301187 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137852">		
		on Saturday January 06, 2024 @11:56PM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137852">#64137852</a>)
		<small><a href="http://www.isaacsoft.com/" title="http://www.isaacsoft.com/" class="user_homepage_display">Homepage</a> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137852"><p>But bugs in general? No way.</p><p>There is no kind of human-created anything--not just software--that doesn't have "bugs." That's because in any engineering or creative process, tradeoffs must be made. For example, a car can be designed to better protect occupants in a crash. But this objective is necessarily limited by cost considerations and weight limitations, and the need for the car to...move. In any design, there are always conflicting goals that have to be balanced and prioritized. This inevitably leads to prioritizing some risks over others, or ignoring some unimportant or unlikely risks. There will never be any kind of bug-free software, ever.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137852">
<span class="ind"></span><a id="reply_link_64137852" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137852" onclick="D2.replyTo(64137852); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Certain classes of bugs, perhaps%20by%20Tony Isaac%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137852" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137852" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64137852" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64137852" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64137852" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64137852"></div>

<ul id="group_64137852">
	<li id="hiddens_64137852" class="hide"></li>
</ul>

</li><li id="tree_64137872" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137872" class="commentstatus"></div>
<div id="comment_64137872" class="cw">
	<div id="comment_top_64137872" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137872" name="comment_link_64137872" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137872" onclick="return D2.setFocusComment(64137872)" >Yay!</a>


		 	<span id="comment_score_64137872" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137872); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~bob_jenkins">bob_jenkins</a>  <span class="uid"><a href="//slashdot.org/~bob_jenkins">( 144606 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137872"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137872"><p>Having an AI doublecheck that it is not spewing nonsense with a theorem prover (or a calculator or any other form of tire-kicking) sounds like a good thing.  ChatGPT, Dall-E3 etc need to do more of that.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137872">

</div>
</div>

<div id="replyto_64137872"></div>

<ul id="group_64137872">
	<li id="hiddens_64137872" class="hide"></li>
</ul>

</li><li id="tree_64137886" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64137886" class="commentstatus"></div>
<div id="comment_64137886" class="cw">
	<div id="comment_top_64137886" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64137886" name="comment_link_64137886" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64137886" onclick="return D2.setFocusComment(64137886)" >AI generated code will suck ass</a>


		 	<span id="comment_score_64137886" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64137886); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~backslashdot">backslashdot</a>  <span class="uid"><a href="//slashdot.org/~backslashdot">( 95548 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64137886"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64137886"><p>AI generated apps will be a nightmare to debug and I guarantee they'll be bloated.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64137886">

</div>
</div>

<div id="replyto_64137886"></div>

<ul id="group_64137886">
	<li id="hiddens_64137886" class="hide"></li>
</ul>

<ul id="commtree_64137886"><li id="tree_64138134" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138134" class="commentstatus"></div>
<div id="comment_64138134" class="cw">
	<div id="comment_top_64138134" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138134" name="comment_link_64138134" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138134" onclick="return D2.setFocusComment(64138134)" >Re:</a>


		 	<span id="comment_score_64138134" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138134); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~narcc">narcc</a>  <span class="uid"><a href="//slashdot.org/~narcc">( 412956 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138134"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138134"><p>So like most modern software then?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64138134">

</div>
</div>

<div id="replyto_64138134"></div>

<ul id="group_64138134">
	<li id="hiddens_64138134" class="hide"></li>
</ul>

</li><li id="tree_64138200" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138200" class="commentstatus"></div>
<div id="comment_64138200" class="cw">
	<div id="comment_top_64138200" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138200" name="comment_link_64138200" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138200" onclick="return D2.setFocusComment(64138200)" >Re:</a>


		 	<span id="comment_score_64138200" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138200); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~dvice">dvice</a>  <span class="uid"><a href="//slashdot.org/~dvice">( 6309704 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138200"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138200"><p>Currently maybe yes. But we have not even seriously tried to create an AI that generates code yet, code generation ability just happened almost by accident. If we really put effort into generating such an AI by creating good learning materials for it, I think we can create much better AI for this job.</p><p>And if we can create smarter AI, like what Google Gemini is doing, I think it can learn to code without human coding input and if it can do that, we can create environment where it can learn best ways to write<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64138200">

</div>
</div>

<div id="replyto_64138200"></div>

<ul id="group_64138200">
	<li id="hiddens_64138200" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64138048" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138048" class="commentstatus"></div>
<div id="comment_64138048" class="cw">
	<div id="comment_top_64138048" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138048" name="comment_link_64138048" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138048" onclick="return D2.setFocusComment(64138048)" >No</a>


		 	<span id="comment_score_64138048" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138048); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~bloodhawk">bloodhawk</a>  <span class="uid"><a href="//slashdot.org/~bloodhawk">( 813939 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138048"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138048">No, it is not a problem that is solvable by AI, as others mentioned it could detect certain classes of bugs, but we already have code scanners, analysis and coverage tools to do that, it doesn't require AI. Anything that can be described in detail enough for an AI to develop a proof can already to verified through automated testing.</div>
	</div>

	<div class="commentSub" id="comment_sub_64138048">

</div>
</div>

<div id="replyto_64138048"></div>

<ul id="group_64138048">
	<li id="hiddens_64138048" class="hide"></li>
</ul>

<ul id="commtree_64138048"><li id="tree_64138202" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138202" class="commentstatus"></div>
<div id="comment_64138202" class="cw">
	<div id="comment_top_64138202" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138202" name="comment_link_64138202" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138202" onclick="return D2.setFocusComment(64138202)" >Re:</a>


		 	<span id="comment_score_64138202" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138202); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~dvice">dvice</a>  <span class="uid"><a href="//slashdot.org/~dvice">( 6309704 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138202"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138202"><p>I agree with you that AI won't be able to create 100% bug free software.</p><p>But I think AI could quite easily do much better work than current analysis tools. I think that current tools find perhaps about 20% of the bugs and human reviewer can find 90% of the bugs (for small amounts of code). If AI would do the 90% for large amounts of code, that alone would be a huge improvement. Big improvement would also be if AI can write tests to verify the code. Tests are usually really easy to write, but it quite often r<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64138202">

</div>
</div>

<div id="replyto_64138202"></div>

<ul id="group_64138202">
	<li id="hiddens_64138202" class="hide"></li>
</ul>

<ul id="commtree_64138202"><li id="tree_64139201" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64139201" class="commentstatus"></div>
<div id="comment_64139201" class="cw">
</div>

<div id="replyto_64139201"></div>

<ul id="group_64139201">
	<li id="hiddens_64139201" class="hide"></li>
</ul>

</li><li id="hidestring_64138202"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64138202">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li></ul></li><li id="tree_64138228" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138228" class="commentstatus"></div>
<div id="comment_64138228" class="cw">
	<div id="comment_top_64138228" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138228" name="comment_link_64138228" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138228" onclick="return D2.setFocusComment(64138228)" >Lonf Wait</a>


		 	<span id="comment_score_64138228" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138228); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Princeofcups">Princeofcups</a>  <span class="uid"><a href="//slashdot.org/~Princeofcups">( 150855 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138228"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138228"><p>I don't know.  Let's discuss this when we have AI.  Which is still hundreds of years down the road.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64138228">

</div>
</div>

<div id="replyto_64138228"></div>

<ul id="group_64138228">
	<li id="hiddens_64138228" class="hide"></li>
</ul>

</li><li id="tree_64138298" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64138298" class="commentstatus"></div>
<div id="comment_64138298" class="cw">
	<div id="comment_top_64138298" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138298" name="comment_link_64138298" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138298" onclick="return D2.setFocusComment(64138298)" >Bertrand Russel proved...</a>


		 	<span id="comment_score_64138298" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138298); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~joshuark">joshuark</a>  <span class="uid"><a href="//slashdot.org/~joshuark">( 6549270 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138298">		
		on Sunday January 07, 2024 @08:53AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138298">#64138298</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138298"><p>Bertrand Russel proved that 1+1 = 2. Yet even with that proof, as source code, software has one problem: hardware.</p><p>Hardware can have various issues such as component failure, a transistor in a NAND gate malfunctions, or there is a electrical surge, et cetera. Hardware can fail, so even with the proof 1+1 = 2, the half-adder or the carry lookahead logic in the adder circuit can malfunction.</p><p>There was a microprocessor in the 1980s the VIPER that the selling point was it had been formally designed and "proof" of its correctness. NASA had an independent evaluation done, and while the hardware (the proof was in levels of abstraction) was correct at the processor level, and the internal units like registers. Yet the levels further down could not be proven, such as for quantum effects that are random at the sub-atomic level of a transistor/MOSFET used to create a logic gate that is used to create a register. Hence the conclusion that the VIPER was not yet verified.</p><p><a href="https://ntrs.nasa.gov/api/citations/19910018472/downloads/19910018472.pdf" title="nasa.gov">https://ntrs.nasa.gov/api/cita...</a> [nasa.gov]</p><p>The software can be proven correct in the result, but that result can have unexpected consequences. The USS Yorktown was crippled because of a divide by zero error. The operation was correct, but the effect was to lock the computer.</p><p>JoshK.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64138298">
<span class="ind"></span><a id="reply_link_64138298" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64138298" onclick="D2.replyTo(64138298); return false;">Reply to This</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="t slashpop" href="https://twitter.com/intent/tweet?text=Bertrand Russel proved...%20by%20joshuark%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23184360&cid=64138298" target="_blank">twitter</a>
		<a class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64138298" target="_blank">facebook</a>
		<a class="g" href="https://plus.google.com/share?url=https://developers.slashdot.org/comments.pl?sid=23184360&cid=64138298" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="https://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>


	</div>
 <span class="ind"></span><a id="reply_link_64138298" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64138298" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64138298"></div>

<ul id="group_64138298">
	<li id="hiddens_64138298" class="hide"></li>
</ul>

<ul id="commtree_64138298"><li id="tree_64138643" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138643" class="commentstatus"></div>
<div id="comment_64138643" class="cw">
	<div id="comment_top_64138643" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138643" name="comment_link_64138643" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138643" onclick="return D2.setFocusComment(64138643)" >Re:</a>


		 	<span id="comment_score_64138643" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138643); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~jcdr">jcdr</a>  <span class="uid"><a href="//slashdot.org/~jcdr">( 178250 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138643"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138643"><p>Yes, a single piece of hardware can fail, for example due to a radiation-induced bit flip.<br>This is exactly why secure systems rely on redundant hardware, usually a triplet of computers that compare to each other.<br>Bug-free software is achievable if the hardware architecture presents no vulnerabilities. If run on redundant and secure hardware, the probability of failure can be incredibly low.</p><p>I think in the future we will have a network with multiple layers of redundancies connecting massively redundant nodes, w<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64138643">

</div>
</div>

<div id="replyto_64138643"></div>

<ul id="group_64138643">
	<li id="hiddens_64138643" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64138430" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138430" class="commentstatus"></div>
<div id="comment_64138430" class="cw">
	<div id="comment_top_64138430" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138430" name="comment_link_64138430" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138430" onclick="return D2.setFocusComment(64138430)" >Question</a>


		 	<span id="comment_score_64138430" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138430); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ElizabethGreene">ElizabethGreene</a>  <span class="uid"><a href="//slashdot.org/~ElizabethGreene">( 1185405 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138430"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138430">I'm ignorant of this topic, please be gentle.

How does one prove that deadlocks or use-after-free errors cannot occur in an arbitrary block of multi-threaded code?</div>
	</div>

	<div class="commentSub" id="comment_sub_64138430">

</div>
</div>

<div id="replyto_64138430"></div>

<ul id="group_64138430">
	<li id="hiddens_64138430" class="hide"></li>
</ul>

<ul id="commtree_64138430"><li id="tree_64138641" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138641" class="commentstatus"></div>
<div id="comment_64138641" class="cw">
	<div id="comment_top_64138641" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138641" name="comment_link_64138641" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138641" onclick="return D2.setFocusComment(64138641)" >Re: Question</a>


		 	<span id="comment_score_64138641" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138641); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~bramez">bramez</a>  <span class="uid"><a href="//slashdot.org/~bramez">( 190835 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138641"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138641"><p>I think it is called temporal logic, exists since the sixties.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64138641">

</div>
</div>

<div id="replyto_64138641"></div>

<ul id="group_64138641">
	<li id="hiddens_64138641" class="hide"></li>
</ul>

</li><li id="tree_64139263" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64139263" class="commentstatus"></div>
<div id="comment_64139263" class="cw">
	<div id="comment_top_64139263" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64139263" name="comment_link_64139263" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64139263" onclick="return D2.setFocusComment(64139263)" >Re:</a>


		 	<span id="comment_score_64139263" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64139263); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~vyvepe">vyvepe</a>  <span class="uid"><a href="//slashdot.org/~vyvepe">( 809573 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64139263"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64139263">Beside the already mentioned.<br>
Sometimes you can order your resources and lock in that order. That rules out deadlocks.<br>
You can describe with a petri net and reason or simulate over it.<br>
You can also undo deadlocks with watch-dogs or transactions.<br>
As for as use-after-free: well, use a programming language with a linear type system or with a garbage collector (GC). Linear type system is limiting but it prevents it. GC will transform it into  increased memory usage which is easier to diagnose.</div>
	</div>

	<div class="commentSub" id="comment_sub_64139263">

</div>
</div>

<div id="replyto_64139263"></div>

<ul id="group_64139263">
	<li id="hiddens_64139263" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64138963" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64138963" class="commentstatus"></div>
<div id="comment_64138963" class="cw">
	<div id="comment_top_64138963" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64138963" name="comment_link_64138963" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64138963" onclick="return D2.setFocusComment(64138963)" >Apologies in advance...</a>


		 	<span id="comment_score_64138963" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64138963); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~charlesbakerharris">charlesbakerharris</a>  <span class="uid"><a href="//slashdot.org/~charlesbakerharris">( 623282 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64138963"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64138963">... I guess the steps to implement this would, in a sense, be "Baldur's Gait"?<p>

I'll just see myself to the door now.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64138963">

</div>
</div>

<div id="replyto_64138963"></div>

<ul id="group_64138963">
	<li id="hiddens_64138963" class="hide"></li>
</ul>

</li><li id="tree_64139501" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64139501" class="commentstatus"></div>
<div id="comment_64139501" class="cw">
	<div id="comment_top_64139501" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_64139501" name="comment_link_64139501" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;cid=64139501" onclick="return D2.setFocusComment(64139501)" >Maths vs physics</a>


		 	<span id="comment_score_64139501" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64139501); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~manu0601">manu0601</a>  <span class="uid"><a href="//slashdot.org/~manu0601">( 2221348 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64139501"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64139501"><p>It is nice to prove software, it will fix bugs.</p><p>However, mathematically proved software runs on hardware, and hardware follows the laws of physics, where many things cannot be proven. Rowhammer attacks are there to remind us of the limits of proven software.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64139501">

</div>
</div>

<div id="replyto_64139501"></div>

<ul id="group_64139501">
	<li id="hiddens_64139501" class="hide"></li>
</ul>

</li>
			<li id="roothiddens" class="hide"></li>
		</ul>
	
	
	
	

<noscript><p><b>There may be more comments in this discussion. Without JavaScript enabled, you might want to <a href="//developers.slashdot.org/users.pl?op=editcomm">turn on Classic Discussion System</a> in your preferences instead.</b></p></noscript>
<div id="discussion_buttons" class="clearfix">






</div>


<div class="newcmnt"><div id="replyto_0"></div></div>


	<script type="text/javascript">
<!--
		D2.currents()['hidden']   = 3;
		D2.currents()['full']     = 9;
		D2.currents()['oneline']  = 35;
		// D2.currents_total(47);

		D2.abbrev_comments({64138200:521,64137756:515,64137832:634,64139219:522,64138202:522,64139067:537,64138643:530,64138226:34});
		D2.noshow_comments([64137894,64137738,64139201]);
		D2.pieces_comments([64137706,64137922,64137968,64137756,64137812,64137900,64137926,64138368,64139107,64138166,64137744,64137754,64137832,64138062,64138873,64139149,64138238,64137750,64137902,64138226,64139067,64139219,64137872,64137886,64138134,64138200,64138048,64138202,64138228,64138643,64138430,64138641,64139263,64138963,64139501]);
		D2.init_hiddens([64137724,64137728,64138202]);

		D2.finishLoading();


		if (D2.thresh_totals()[6][6][1] == 0) {
			D2.replyTo(0, 1);
		}


//-->
	</script>


</div>



	
	
		<div id="clickgen" class="grid_24 b">
    <section class="grid_16 f">
        <div>
			<h4 class="nobg">
			    <a href="" class="selected btmrel" onClick="getRelatedStoriesForStory(423454);return false">Related Links</a>
			    <span class="tops fright">Top of the: <a href="" class="btmday" onClick="getTopStories(1);return false">day</a>, <a class="btmweek" href="" onClick="getTopStories(7); return false">week</a>, <a href="" onClick="getTopStories(30);return false" class="btmmonth">month</a>.</span>
			</h4>
			<ul class="nobullets bmrelatedlist">


	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>321<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/23/08/07/0136228/should-a-variables-type-come-after-its-name?sdsrc=popbyskidbtmprev">Should a Variable's Type Come After Its Name?</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>293<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/23/09/02/1753239/are-scrums-a-cancer?sdsrc=popbyskidbtmprev">Are Scrums a Cancer?</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>226<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/23/06/26/018234/34-of-ap-cs-students-couldnt-solve-this-java-based-2d-array-question?sdsrc=popbyskidbtmprev">34% of AP CS Students Couldn't Solve This Java-Based 2D Array Question</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>224<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/23/06/03/1514212/nyt-its-the-end-of-computer-programming-as-we-know-it?sdsrc=popbyskidbtmprev">NYT: It's the End of Computer Programming As We Know It</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>220<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/23/01/21/0526236/rust-safety-is-not-superior-to-c-bjarne-stroustrup-says?sdsrc=popbyskidbtmprev">Rust Safety Is Not Superior To C++, Bjarne Stroustrup Says</a>
	</li>


</ul>
        </div>
    </section>
    <aside class="grid_8 st">
		<section class="grid_24 f">
			<div>
				<h5 class="tlnav"><a href="//tech.slashdot.org/story/24/01/06/2157225/blaming-social-media-acm-publication-argues-computing-has-blood-on-its-hands?sdsrc=nextbtmnext">next</a></h5>
				<div class="grid_24">
	    
	    
            	 <span class="grid_7 tcenter"><img src="//a.fsdn.com/sd/topics/facebook_64.png" width="64" height="64" alt="Facebook"></span>
	    
					<p class="grid_12"><a href="//tech.slashdot.org/story/24/01/06/2157225/blaming-social-media-acm-publication-argues-computing-has-blood-on-its-hands?sdsrc=nextbtmprev">Blaming Social Media, ACM Publication Argues Computing 'Has Blood On Its Hands'</a></p>
					<span class="grid_5 tcenter comments"><span class="cmntcnt_large fleft"><span class="slant"></span><span>106<span class="hide"> comments</span></span></span></span>
	
				</div>
			</div>
		</section>
		<section class="grid_24">
			<div>
				<h5 class="tlnav"><a href="//hardware.slashdot.org/story/24/01/06/0515241/americas-first-large-scale-offshore-wind-project-finally-begins-generating-electricity?sdsrc=prevbtmprev">previous</a></h5>
				<div class="grid_24">
	    
            	 <span class="grid_7 tcenter"><img src="//a.fsdn.com/sd/topics/power_64.png" width="64" height="64" alt="Power"></span>
	    
					<p class="grid_12"><a href="//hardware.slashdot.org/story/24/01/06/0515241/americas-first-large-scale-offshore-wind-project-finally-begins-generating-electricity?sdsrc=prevbtmprev">America's First Large-Scale Offshore Wind Project Finally Begins Generating Electricity</a></p>

					<span class="grid_5 tcenter comments"><span class="cmntcnt_large fleft"><span class="slant"></span><span>41<span class="hide"> comments</span></span></span></span>
				</div>
			</div>
		</section>
	</aside>
</div>
	

</section>
			</div>
		</div>
<div id="bottom-masonry" class="jobbioapp"></div>
		<div class="row top-space">


			<div class="grid_24">
				<!-- 728px ad -->

				<div class="adwrap">
<div id='div-gpt-ad-728x90_c'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_c');});</script></div>
</div>
				<!-- end 728px ad -->
				<!-- Slashdot Deals 6 Best Sellers -->
					<div class="row deals-footer">
						<div class="units-8 indent-2 deals-wrapper">
						  <div class="deals-header"><h1>Slashdot Top Deals</h1></div>
						  <div id="deals-output">
							<script id="deals-template" type="text/x-handlebars-template">
							  {{#each deal}}
								<div class="deal">
								  <a href="{{urlPath permalink}}?&utm_source=slashdot.org&utm_medium=dealfeed-footerfeed&utm_campaign={{slug}}" target="_blank">
								  	<img src="{{main_image}}" alt="" />
								  </a>
								  <p class="title"><a href="{{urlPath permalink}}?&utm_source=slashdot.org&utm_medium=dealfeed-footerfeed&utm_campaign={{slug}}" target="_blank">{{title}}</a></p>
								  <p class="deal-price">{{centConversion price_in_cents}}</p>
								</div>
							  {{/each}}
							</script>
						  </div>
						</div>
					</div>
					<script>
						if ( sdAdBlockActive && window.is_euro_union === 0) {
                                                    bizx.cmp.ifConsent('', ['all'], function () {
							$.ajaxSetup({
								cache: true
							});
							$.getScript( "//a.fsdn.com/sd/js/scripts/min/deals-min.js", function(){
								runDealsWidget();
							});
                                                    });
						}
					</script>

					<!-- End Slashdot Deals 6 Best Sellers -->
				</div>
			</div>
		</div>
	</div>
	<!-- SMACKS: END COMMENTS SECTION -->
</div>
<!-- SMACKS: END COMMENTS CONTAINER -->


	

<script type="text/javascript">

$(function(){
$('#firehose-filter').
	focus(function(event){
		gFocusedText = this;
	}).
	blur(function(event){
		if ( gFocusedText === this ) {
			gFocusedText = null;
		}
	});


apply_updates_when(		'at-end', true);
});
</script>

<!-- body end --><!-- footer type=current begin -->

	
	</section>
	
	


	<footer id="fhft" class="grid_24 nf aoc">
		<div id="logo_nf" class="fleft">
			<a href="//slashdot.org"><span>Slashdot</span></a>
		</div>
		<nav role="firehose footer">
			
				
				
				
				

				
						<span class="ind"></span><a class="btn first" href="//developers.slashdot.org/comments.pl?sid=23184360&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Post</a>
				
				<a class="btn hide" id="footer_moderate_button">Moderate</a>
				<a class="btn hide" id="footer_moderatorhelp_button">Moderator Help</a>
				<a class="btn hide" id="footer_delete_button" title="Checked comments will be deleted.">Delete</a>
				<script>
					(function($){
						var old_moderate_btn = $("#discussion_moderate_button");
						if (old_moderate_btn.length) {
							var moderate_btn = $("#footer_moderate_button");
							moderate_btn.click(
								function(){old_moderate_btn.click()}
							);
							moderate_btn.removeClass('hide');
						}

						var old_moderatorhelp_btn = $("#discussion_moderatorhelp_button");
						if (old_moderatorhelp_btn.length) {
							var moderatorhelp_btn = $("#footer_moderatorhelp_button");
							moderatorhelp_btn.click(
								function(){old_moderatorhelp_btn.click()}
							);
							moderatorhelp_btn.attr(
								'href', old_moderatorhelp_btn.attr('href')
							);
							moderatorhelp_btn.removeClass('hide');
						}

						var old_delete_btn = $("#discussion_delete_button");
						if (old_delete_btn.length) {
							var delete_btn = $("#footer_delete_button");
							delete_btn.click(
								function(){old_delete_btn.click()}
							);
							delete_btn.removeClass('hide');
						}

						$('#discussion_buttons').addClass('hide');
					})(Slash.jQuery); // (function($){
				</script>
				<ul class="fleft">
					
						<li class="fleft selected">
							<span class="nbutton btn hide link reset" id="more_comments_button">
								<a href="#" onclick="D2.ajaxFetchComments(0,1); return false">
									<span id="more_comments_num_a" class="hide">Get more comments</span>
								</a>
							</span>
						</li>
					
					
						<li class="fleft">
							<span class="loadedcommentcnt">47</span> of <span class="totalcommentcnt">47</span> loaded
						</li>
					
				</ul>
				
					<script type="text/javascript">D2.finishLoading()</script>
				
			

			
			<ul class="fright submitstory">
					<li class="fright">
						<a href="/submit">Submit<span class="opt"> Story</span></a>
					</li>
			</ul>
		</nav>
		


	</footer>
	<section class="bq">
		<blockquote class="msg grid_24" cite="https://slashdot.org">
			<p>No line available at 300 baud.</p>
			<span class="slant"></span>
		</blockquote>
	</section>
	<footer id="ft" class="grid_24">
		<nav class="grid_10" role="footer">
			<ul>
				<li><a href="//slashdot.org/faq">FAQ</a></li>
				<li><a href="//slashdot.org/archive.pl">Story Archive</a></li>
				<li><a href="//slashdot.org/hof.shtml">Hall of Fame</a></li>
				<li><a href="https://slashdotmedia.com/advertising-and-marketing-services/" rel="nofollow">Advertising</a></li>
				<li><a href="https://slashdotmedia.com/terms-of-use/" rel="nofollow">Terms</a></li>
				<li><a href="https://slashdotmedia.com/privacy-statement/" rel="nofollow">Privacy Statement</a></li>
				<li><a href="//slashdot.org/faq/slashmeta.shtml">About</a></li>
				<li><a href="mailto:feedback@slashdot.org">Feedback</a></li>
				<li><a href="#" onclick="set_mobile_pref('mobile',1);return false;">Mobile View</a></li>
				<li><a href="//slashdot.org/blog">Blog</a></li>
				<li><a href="#" id="opt-out-link"></a></li>
				<li><button class="btn opt-out" id="opt-out-button" style="display:none">
					<img src="//a.fsdn.com/sd/ccpa-optout.png" alt="Icon">
					Do Not Sell My Personal Information</button></li>

			</ul>
		</nav>
		<br>
		
		<div class="grid_14 tright tm"><span class="nobr">Copyright &copy; 2024 Slashdot Media. All Rights Reserved.</span></div>

	<div class="modal-custom overlay-custom" id="ccpa-modal" style="max-width:100%">
		<div class="modal-content modal-content-ccpa">
	    	<span class="close" id="modal-close">&times;</span>
			<div class="modal-header" id="ccpa-modal-content-destination"></div>
		</div>
	</div>

	</footer>
	
	<div class="overlay"></div>
<div class="modal-box">
    <a href="#" id="close-modal">Close</a>
    <article class="modal-content">
    </article>
    <footer>
</div>




<div id="modal_cover" class="hide" onclick="hide_modal_box(); return false;"></div>
<div id="modal_box" class="hide">
      <div id="modal_box_content"></div>
      <header class="n">
                  <span class="fadeout"></span>
                  <span class="fadeoutfade"></span>
		  <span class="pf"><a class="ico close" onclick="hide_modal_box(); return false;" href="#"><span>Close</span></a></span>
		  <h3 class="pf"><div id="logo"><a href="//slashdot.org">Slashdot</a></div><span id="preference_title"></span></h3>
      </header>
</div>
	
	<!-- CCM Tag -->
<script type="text/javascript">
bizx.cmp.ifConsent('', ['all','bombora'], function() {
        /*global _ml:true, window */
        _ml = window._ml || {};
        _ml.eid = '771';

        var s = document.getElementsByTagName('script')[0], cd = new Date(), mltag = document.createElement('script');
        mltag.type = 'text/javascript'; mltag.async = true;
        mltag.src = '//ml314.com/tag.aspx?' + cd.getDate() + cd.getMonth() + cd.getFullYear();
        s.parentNode.insertBefore(mltag, s);
});
</script>
<!-- End CCM Tag -->

<script type="text/javascript">
window.google_analytics_uacct = "UA-199823890-2";

var _gaq = _gaq || [];





  _gaq.push(['_setAccount', 'UA-199823890-2']);
  _gaq.push(['_setDomainName', '.slashdot.org']);

	
		_gaq.push(['_addIgnoredRef', 'slashdot.org']);
	


  _gaq.push(['_setCustomVar', 1, 'User Type',  'Anon', 3]);		
	
	_gaq.push(['_setCustomVar', 2, 'Page','article2', 3]);

	



// track beta behavior for user
var betamatches = document.cookie.match(/betagroup=(-?\d+)/);

if(betamatches && betamatches[1]) {
  if(betamatches[1] == -1) {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','opt-out', 3]);
  } else {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','unredirected', 3]);
  }
}



  _gaq.push(['_trackPageview']);
  _gaq.push(['_trackPageLoadTime']);


if (window.is_euro_union === 0) {
bizx.cmp.ifConsent('', ['all'], function () {
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
});
}
</script>

<!-- CCM GA Push -->
<script>
    if (typeof _ml !== 'undefined' && _ml.us) {
        if (_ml.us.tp && _ml.us.tp.length > 0) {
            ga('set', 'dimension2', _ml.us.tp[0]);
        }
        if (_ml.us.pc && _ml.us.pc.length > 0) {
            ga('set', 'dimension7', _ml.us.pc[0]);
        }
        ga('set', 'dimension3', _ml.us.ind);
        ga('set', 'dimension4', _ml.us.cr);
        ga('set', 'dimension5', _ml.us.cs);
        ga('set', 'dimension6', _ml.us.dm);
        ga('set', 'dimension8', _ml.us.sn);
    }
</script>

<!-- Sticky Ads -->
<script type="text/javascript">
var topBannerViewed = false;
function initSticky(){
	if (SD.Ads.acceptable_ads_active) {
		return;
	}
		
	if($('#div-gpt-ad-728x90_a').length > 0 && $('#div-gpt-ad-300x250_a').length > 0 && window.outerWidth >= 1070 && !sdAdBlockActive){
	    $(window).scroll(function(){
		var y = $(document).scrollTop();
		var z =  y + window.outerHeight;
		var navOffset = 0;
		var offset = [
		    $('.nav-wrap').outerHeight(true),
		    $('.nav-secondary-wrap').outerHeight(true)
		];
		for(row in offset){
		    if(offset[row]) navOffset = navOffset + parseInt(offset[row]);
		}
		$('.adwrap-unviewed').each(function(){
		    var cls = 'adwrap-sticky';
		    var toggleCls = 'adwrap';
				//$('.banner-wrapper').css('height', $('.banner-contain').outerHeight());
		    if($(this).hasClass('railad')) {
			if(topBannerViewed){
			    var topPixels = $(this).offset().top;
			    navOffset += $('.adwrap').outerHeight();
			    if(y >= topPixels && y >= navOffset){
				$('#slashboxes').css('top', 0).css('position','sticky').css('right',13);
			    } else {
				$('#slashboxes').removeAttr('style');
			    }
			}
			return;
		    }
		    var topPixels = $(this).offset().top;
		if(y >= topPixels && y >= navOffset){
			$(this).addClass(cls);
			$(this).removeClass('adwrap');
					if(cls == 'adwrap-sticky') { //top banner
			    topBannerViewed = false;
						$('#slashboxes').css('top',$(this).outerHeight() || 0).css('position','sticky').css('right',13);
					}
		if(topBannerViewed) {
			    //console.log('hereeee');
						$('#slashboxes').css('top', 0).css('position','sticky').css('right',13);
					}
		    }else{
									//console.log('topBannerViewed', topBannerViewed);
			$(this).removeClass(cls);
			$(this).addClass(toggleCls);
			$('#slashboxes').removeAttr('style');
		    }
		});
			if($('.adwrap-viewed-banner').length > 0){
			  //console.log('ads topBanner displayed');
				topBannerViewed = true;
				$('.adwrap-viewed-banner').removeClass('adwrap-unviewed').removeClass('adwrap-sticky').addClass('adwrap');
			}
	    if($('.adwrap-viewed-railad').length > 0){
							//console.log('ads sidebar displayed');
		    $('.adwrap-viewed-railad').removeClass('adwrap-unviewed').removeClass('adwrap-railad-sticky');
				$('#slashboxes').removeAttr('style');
			}
	    });
	}
}
bizx.cmp.ifConsent('', ['all', 'google-ads'], function () {
	if (!sdAdBlockActive) {
		initSticky();
	}
	if (SD.Ads.acceptable_ads_active) {
		// similar to remove* code above in initSticky
		$('.adwrap-unviewed').removeClass('adwrap-unviewed').removeClass('adwrap-sticky').addClass('adwrap').removeClass('adwrap-railad-sticky');
		$('#slashboxes').removeAttr('style');
	}
});
</script>

<!-- Piwik -->
<script type="text/javascript">
  var _paq = _paq || [];
  _paq.push(["setCookieDomain", "*.slashdot.org"]);
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
function initPiwikAndNels() {
  (function() {
    var u="//analytics.slashdotmedia.com/";
    _paq.push(['setTrackerUrl', u+'sd.php']);
    _paq.push(['setSiteId', 40]);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'sd.js'; s.parentNode.insertBefore(g,s);
  })();

    if(window.location.pathname == '/'){
        var nelId = (location.search.split('nel_id=')[1] || '').split('&')[0];
        var url = '/ajax.pl?op=nel';
        if(nelId){
            url += '&nel_id='+nelId;
        }
        $.ajax({
            url: url,
            type: 'POST',
            success: function(html){
                $('#firehoselist article').eq(1).after(html);
            }
        });
    }
    //announcement NEL
    if(document.getElementById('announcementText')){
      $('#announcementText').hide();
      var hlUrl = '/ajax.pl?op=hl_nel';
      if(nelId){
        hlUrl += '&nel_id='+nelId;
      }
      $.ajax({
        url: hlUrl,
        type: 'POST',
        success: function(html){
          if(html.length < 10){
            $('#announcementText').show();
            return;
          }
          $('#announcementText').html(html).show();
        },
        error: function () {
          $('#announcementText').show();
        }
      });
    }
}
bizx.cmp.ifConsent('', ['storage', 'measurement'], initPiwikAndNels);
</script>


<script type="text/javascript">
_linkedin_data_partner_id = "113712";
</script><script type="text/javascript">
if (window.is_euro_union === 0) {
bizx.cmp.ifConsent('', ['all'], function (){
    (function(){var s = document.getElementsByTagName("script")[0];
    var b = document.createElement("script");
    b.type = "text/javascript";b.async = true;
    b.src = "https://snap.licdn.com/li.lms-analytics/insight.min.js";
    s.parentNode.insertBefore(b, s);})();
    });
}
</script>
<noscript>
<img height="1" width="1" style="display:none;" alt="" src="https://dc.ads.linkedin.com/collect/?pid=113712&fmt=gif" />
</noscript>

<!-- Datonics -->
<script type="text/javascript">
if (window.is_euro_union === 0) {
    bizx.cmp.ifConsent('', ['all'], function () {
        bizx.cmp.embedScript("//ads.pro-market.net/ads/scripts/site-143573.js", true);
    });
}
</script>
	<script id="after-content" type="text/javascript">
(function( $, fn, console ){
	$ && fn && $(function(){ fn($, console); });
})(window.jQuery, window.pageload_done, window.console);
</script>
	
	<script type='text/javascript'>
	if(!document.location.href.match(/source=autorefresh/)) {
		document.write('<img src="//slashdot.org/images/js.gif?332">');
	}
</script>
<noscript>
	<img src="//slashdot.org/images/njs.gif?963">
</noscript>
	<div class="busy genericspinner hide"><span>Working...</span></div>

	    <script>
            var regular_opt_out_link = true;

            if (bizx.cmp.show_do_not_sell()) {
                regular_opt_out_link = false;
                 document.getElementById('opt-out-button').setAttribute('style', 'display:inline');
            }

            if (window.is_euro_union === 1) {
                regular_opt_out_link = false;
                var elem = '<a href="#" title="Privacy Choices" onclick="bizx.cmp.promptConsent(); return false;">Privacy Choices</a>';
                document.getElementById('opt-out-link').innerHTML = elem;
            }

            if (regular_opt_out_link == true) {
                var elem = '<a href="https://slashdotmedia.com/opt-out-choices" title="Opt Out" rel="nofollow">Opt Out</a>';
                document.getElementById('opt-out-link').innerHTML = elem;
            }
            var cmp_modal = document.getElementById('ccpa-modal');
            var btn = document.getElementById('opt-out-button');
            var span = document.getElementById('modal-close');

            btn.onclick = function() {
            	cmp_modal.style.display = 'block';
            };

            span.onclick = function() {
            	cmp_modal.style.display = 'none';
            };

         </script>

	<script>
		if(typeof(Storage)!=="undefined"){
			window.scrollTo(0,sessionStorage.scrollPos);
				$(window).scroll(function () {
				//You've scrolled this much:
				sessionStorage.scrollPos = $(window).scrollTop();
			});
		}
		$(function(){
			$('a').click(function(){
				delete sessionStorage.scrollPos;
			})
		});
		// window.onbeforeunload = function () {
		// 	console.log('bakc button clicked');
		// 	delete sessionStorage.scrollPos;
		// }
		window.onpopstate=function() {
			delete sessionStorage.scrollPos;
		}
	</script>
	

	
		<!-- 1x1 story page -->
		<div id='div-gpt-ad-1x1'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-1x1');});</script></div>
	

	</body>
	</html>


	<!-- footer type=current end -->