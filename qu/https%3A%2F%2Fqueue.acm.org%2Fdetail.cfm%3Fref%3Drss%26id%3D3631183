<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>

<script src="/cdn-cgi/apps/head/nLYIPopMPWKseIlIthEH-UJkbT0.js"></script><script async src="https://www.googletagmanager.com/gtag/js?id=G-20JYM3ZFN0"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-20JYM3ZFN0');
</script>
<title>Low-code Development Productivity - ACM Queue</title>
<meta name="description" value />
<meta name="keywords" value="Development" />

<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-P52H78L');</script>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="shortcut icon" href="favicon.ico" />
<script type="text/javascript" src="/js/jquery-1.2.6.min.js"></script>
<script type="text/javascript" src="/js/jquery.validate.min.js"></script>
<script type="text/javascript" src="/js/global.js"></script>
<link rel="alternate" type="application/rss+xml" title="Latest Queue Content RSS 2.0" href="/rss/feeds/latestitems.xml" />
<link rel="alternate" type="application/rss+xml" title="All Queue Content RSS 2.0" href="/rss/feeds/queuecontent.xml" />
<link rel="alternate" type="application/rss+xml" title="Curmudgeon RSS 2.0" href="/rss/feeds/curmudgeon.xml" />
<link rel="alternate" type="application/rss+xml" title="Opinion RSS 2.0" href="/rss/feeds/opinion.xml" />
<link rel="alternate" type="application/rss+xml" title="Kode Vicious RSS 2.0" href="/rss/feeds/kodevicious.xml" />
<link rel="alternate" type="application/rss+xml" title="ACM TechNews RSS" href="https://www.infoinc.com/acm/TechNews.rss" />
<link rel="alternate" type="application/rss+xml" title="Washington Updates RSS" href="https://usacm.acm.org/weblog2/?feed=rss2" />
<link rel="alternate" type="application/rss+xml" title="RISKS Forum RSS" href="/rss/feeds/risksforum.xml" />
<link rel="alternate" type="application/rss+xml" title="AI RSS 2.0" href="/rss/feeds/ai.xml" />
<link rel="alternate" type="application/rss+xml" title="API Design RSS 2.0" href="/rss/feeds/apidesign.xml" />
<link rel="alternate" type="application/rss+xml" title="Bioscience RSS 2.0" href="/rss/feeds/bioscience.xml" />
<link rel="alternate" type="application/rss+xml" title="Blockchain RSS 2.0" href="/rss/feeds/blockchain.xml" />
<link rel="alternate" type="application/rss+xml" title="Business/Management RSS 2.0" href="/rss/feeds/business/management.xml" />
<link rel="alternate" type="application/rss+xml" title="Compliance RSS 2.0" href="/rss/feeds/compliance.xml" />
<link rel="alternate" type="application/rss+xml" title="Component Technologies RSS 2.0" href="/rss/feeds/componenttechnologies.xml" />
<link rel="alternate" type="application/rss+xml" title="Computer Architecture RSS 2.0" href="/rss/feeds/computerarchitecture.xml" />
<link rel="alternate" type="application/rss+xml" title="Concurrency RSS 2.0" href="/rss/feeds/concurrency.xml" />
<link rel="alternate" type="application/rss+xml" title="Cryptocurrency RSS 2.0" href="/rss/feeds/cryptocurrency.xml" />
<link rel="alternate" type="application/rss+xml" title="DSPs RSS 2.0" href="/rss/feeds/dsps.xml" />
<link rel="alternate" type="application/rss+xml" title="Data RSS 2.0" href="/rss/feeds/data.xml" />
<link rel="alternate" type="application/rss+xml" title="Databases RSS 2.0" href="/rss/feeds/databases.xml" />
<link rel="alternate" type="application/rss+xml" title="Debugging RSS 2.0" href="/rss/feeds/debugging.xml" />
<link rel="alternate" type="application/rss+xml" title="Development RSS 2.0" href="/rss/feeds/development.xml" />
<link rel="alternate" type="application/rss+xml" title="Distributed Computing RSS 2.0" href="/rss/feeds/distributedcomputing.xml" />
<link rel="alternate" type="application/rss+xml" title="Distributed Development RSS 2.0" href="/rss/feeds/distributeddevelopment.xml" />
<link rel="alternate" type="application/rss+xml" title="Education RSS 2.0" href="/rss/feeds/education.xml" />
<link rel="alternate" type="application/rss+xml" title="Email and IM RSS 2.0" href="/rss/feeds/emailandim.xml" />
<link rel="alternate" type="application/rss+xml" title="Embedded Systems RSS 2.0" href="/rss/feeds/embeddedsystems.xml" />
<link rel="alternate" type="application/rss+xml" title="Failure and Recovery RSS 2.0" href="/rss/feeds/failureandrecovery.xml" />
<link rel="alternate" type="application/rss+xml" title="File Systems and Storage RSS 2.0" href="/rss/feeds/filesystemsandstorage.xml" />
<link rel="alternate" type="application/rss+xml" title="Game Development RSS 2.0" href="/rss/feeds/gamedevelopment.xml" />
<link rel="alternate" type="application/rss+xml" title="Graphics RSS 2.0" href="/rss/feeds/graphics.xml" />
<link rel="alternate" type="application/rss+xml" title="HCI RSS 2.0" href="/rss/feeds/hci.xml" />
<link rel="alternate" type="application/rss+xml" title="Managing Megaservices RSS 2.0" href="/rss/feeds/managingmegaservices.xml" />
<link rel="alternate" type="application/rss+xml" title="Mobile Computing RSS 2.0" href="/rss/feeds/mobilecomputing.xml" />
<link rel="alternate" type="application/rss+xml" title="Networks RSS 2.0" href="/rss/feeds/networks.xml" />
<link rel="alternate" type="application/rss+xml" title="Object-Relational Mapping RSS 2.0" href="/rss/feeds/object-relationalmapping.xml" />
<link rel="alternate" type="application/rss+xml" title="Open Source RSS 2.0" href="/rss/feeds/opensource.xml" />
<link rel="alternate" type="application/rss+xml" title="Patching and Deployment RSS 2.0" href="/rss/feeds/patchinganddeployment.xml" />
<link rel="alternate" type="application/rss+xml" title="Performance RSS 2.0" href="/rss/feeds/performance.xml" />
<link rel="alternate" type="application/rss+xml" title="Power Management RSS 2.0" href="/rss/feeds/powermanagement.xml" />
<link rel="alternate" type="application/rss+xml" title="Privacy and Rights RSS 2.0" href="/rss/feeds/privacyandrights.xml" />
<link rel="alternate" type="application/rss+xml" title="Processors RSS 2.0" href="/rss/feeds/processors.xml" />
<link rel="alternate" type="application/rss+xml" title="Programming Languages RSS 2.0" href="/rss/feeds/programminglanguages.xml" />
<link rel="alternate" type="application/rss+xml" title="Purpose-built Systems RSS 2.0" href="/rss/feeds/purpose-builtsystems.xml" />
<link rel="alternate" type="application/rss+xml" title="Quality Assurance RSS 2.0" href="/rss/feeds/qualityassurance.xml" />
<link rel="alternate" type="application/rss+xml" title="RFID RSS 2.0" href="/rss/feeds/rfid.xml" />
<link rel="alternate" type="application/rss+xml" title="SIP RSS 2.0" href="/rss/feeds/sip.xml" />
<link rel="alternate" type="application/rss+xml" title="Search Engines RSS 2.0" href="/rss/feeds/searchengines.xml" />
<link rel="alternate" type="application/rss+xml" title="Security RSS 2.0" href="/rss/feeds/security.xml" />
<link rel="alternate" type="application/rss+xml" title="Semi-structured Data RSS 2.0" href="/rss/feeds/semi-structureddata.xml" />
<link rel="alternate" type="application/rss+xml" title="Social Computing RSS 2.0" href="/rss/feeds/socialcomputing.xml" />
<link rel="alternate" type="application/rss+xml" title="System Administration RSS 2.0" href="/rss/feeds/systemadministration.xml" />
<link rel="alternate" type="application/rss+xml" title="System Evolution RSS 2.0" href="/rss/feeds/systemevolution.xml" />
<link rel="alternate" type="application/rss+xml" title="Testing RSS 2.0" href="/rss/feeds/testing.xml" />
<link rel="alternate" type="application/rss+xml" title="Virtual Machines RSS 2.0" href="/rss/feeds/virtualmachines.xml" />
<link rel="alternate" type="application/rss+xml" title="Virtualization RSS 2.0" href="/rss/feeds/virtualization.xml" />
<link rel="alternate" type="application/rss+xml" title="Visualization RSS 2.0" href="/rss/feeds/visualization.xml" />
<link rel="alternate" type="application/rss+xml" title="VoIP RSS 2.0" href="/rss/feeds/voip.xml" />
<link rel="alternate" type="application/rss+xml" title="Web Development RSS 2.0" href="/rss/feeds/webdevelopment.xml" />
<link rel="alternate" type="application/rss+xml" title="Web Security RSS 2.0" href="/rss/feeds/websecurity.xml" />
<link rel="alternate" type="application/rss+xml" title="Web Services RSS 2.0" href="/rss/feeds/webservices.xml" />
<link rel="alternate" type="application/rss+xml" title="Workflow Systems RSS 2.0" href="/rss/feeds/workflowsystems.xml" />
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-6562869-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
<script type="text/javascript">
function plusone_vote( obj ) {
_gaq.push(['_trackEvent','plusone',obj.state]);
}
</script>
<style>
body {
	font-family: jaf-bernino-sans, 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Geneva, Verdana, sans-serif;
	color: #333;
}
div.container p {
	line-height: 1.65em;
}
h1 {
	font-size: 32px;
}
h3 {
	font-size: 18px;
}
h4 {
	font-size: 14px;
}

div.container {
	margin-left: auto;
	margin-right: auto;
}

div {
	margin: 64px;
	max-width: 800px;
	position: relative;
}
img {
    max-width: 100%;
    height: auto;
    width: auto\9; /* ie8 */
}
a {
	color: #009;
	text-decoration: none;
}
a:hover {
	text-decoration: underline;
}
hr {
	margin:64px;
}
label {
	font-size: 0.8em;
	color: #666;
}
input {
	color: #999;
}

/* NAVBAR */
.navbar {
//	position: fixed;
	background: #EEEEEE;
	top: -64px;
	z-index: 10000;
	width: 100%;
	clear: both;
	padding: 0px;
	margin: 0px;
	padding-top: 10px;
	padding-left: 10px;
	padding-right: 10px;
}

/*  SECTIONS  */
.section {
	clear: both;
	padding: 0px;
	margin: 0px;
}

/*  COLUMN SETUP  */
.col {
	display: block;
	float:left;
	margin: 1% 0 1% 1.6%;
}
.col:first-child { margin-left: 0; }


/*  GROUPING  */
.group:before,
.group:after {
	content:"";
	display:table;
}
.group:after {
	clear:both;
}
.group {
    zoom:1; /* For IE 6/7 */
}

/*  GRID OF THREE  */
.span_3_of_3 {
	width: 100%;
}
.span_2_of_3 {
	width: 66.1%;
}
.span_1_of_3 {
	width: 32.2%;
}

/*  GO FULL WIDTH AT LESS THAN 480 PIXELS */

@media only screen and (max-width: 480px) {
	.col {
		margin: 1% 0 1% 0%;
	}
}

@media only screen and (max-width: 480px) {
	.span_3_of_3 {
		width: 100%;
	}
	.span_2_of_3 {
		width: 100%;
	}
	.span_1_of_3 {
		width: 100%;
	}
}

.span_2_of_2 {
	width: 100%;
}

.span_1_of_2 {
	width: 49.2%;
}

/*  GO FULL WIDTH AT LESS THAN 480 PIXELS */

@media only screen and (max-width: 480px) {
	.span_2_of_2 {
		width: 100%;
	}
	.span_1_of_2 {
		width: 100%;
	}
}
</style>
<style>
#form-search > .st-default-search-input {
	width: 170px;
  display: inline-block;
  height: 16px;
  padding: 7px 11px 7px 28px;
  border: 1px solid #bbb;
  border: 1px solid rgba(0,0,0,0.25);
  font-weight: 400;
  color: #3B454F;
  font-size: 14px;
  line-height: 16px;
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  font-family: system, -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Lucida Grande", sans-serif;
}


blockquote
{
    color: #666;
    font-size: 1.1em;
    background: none;
    border-left: .2rem solid #d3d3d3;

    display: block;
    padding: 20px 20px 10px 45px;
    margin: 20px 0;
    font-style: italic;

    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 40px;
    margin-inline-end: 40px;

	font-family: Georgia, Palatino, "Palatino Linotype", Times, "Times New Roman", serif;
}

.ldq {
	display: block;
    padding-left: 10px;
    content: "\201C";
    font-size: 60px;
    position: relative;
    left: -50px;
    top: 0;
    height: 0;
    color: #7a7a7a;
}
code {
	font-size:1.25em;
}
</style>
</head>
<body>

<div class="container">
<div class="navbar">
<form id="form-search" name="searchform" onsubmit="return false;" style="float:right;">
<input type="text" class="st-default-search-input">
<script type="text/javascript">
  (function(w,d,t,u,n,s,e){w['SwiftypeObject']=n;w[n]=w[n]||function(){
  (w[n].q=w[n].q||[]).push(arguments);};s=d.createElement(t);
  e=d.getElementsByTagName(t)[0];s.async=1;s.src=u;e.parentNode.insertBefore(s,e);
  })(window,document,'script','//s.swiftypecdn.com/install/v2/st.js','_st');

  _st('install','UyYECD1kdsPnbHJtPyzG','2.0.0');
</script>
<br/>
<a href="issuedetail.cfm?issue=3632533" style="width:150px;font-size:0.7em;">Current Issue</a> &nbsp; <a href="pastissues.cfm" style="width:150px;font-size:0.7em;">Past Issues</a> &nbsp; <a href="topics.cfm" style="width:150px;font-size:0.7em;">Topics</a>
</form>
<a href="/"><img src="https://queue.acm.org/img/acmqueue_logo.gif" /></a>
</div>

<br/>
<label>November 27, 2023<br/><b><a class="descriptor" href="issuedetail.cfm?issue=3632533">Volume 21, issue 5 </a></b></label>
<p>

&nbsp;
<a href="https://portal.acm.org/citation.cfm?id=3631183">
<img src="img/icon_pdf.png" alt="Download PDF version of this article" />
PDF
</a>
</p>
<h1 class="hidetitle">Low-code Development Productivity</h1>
<h2>"Is winter coming" for code-based technologies?</h2>
<h3>João Varajão, António Trigo, Miguel Almeida</h3>
<p>Over the past few years, the software development world has been witnessing the advent of low-code technologies. These technologies promise significant improvements, both in terms of the development process and productivity, but evidence of these improvements is practically nonexistent in the research literature. This may lead you to question whether the promised gains are just propaganda from software vendors.</p>
<p><i>Productivity</i> in the context of software-development technologies can be defined as the efficiency made possible in the production of software goods or services. Productivity is typically expressed by a measure that relates output, input, and time. The <i>Cambridge Dictionary</i> defines productivity as "the rate at which a company or country makes goods, usually judged in connection with the number of people and the amount of materials necessary to produce the goods"; similarly, the <i>Oxford Dictionary</i> defines it as "the rate at which a worker, a company, or a country produces goods, and the amount produced, compared with how much time, work, and money is needed to produce them."</p>
<p>As you might expect, productivity is a critical issue in software development. The emergence of low-code, extreme low-code (quasi no-code), and no-code technologies is precisely grounded in the search for greater efficiency and effectiveness in software development.</p>
<p>The main arguments put forth on the websites of software houses that produce and market low-code technologies largely focus on productivity improvements:</p>
<ul>
<li>"Create your apps in less time with our powerful tools, templates, connectors all in a single platform." (OutSystems)<sup>13</sup></li>
<li>"... you should expect to build your apps 10x faster, reduce your maintenance costs by 50%, and gain superior functionality as compared to traditional development." (Appian)<sup>1</sup></li>
<li>"Up to 10x faster developing new projects with 1/10 of resources." (Quidgest Genio)<sup>15</sup></li>
<li>"Allows you to go live sooner and get to success faster." (Mendix)<sup>10</sup></li>
<li>"Build apps crazy fast without code." (TrackVia)<sup>20</sup></li>
<li>"Productivity is 8 times higher than low code platforms." (Quidgest Genio)<sup>15</sup></li>
<li>"... maximize your resources and dramatically improve your business results." (Appian)<sup>1</sup></li>
<li>"It’s easy to build and integrate high quality applications in days, not weeks." (TrackVia)<sup>20</sup></li>
<li>"... change the way software is built, so you can rapidly create and deploy critical applications that evolve with your business." (OutSystems)<sup>13</sup></li>
<li>"Create better software faster by abstracting and automating the development process." (Mendix)<sup>10</sup></li>
</ul>
<p style="margin-left:.5in"><sup>&nbsp;</sup></p>
<p>Overall, this seems too good to be true, and it is important to separate what is "advertising" from what is "achievable" for companies that are weighing whether to adopt this technology for their software development.</p>
<p>This article aims to provide new insights on the subject by presenting the results of laboratory experiments carried out with code-based, low-code, and extreme low-code technologies to study differences in productivity. Low-code technologies have clearly shown higher levels of productivity, providing strong arguments for low-code to dominate the software development mainstream in the short/medium term. The article reports the procedure and protocols, results, limitations, and opportunities for future research (expanding the results of Trigo, et al.<sup>21</sup>).</p>
<p>&nbsp;</p>
<h3>Background</h3>
<p>Source code is the set of logical instructions that a programmer writes when developing an application. Once written, these instructions are compiled/interpreted and converted into machine code. High-level programming languages such as Python, Java, JavaScript, PHP, C/C++, C#, etc., are examples of technologies used in code-based application development. </p>
<p>Low-code software development, on the other hand, consists of minimizing the amount of manual coding by using support tools. The objective is to develop software faster and with less effort on the part of development teams, thus accelerating software delivery.</p>
<p>Examples of low-code/no-code software-development technologies are IBM Automation Platform, Zoho Creator, Appian, Mendix, OutSystems, AgilePoint, Google AppSheet, Nintex, TrackVia, Quickbase, ServiceNow, Salesforce App Cloud, Microsoft Power Apps, Oracle Visual Builder, Oracle APEX, and Quidgest Genio, to name just a few. The distinctive feature of these technologies is that they allow the creation of software applications with minimal hand-coding.<sup>22, 23</sup></p>
<p>Typically, low-code platforms provide a graphical environment that facilitates application development, unlike code-based technology, which requires manual coding (i.e., almost everything is developed graphically in low-code technologies, with little or no programming, allowing people with no programming competencies to create software applications). One disadvantage of these technologies are the licensing costs, which are known to be higher than for code-based technologies.<sup>17</sup></p>
<p>&nbsp;</p>
<h3>Method</h3>
<p>In this research, laboratory experiments were performed in a controlled environment, following a previously defined procedure and protocols to enable accurate measurements.<sup>2</sup> The experiments were designed to be objective so there is no bias in the results (e.g., resulting from the researchers’ influence/perspective).<sup>9</sup></p>
<p>The underlying research question was: Do low-code technologies result in higher software-development productivity than code-based technologies (as reported in the gray literature)? The variable under study was productivity in the creation and maintenance of software applications.</p>
<p>For each experiment, a software-development technology was selected (code-based, low-code, or extreme low-code (quasi no code)), and one developer with proven proficiency in that technology was invited to participate. In the case of code-based technology, the developer’s preferred technology was selected. The productivity calculation was based on the UCPA (use case points analysis) method.<sup>12</sup></p>
<p>The artificial and controlled environments of the experiments made it possible to accurately measure execution times; this is impossible in other types of studies, such as field experiments, in which it is not viable to control all external stimuli that condition the performance of tasks.<sup>24</sup></p>
<p>The experiments were structured into five stages: </p>
<p>0 Experiment design</p>
<p>I Briefing</p>
<p>II Software application development (creation)</p>
<p>III Software application development (maintenance)</p>
<p>IV Results analysis</p>
<p>Stages I, II, and III were repeated for each technology involved in the experiments.</p>
<p>&nbsp;</p>
<h4>Stage 0 – Experiment design</h4>
<p>Stage 0, the preparatory phase for the various experiments to be performed, was carried out only once. During this stage, the procedure to be followed was defined; the protocols that specify the application to be developed and maintained (structured in two stages) were created; and the methods to be used to estimate and measure productivity were specified. The protocols are available for download at <a href="https://doi.org/10.5281/zenodo.6407074">https://doi.org/10.5281/zenodo.6407074.</a></p>
<p>The UCPA method was chosen from the several possible alternatives (e.g., lines of code,<sup>14</sup> COCOMO II (Constructive Cost Model),<sup>19 </sup>function point analysis,<sup>8</sup> etc.), because of its focus on the functionalities of the applications to be developed and independence of the technology to be used (which, in the case of the defined experiments, is fundamental).</p>
<p>The method consists of the following phases:<sup>2,3,11</sup></p>
<p>1. Calculation of the UUCP (unadjusted use case points) variable, using the variables UAW (unadjusted actor weight) and UUCW (unadjusted use case weight), respectively related to the perceived complexity of actors and use cases: UUCP=UAW+UUCW</p>
<p>2. UUCP adjustment, considering a set of factors of a technical and environmental nature reflected in the variables TCF (technical complexity factor) and EF (environmental factor). The combination of variable UUCP with variables TCF and EF results in the assessable UCP (use case points) of the project: UCP=UUCPxTCFxEF</p>
<p>3. Finally, the UCP variable is multiplied by the PF (productivity factor), which represents the number of hours necessary for the development of each UCP: Total Effort=UCPxPF</p>
<p>Thus, with the UCPA model as a reference, the PF variable was calculated: The lower the resulting PF, the higher the productivity of the technology under study.</p>
<p>The experiment was structured in two main parts: the first part (stage II) created a software application; and the second part (stage III) consisted of the maintenance (corrective and evolutionary) of that application.</p>
<p>Appendices A.1, A.2, and A.3 identify the actors and use cases described in the experiment protocols, as well as their respective scores (weight).</p>
<p>For the first part of the experiment (creation of a software application), TCF was given a value of 1, considering the low application complexity. Given that the purpose of the experiment was to determine the EF value for each technology, the starting point for calculating the UCP variable was also set at 1. Thus, for the first part (stage II) of the experiment:</p>
<p> &nbsp; UUCP=UAW+UUCW=125+9=134</p>
<p> &nbsp; UCP=UUCPx1x1=134x1x1=134</p>
<p>For the second part of the experiment (maintenance), participants were asked to make two changes (corresponding to a weight of 20 points) and to implement new use cases (also corresponding to 20 points), as shown in appendix A.3. Thus, in total, for the second part (stage III) of the experiment:</p>
<p> &nbsp; UUCP=UAW+UUCW=40+9=49</p>
<p> &nbsp; UCP=UUCPx1x1=49x1x1=49</p>
<p>Throughout each experiment, a researcher was always present. Whenever requested by the developer, additional clarifications were provided on the application to be developed. It should also be noted that the experiments were fully recorded on video for subsequent analysis. Break times (e.g., for meals) were registered but not considered for productivity calculation. During the experiments, the developers could access all the information they needed; the only restriction was that they could not contact other developers for help.</p>
<p>&nbsp;</p>
<h4>Stage I – Briefing</h4>
<p>Stage I was preparatory and consisted of presenting the protocol and the conditions for conducting the experiment to the developer. The use cases were presented in detail, as well as the mockups and data-model requirements. The degrees of freedom were also defined—for example, regarding the color scheme of the graphical interface. </p>
<p>The importance of the final application being as close as possible to the mockups was duly stressed, as well as the need for strict compliance with the specifications—developers were told to resist the temptation that "it would be better in any other way"—since a quality assessment in the final stage of the experiment was planned to consider these very aspects. Time measurement started after the completion of this phase.</p>
<p>&nbsp;</p>
<h4>Stage II – Software application development (creation)</h4>
<p>The objective of stage II was to create a new application, following the protocol defined in the first part of the experiment. Each developer’s activities were recorded on video, and one of the team’s researchers was always present during this stage. Besides the programming corresponding to the defined use cases, the activities performed by the developer included the configuration of the development environments used, the creation of databases, and testing. It should be noted that the complementary activities varied significantly depending on the development technology used.</p>
<p>&nbsp;</p>
<h4>Stage III – Software application development (maintenance)</h4>
<p>Stage III followed the same procedure as stage II, except that the objective was not the creation of a new application but the maintenance (corrective and evolutionary) of an existing application (the one created in stage II). Moreover, the activities were based on a new protocol and requirements (see appendix A.3), which was made available only after completing stage II (i.e., in stage II, the developers were not aware of the protocol for stage III).</p>
<p>&nbsp;</p>
<h4>Stage IV – Results analysis</h4>
<p>After completing the experiments, the time records (registered manually) and the videos of the activities performed were checked to ensure the accuracy of the time counting. Furthermore, to promote greater accuracy in the calculation of the productivity made possible by each technology, a quality assessment of each resulting application was performed with the participation of at least two researchers, considering four fundamental criteria: compliance with the mockups; fulfillment of the functionalities as described in the use cases; occurrence of errors; and application performance. Note that although quality assessments of the various applications resulted in minor differences in the final productivity calculated, this had no significant expression in productivity differences among the various technologies that were part of the experiments or in the overall conclusions of the study.</p>
<p>&nbsp;</p>
<h3>Results</h3>
<p>Three experiments were conducted using the most recent versions of the selected technologies: code-based (Django/Python<sup>4</sup>); low-code (OutSystems<sup>13</sup>); and extreme low-code (Quidgest Genio<sup>15</sup>). All the participating developers (one per experiment) were experienced in using the target technology in a professional context. The researchers’ contacts for accessing the participants determined the selection of the low-code technologies. In the case of the code-based technology, the participant chose Django/Python (he also had experience with several others, including PHP, C#, etc.). All the participants were familiar with the experiment domain (aware of the involved concepts) and the type of application to be developed.</p>
<p>For each experiment, the results (presented in table 1) are based on the variables: </p>
<ul>
<li> QF (quality factor)</li>
<li> Implemented UC (considering QF)</li>
<li> Time (hours)</li>
<li> PF (without considering QF) </li>
<li> PF (considering QF)</li>
</ul>
<img src="https://dl.acm.org/cms/attachment/html/10.1145/3631183/assets/html/varajao-t1.png" alt="Low-code Development Productivity" />
<p>&nbsp;</p>
<p>Additionally, for each variable, the results of stage II (software application creation) and stage III (software application maintenance) are presented, as well as the experiment as a whole (total).</p>
<p>The <i>QF variable</i> is related to the quality of the final product and was determined considering four fundamental criteria: (1) compliance with the mockups; (2) fulfillment of the requirements as described in the use cases; (3) occurrence of errors; and (4) application performance.</p>
<p>For example, if an application had a minor deviation in the implementation of a particular use case compared with the respective mockup, without any impact on functionality, the QF variable corresponding to that use case would be penalized by 5 percent. In the case of an error inhibiting the use of the functionality, however, the penalty could go up to 100 percent.</p>
<p>The QF variable’s final value (per technology) results from the weighted average of the application’s overall quality (considering the weights of the use cases). For example, a QF of 0.9 can be interpreted as the application meeting 90 percent of the specification described in the corresponding protocol. Two researchers reviewed and applied a test script created to reduce bias in quality assessment. In the end, the application performance criterion was not considered because no differences were identified among the resulting applications. If there had been such differences, it could be because of web server capacity and not the involved technology.</p>
<p>Thus, the <i>implemented UC variable (considering QF)</i> corresponds to the UC effectively implemented and is calculated by multiplying the UUCP variable of the experiment by the QF variable.</p>
<p>The <i>time variable</i> corresponds to the creation/maintenance time of the application, measured in hours.</p>
<p>The <i>PF variable (without considering QF)</i> consists of the calculated productivity factor, having as reference only the UUCP of the experiment (that is, UUCP/Time); this variable ignores the degree of compliance (QF) with the specification in the protocol.</p>
<p>Finally, the <i>PF variable (considering QF)</i> consists of the calculated productivity factor, having as reference the implemented UC variable (considering QF). Thus, this variable better reflects productivity, since it takes into account the UC effectively implemented (considering the QF) and not simply those specified in the experiment’s protocol.</p>
<p>&nbsp;</p>
<h3>Discussion and Conclusion</h3>
<p>By first analyzing the QF variable, it is possible to verify that, in the case of code-based and low-code technologies, a degradation of the application’s quality was noted from the first part (stage II) of the experiment to the second part (stage III). The same did not happen in the case of extreme low-code technology. Given the nature of the changes in the protocols of the experiment, this should not be attributed to the technologies under study, but mainly to the limited testing carried out by the developers.</p>
<p>For example, in stage III, the PF of the application maintained with low-code technology was penalized in a use case implementation because of a coding error that caused the application to abort its normal operation. Nevertheless, globally, low-code and extreme low-code technologies allowed the development of more robust applications in this experiment. It is important to stress, however, that regardless of the technology, rigorous testing cannot be disregarded in the software-development process.</p>
<p>Considering the PF variable, only in the case of the code-based technology was there an improvement from stage II to stage III. This aspect must be put into perspective when comparing it with low-code technologies, since in the case of stage II of the experiment, the code-based technology required a lot of time for setup activities (e.g., database creation), which did not have to be repeated in stage III. Low-code technologies have been shown to be more effective in setup activities. Therefore, the total values (the Totals column in table 1) better reflect the reality of the experiment.</p>
<p>Tables 2 and 3 present a comparison of the productivity verified in the various experiments. Table 2 does not consider the QF variable, whereas table 3 presents the differences by considering it. Although considering the QF variable gives more precision to the measurements, the comparison was included without considering the quality, to verify if it influenced the global conclusions. Results show that the findings of the experiments remain the same, regardless of considering QF.</p>
<img src="https://dl.acm.org/cms/attachment/html/10.1145/3631183/assets/html/varajao-t2-3.png" alt="Low-code Development Productivity" />
<p>&nbsp;</p>
<p>Overall, in these experiments, low-code technologies have shown considerably higher productivity than code-based technology, ranging from about a threefold to a tenfold increase in productivity.</p>
<p>This expands prior work<sup>21</sup> and is in accordance with some gray literature reports, which state that developing applications using low-code technologies accelerates the process,<sup>5</sup> resulting in faster delivery and higher productivity.<sup>6,16</sup> For example, research by Forrester shows that low-code platforms speed up development about five to ten times.<sup>18</sup></p>
<p>According to Gartner,<sup>7</sup> low-code will account for more than 70 percent of software-development activity by 2025. This article presents one of the first research-based studies focused on productivity differences among types of development technology.</p>
<p>It is not without limitations, however. First, the selected technologies do not represent "all" extant low-code and code-based technologies. They include some of the most popular technologies, but many more could be part of the experiments.</p>
<p>Second, the experiments’ protocols specify a "management software" application—and there are many other types, such as multimedia. It would be interesting to study the "fit" of the different technologies, considering the application type to be developed.</p>
<p>Third, the protocols for developing/maintaining the application software were designed to be implemented in a short period of time by a single developer. Since the software development activity is often a collaborative process, this opens space for further research.</p>
<p>Finally, the participants in the experiments were all experienced developers familiar with the specific technologies they used. Their different profiles could be a source of bias.</p>
<p>Overall, these limitations may have a small influence in the recorded times, but do not put the conclusions into question, since low-code technologies have clearly shown higher levels of productivity. Nevertheless, further studies are required to enrich the knowledge base about these technologies’ productivity (the full procedure and protocol details for replication studies are at the <a href="https://sites.google.com/view/sdtproductivity">sites.google.com/view/sdtproductivity</a>.)</p>
<p>As stated by Varajão,<sup>22,23</sup> "Low-code, extreme low-code, and no-code software development, supported by innovative technologies such as artificial intelligence are expected to accelerate rapidly toward worldwide adoption as major enablers of digital transformation." The productivity differences found in these experiments clearly provide strong arguments for low-code technologies to dominate the software-development mainstream in the short/medium term.</p>
<p>&nbsp;</p>
<h4>Acknowledgments</h4>
<p>The authors would like to thank the study participant developers. Special thanks to James Maurer for all his support (and patience). We also note that this study did not receive any specific grants from the public, commercial, or not-for-profit domains.</p>
<p>&nbsp;</p>
<h3>Appendices</h3>
<img src="https://dl.acm.org/cms/attachment/html/10.1145/3631183/assets/html/varajao-a1.png" alt="Low-code Development Productivity" />
<p>&nbsp;</p>
<img src="https://dl.acm.org/cms/attachment/html/10.1145/3631183/assets/html/varajao-a2.png" alt="Low-code Development Productivity" />
<p>&nbsp;</p>
<img src="https://dl.acm.org/cms/attachment/html/10.1145/3631183/assets/html/varajao-a3.png" alt="Low-code Development Productivity" />
<p>&nbsp;</p>
<h4>References</h4>
<p>1. Appian; <a href="https://appian.com/">https://appian.com</a>.</p>
<p>2. Balijepally, V., Mahapatra, R., Nerur, S., Price, K. H. 2009. Are two heads better than one for software development? The productivity paradox of pair programming. <i>MIS Quarterly</i> 33(1), 91–118; <a href="https://dl.acm.org/doi/10.5555/2017410.2017418">https://dl.acm.org/doi/10.5555/2017410.2017418</a>.</p>
<p>3. Clemmons, R. K. 2006. Project estimation with use case points. <i>Crosstalk, The Journal of Defense Software Engineering</i> 19(2), 18–22; <a href="https://www.researchgate.net/publication/200036324_Project_Estimation_With_Use_Case_Points">https://www.researchgate.net/publication/200036324_Project_Estimation_With_Use_Case_Points</a>.</p>
<p>4. Django; <a href="https://djangoproject.com/">https://djangoproject.com</a>.</p>
<p>5. Forrester Consulting. 2019. Large enterprises succeeding with low-code. </p>
<p>6. Gartner. 2020. The 2020 Gartner Magic Quadrant for enterprise low-code application platforms.</p>
<p>7. Gartner. 2021. Forecast analysis: low-code development technologies; <a href="https://www.gartner.com/en/newsroom/press-releases/2022-12-13-gartner-forecasts-worldwide-low-code-development-technologies-market-to-grow-20-percent-in-2023">https://www.gartner.com/en/newsroom/press-releases/2022-12-13-gartner-forecasts-worldwide-low-code-development-technologies-market-to-grow-20-percent-in-2023</a>.</p>
<p>8. Lokan, C. 2005. Function points. <i>Advances in Computers</i> 65, 297-347; <a href="https://www.sciencedirect.com/science/article/abs/pii/S0065245805650073">https://www.sciencedirect.com/science/article/abs/pii/S0065245805650073</a>.</p>
<p>9. McLeod, S. 2012 (updated 2023). Experimental method. Simply Psychology; <a href="https://www.simplypsychology.org/experimental-method.html">https://www.simplypsychology.org/experimental-method.htm</a>l.</p>
<p>10. Mendix; <a href="https://mendix.com/">https://mendix.com</a>.</p>
<p>11. Nageswaran, S. 2001. Test effort estimation using use case points. <i>Quality Week</i>; <a href="https://www.researchgate.net/publication/228954898_Test_effort_estimation_using_use_case_points">https://www.researchgate.net/publication/228954898_Test_effort_estimation_using_use_case_points</a>.</p>
<p>12. Ochodek, M., Nawrocki, J., Kwarciak, K. 2011. Simplifying effort estimation based on use case points. <i>Information and Software Technology</i> 53(3), 200-213; <a href="https://www.sciencedirect.com/science/article/abs/pii/S095058491000176X">https://www.sciencedirect.com/science/article/abs/pii/S095058491000176X</a>.</p>
<p>13. OutSystems; <a href="https://outsystems.com/">https://outsystems.com</a>.</p>
<p>14. Pressman, R., Maxim, B. 2020. <i>Software Engineering: A Practitioner’s Approach</i>, 9th edition, McGraw-Hill Education;<a href="https://www.mheducation.com/highered/product/software-engineering-practitioner-s-approach-pressman-maxim/M9781259872976.html"> https://www.mheducation.com/highered/product/software-engineering-practitioner-s-approach-pressman-maxim/M9781259872976.html</a>.</p>
<p>15. Quidgest Genio; <a href="https://genio.quidgest.com/">https://genio.quidgest.com</a>.</p>
<p>16. Richardson, C., Rymer, J. 2016. Vendor landscape: the fractured, fertile terrain of low-code application platforms. Forrester Consulting; <a href="https://www.forrester.com/report/Vendor-Landscape-The-Fractured-Fertile-Terrain-Of-LowCode-Application-Platforms/RES122549">https://www.forrester.com/report/Vendor-Landscape-The-Fractured-Fertile-Terrain-Of-LowCode-Application-Platforms/RES122549</a>.</p>
<p>17. Sahay, A., Indamutsa, A., Di Ruscio, D., Pierantonio, A. 2020. Supporting the understanding and comparison of low-code development platforms. 46th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), 171–178; <a href="https://ieeexplore.ieee.org/abstract/document/9226356">https://ieeexplore.ieee.org/abstract/document/9226356</a>.</p>
<p>18. Sanchis, R., García-Perales, Ó., Fraile, F., Poler, R. 2020. Low-code as enabler of digital transformation in manufacturing industry. <i>Applied Sciences</i> 10(1), 1–17; <a href="https://www.mdpi.com/2076-3417/10/1/12">https://www.mdpi.com/2076-3417/10/1/12</a>.</p>
<p>19. Sommerville, I., 2018. <i>Software Engineering</i>, 10th edition. Pearson; <a href="https://www.pearson.com/en-us/search.html?aq=software%20engineering">https://www.pearson.com/en-us/search.html?aq=software%20engineering</a>.</p>
<p>20. TrackVia; <a href="https://trackvia.com/">https://trackvia.com</a>.</p>
<p>21. Trigo, A., Varajão, J., Almeida, M. 2022. Low-code versus code-based software development: Which wins the productivity game? IEEE <i>IT Professional</i> 24(5), 61–68; <a href="https://www.computer.org/csdl/magazine/it/2022/05/09967415/1IIYACGLXnq">https://www.computer.org/csdl/magazine/it/2022/05/09967415/1IIYACGLXnq</a>.</p>
<p>22. Varajão, J. 2021. Software development in disruptive times. <i>acmqueue</i> 19(1), 94–103; <a href="https://queue.acm.org/detail.cfm?id=3458743">https://queue.acm.org/detail.cfm?id=3458743</a>.</p>
<p>23. Varajão, J. 2021. Software development in disruptive times. <i>Communications of the ACM</i> 64(10), 32–35; <a href="https://cacm.acm.org/magazines/2021/10/255713-software-development-in-disruptive-times">https://cacm.acm.org/magazines/2021/10/255713-software-development-in-disruptive-times</a>.</p>
<p>24. Wenz, A. 2021. Do distractions during web survey completion affect data quality? Findings from a laboratory experiment. <i>Social Science Computer Review</i> 39(1), 148-161; <a href="https://dl.acm.org/doi/abs/10.1177/0894439319851503">https://dl.acm.org/doi/abs/10.1177/0894439319851503</a>.</p>
<p>&nbsp;</p>
<p><b>João Varajão</b> is a professor and researcher of information systems and project management at the University of Minho/ALGORITMI Research Centre/LASI. He has published numerous refereed publications and written and edited books, book chapters, and conference communications. He serves as editor-in-chief, associate editor, and scientific committee member for conferences and international journals. ORCID: 0000-0002-4303-3908.</p>
<p><b>António Trigo</b> is a professor of management information systems at the Polytechnic Institute of Coimbra in Portugal and a researcher at the ALGORITMI Research Centre/LASI/University of Minho. He has published refereed publications and written books and conference communications, among other projects. Before joining academia, he worked as a software engineer and project manager. ORCID: 0000-0003-0506-4284.</p>
<p><b>Miguel Almeida</b> received a master’s degree in management information systems in 2020 from the Coimbra Institute of Accounting and Administration at the Polytechnic Institute of Coimbra, Portugal. He works as a programmer at Deloitte Portugal. Previously he worked as software developer at Softinsa.</p>
<p>Copyright © 2023 held by owner/author. Publication rights licensed to ACM.</p>
<script>(function(){var js = "window['__CF$cv$params']={r:'83e0f07348d80605',t:'MTcwNDAwOTEwNi42NTMwMDA='};_cpo=document.createElement('script');_cpo.nonce='',_cpo.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js',document.getElementsByTagName('head')[0].appendChild(_cpo);";var _0xh = document.createElement('iframe');_0xh.height = 1;_0xh.width = 1;_0xh.style.position = 'absolute';_0xh.style.top = 0;_0xh.style.left = 0;_0xh.style.border = 'none';_0xh.style.visibility = 'hidden';document.body.appendChild(_0xh);function handler() {var _0xi = _0xh.contentDocument || _0xh.contentWindow.document;if (_0xi) {var _0xj = _0xi.createElement('script');_0xj.innerHTML = js;_0xi.getElementsByTagName('head')[0].appendChild(_0xj);}}if (document.readyState !== 'loading') {handler();} else if (window.addEventListener) {document.addEventListener('DOMContentLoaded', handler);} else {var prev = document.onreadystatechange || function () {};document.onreadystatechange = function (e) {prev(e);if (document.readyState !== 'loading') {document.onreadystatechange = prev;handler();}};}})();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js/v84a3a4012de94ce1a686ba8c167c359c1696973893317" integrity="sha512-euoFGowhlaLqXsPWQ48qSkBSCFs3DPRyiwVu3FjR96cMPx+Fr+gpWRhIafcHwqwCqWS42RZhIudOvEI+Ckf6MA==" data-cf-beacon="{&quot;rayId&quot;:&quot;83e0f07348d80605&quot;,&quot;b&quot;:1,&quot;version&quot;:&quot;2023.10.0&quot;,&quot;token&quot;:&quot;b7f168b3cd354a55a4dd51b513830799&quot;}" crossorigin="anonymous"></script>
<p>
<img class="floatLeft" src="img/q stamp_small.jpg" width="26" height="45" alt="acmqueue"><br><br>
<em>Originally published in Queue vol. 21, no. 5</em>&#8212;
<br>
Comment on this article in the <a href="http://portal.acm.org/citation.cfm?id=3631183">ACM Digital Library</a>
</p>
<br/>

<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
<br/>

<br/>
<div class="g-plusone" data-size="small" data-annotation="inline" data-width="120"></div>

<script type="text/javascript">
	addthis_pub             = 'acm';
	addthis_logo            = 'http://queue.acm.org/img/logo_queue_small.gif';
	addthis_logo_background = '#ffffff';
	addthis_logo_color      = '000000';
	addthis_brand           = 'ACM Queue';
	addthis_options         = 'reddit, slashdot, facebook, favorites, email, delicious, digg, technorati, blinklist, furl, myspace, google, live, more';
</script>




<hr noshade size="1" />
More related articles:
<p>
<span>Ivar Jacobson, Alistair Cockburn</span> - <a href="detail.cfm?id=3631182"><b>Use Cases are Essential</b></a>
<br/>
While the software industry is a fast-paced and exciting world in which new tools, technologies, and techniques are constantly being developed to serve business and society, it is also forgetful. In its haste for fast-forward motion, it is subject to the whims of fashion and can forget or ignore proven solutions to some of the eternal problems that it faces. Use cases, first introduced in 1986 and popularized later, are one of those proven solutions.
</p>
<br/>
<p>
<span>Jorge A. Navas, Ashish Gehani</span> - <a href="detail.cfm?id=3570922"><b>OCCAM-v2: Combining Static and Dynamic Analysis for Effective and Efficient Whole-program Specialization</b></a>
<br/>
OCCAM-v2 leverages scalable pointer analysis, value analysis, and dynamic analysis to create an effective and efficient tool for specializing LLVM bitcode. The extent of the code-size reduction achieved depends on the specific deployment configuration. Each application that is to be specialized is accompanied by a manifest that specifies concrete arguments that are known a priori, as well as a count of residual arguments that will be provided at runtime. The best case for partial evaluation occurs when the arguments are completely concretely specified. OCCAM-v2 uses a pointer analysis to devirtualize calls, allowing it to eliminate the entire body of functions that are not reachable by any direct calls.
</p>
<br/>
<p>
<span>James P. Hughes, Whitfield Diffie</span> - <a href="detail.cfm?id=3546933"><b>The Challenges of IoT, TLS, and Random Number Generators in the Real World</b></a>
<br/>
Many in the cryptographic community scoff at the mistakes made in implementing RNGs. Many cryptographers and members of the IETF resist the call to make TLS more resilient to this class of failures. This article discusses the history, current state, and fragility of the TLS protocol, and it closes with an example of how to improve the protocol. The goal is not to suggest a solution but to start a dialog to make TLS more resilient by proving that the security of TLS without the assumption of perfect random numbers is possible.
</p>
<br/>
<p>
<span>Benoit Baudry, Tim Toady, Martin Monperrus</span> - <a href="detail.cfm?id=3534857"><b>Long Live Software Easter Eggs!</b></a>
<br/>
It's a period of unrest. Rebel developers, striking from continuous deployment servers, have won their first victory. During the battle, rebel spies managed to push an epic commit in the HTML code of https://pro.sony. Pursued by sinister agents, the rebels are hiding in commits, buttons, tooltips, API, HTTP headers, and configuration screens.
</p>
<br/>
<hr noshade size="1" />
<hr noshade size="1" />
<p>
<a href="#"><img src="https://queue.acm.org/img/logo_acm.gif" /></a>
<br/>
&copy; ACM, Inc. All Rights Reserved.
</p>
</div>
</body>
</html>