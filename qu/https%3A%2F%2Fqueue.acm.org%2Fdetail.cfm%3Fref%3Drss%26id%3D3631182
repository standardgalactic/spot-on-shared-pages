<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>

<script src="/cdn-cgi/apps/head/nLYIPopMPWKseIlIthEH-UJkbT0.js"></script><script async src="https://www.googletagmanager.com/gtag/js?id=G-20JYM3ZFN0"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-20JYM3ZFN0');
</script>
<title>Use Cases are Essential - ACM Queue</title>
<meta name="description" value />
<meta name="keywords" value="Development" />

<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-P52H78L');</script>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="shortcut icon" href="favicon.ico" />
<script type="text/javascript" src="/js/jquery-1.2.6.min.js"></script>
<script type="text/javascript" src="/js/jquery.validate.min.js"></script>
<script type="text/javascript" src="/js/global.js"></script>
<link rel="alternate" type="application/rss+xml" title="Latest Queue Content RSS 2.0" href="/rss/feeds/latestitems.xml" />
<link rel="alternate" type="application/rss+xml" title="All Queue Content RSS 2.0" href="/rss/feeds/queuecontent.xml" />
<link rel="alternate" type="application/rss+xml" title="Curmudgeon RSS 2.0" href="/rss/feeds/curmudgeon.xml" />
<link rel="alternate" type="application/rss+xml" title="Opinion RSS 2.0" href="/rss/feeds/opinion.xml" />
<link rel="alternate" type="application/rss+xml" title="Kode Vicious RSS 2.0" href="/rss/feeds/kodevicious.xml" />
<link rel="alternate" type="application/rss+xml" title="ACM TechNews RSS" href="https://www.infoinc.com/acm/TechNews.rss" />
<link rel="alternate" type="application/rss+xml" title="Washington Updates RSS" href="https://usacm.acm.org/weblog2/?feed=rss2" />
<link rel="alternate" type="application/rss+xml" title="RISKS Forum RSS" href="/rss/feeds/risksforum.xml" />
<link rel="alternate" type="application/rss+xml" title="AI RSS 2.0" href="/rss/feeds/ai.xml" />
<link rel="alternate" type="application/rss+xml" title="API Design RSS 2.0" href="/rss/feeds/apidesign.xml" />
<link rel="alternate" type="application/rss+xml" title="Bioscience RSS 2.0" href="/rss/feeds/bioscience.xml" />
<link rel="alternate" type="application/rss+xml" title="Blockchain RSS 2.0" href="/rss/feeds/blockchain.xml" />
<link rel="alternate" type="application/rss+xml" title="Business/Management RSS 2.0" href="/rss/feeds/business/management.xml" />
<link rel="alternate" type="application/rss+xml" title="Compliance RSS 2.0" href="/rss/feeds/compliance.xml" />
<link rel="alternate" type="application/rss+xml" title="Component Technologies RSS 2.0" href="/rss/feeds/componenttechnologies.xml" />
<link rel="alternate" type="application/rss+xml" title="Computer Architecture RSS 2.0" href="/rss/feeds/computerarchitecture.xml" />
<link rel="alternate" type="application/rss+xml" title="Concurrency RSS 2.0" href="/rss/feeds/concurrency.xml" />
<link rel="alternate" type="application/rss+xml" title="Cryptocurrency RSS 2.0" href="/rss/feeds/cryptocurrency.xml" />
<link rel="alternate" type="application/rss+xml" title="DSPs RSS 2.0" href="/rss/feeds/dsps.xml" />
<link rel="alternate" type="application/rss+xml" title="Data RSS 2.0" href="/rss/feeds/data.xml" />
<link rel="alternate" type="application/rss+xml" title="Databases RSS 2.0" href="/rss/feeds/databases.xml" />
<link rel="alternate" type="application/rss+xml" title="Debugging RSS 2.0" href="/rss/feeds/debugging.xml" />
<link rel="alternate" type="application/rss+xml" title="Development RSS 2.0" href="/rss/feeds/development.xml" />
<link rel="alternate" type="application/rss+xml" title="Distributed Computing RSS 2.0" href="/rss/feeds/distributedcomputing.xml" />
<link rel="alternate" type="application/rss+xml" title="Distributed Development RSS 2.0" href="/rss/feeds/distributeddevelopment.xml" />
<link rel="alternate" type="application/rss+xml" title="Education RSS 2.0" href="/rss/feeds/education.xml" />
<link rel="alternate" type="application/rss+xml" title="Email and IM RSS 2.0" href="/rss/feeds/emailandim.xml" />
<link rel="alternate" type="application/rss+xml" title="Embedded Systems RSS 2.0" href="/rss/feeds/embeddedsystems.xml" />
<link rel="alternate" type="application/rss+xml" title="Failure and Recovery RSS 2.0" href="/rss/feeds/failureandrecovery.xml" />
<link rel="alternate" type="application/rss+xml" title="File Systems and Storage RSS 2.0" href="/rss/feeds/filesystemsandstorage.xml" />
<link rel="alternate" type="application/rss+xml" title="Game Development RSS 2.0" href="/rss/feeds/gamedevelopment.xml" />
<link rel="alternate" type="application/rss+xml" title="Graphics RSS 2.0" href="/rss/feeds/graphics.xml" />
<link rel="alternate" type="application/rss+xml" title="HCI RSS 2.0" href="/rss/feeds/hci.xml" />
<link rel="alternate" type="application/rss+xml" title="Managing Megaservices RSS 2.0" href="/rss/feeds/managingmegaservices.xml" />
<link rel="alternate" type="application/rss+xml" title="Mobile Computing RSS 2.0" href="/rss/feeds/mobilecomputing.xml" />
<link rel="alternate" type="application/rss+xml" title="Networks RSS 2.0" href="/rss/feeds/networks.xml" />
<link rel="alternate" type="application/rss+xml" title="Object-Relational Mapping RSS 2.0" href="/rss/feeds/object-relationalmapping.xml" />
<link rel="alternate" type="application/rss+xml" title="Open Source RSS 2.0" href="/rss/feeds/opensource.xml" />
<link rel="alternate" type="application/rss+xml" title="Patching and Deployment RSS 2.0" href="/rss/feeds/patchinganddeployment.xml" />
<link rel="alternate" type="application/rss+xml" title="Performance RSS 2.0" href="/rss/feeds/performance.xml" />
<link rel="alternate" type="application/rss+xml" title="Power Management RSS 2.0" href="/rss/feeds/powermanagement.xml" />
<link rel="alternate" type="application/rss+xml" title="Privacy and Rights RSS 2.0" href="/rss/feeds/privacyandrights.xml" />
<link rel="alternate" type="application/rss+xml" title="Processors RSS 2.0" href="/rss/feeds/processors.xml" />
<link rel="alternate" type="application/rss+xml" title="Programming Languages RSS 2.0" href="/rss/feeds/programminglanguages.xml" />
<link rel="alternate" type="application/rss+xml" title="Purpose-built Systems RSS 2.0" href="/rss/feeds/purpose-builtsystems.xml" />
<link rel="alternate" type="application/rss+xml" title="Quality Assurance RSS 2.0" href="/rss/feeds/qualityassurance.xml" />
<link rel="alternate" type="application/rss+xml" title="RFID RSS 2.0" href="/rss/feeds/rfid.xml" />
<link rel="alternate" type="application/rss+xml" title="SIP RSS 2.0" href="/rss/feeds/sip.xml" />
<link rel="alternate" type="application/rss+xml" title="Search Engines RSS 2.0" href="/rss/feeds/searchengines.xml" />
<link rel="alternate" type="application/rss+xml" title="Security RSS 2.0" href="/rss/feeds/security.xml" />
<link rel="alternate" type="application/rss+xml" title="Semi-structured Data RSS 2.0" href="/rss/feeds/semi-structureddata.xml" />
<link rel="alternate" type="application/rss+xml" title="Social Computing RSS 2.0" href="/rss/feeds/socialcomputing.xml" />
<link rel="alternate" type="application/rss+xml" title="System Administration RSS 2.0" href="/rss/feeds/systemadministration.xml" />
<link rel="alternate" type="application/rss+xml" title="System Evolution RSS 2.0" href="/rss/feeds/systemevolution.xml" />
<link rel="alternate" type="application/rss+xml" title="Testing RSS 2.0" href="/rss/feeds/testing.xml" />
<link rel="alternate" type="application/rss+xml" title="Virtual Machines RSS 2.0" href="/rss/feeds/virtualmachines.xml" />
<link rel="alternate" type="application/rss+xml" title="Virtualization RSS 2.0" href="/rss/feeds/virtualization.xml" />
<link rel="alternate" type="application/rss+xml" title="Visualization RSS 2.0" href="/rss/feeds/visualization.xml" />
<link rel="alternate" type="application/rss+xml" title="VoIP RSS 2.0" href="/rss/feeds/voip.xml" />
<link rel="alternate" type="application/rss+xml" title="Web Development RSS 2.0" href="/rss/feeds/webdevelopment.xml" />
<link rel="alternate" type="application/rss+xml" title="Web Security RSS 2.0" href="/rss/feeds/websecurity.xml" />
<link rel="alternate" type="application/rss+xml" title="Web Services RSS 2.0" href="/rss/feeds/webservices.xml" />
<link rel="alternate" type="application/rss+xml" title="Workflow Systems RSS 2.0" href="/rss/feeds/workflowsystems.xml" />
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-6562869-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
<script type="text/javascript">
function plusone_vote( obj ) {
_gaq.push(['_trackEvent','plusone',obj.state]);
}
</script>
<style>
body {
	font-family: jaf-bernino-sans, 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Geneva, Verdana, sans-serif;
	color: #333;
}
div.container p {
	line-height: 1.65em;
}
h1 {
	font-size: 32px;
}
h3 {
	font-size: 18px;
}
h4 {
	font-size: 14px;
}

div.container {
	margin-left: auto;
	margin-right: auto;
}

div {
	margin: 64px;
	max-width: 800px;
	position: relative;
}
img {
    max-width: 100%;
    height: auto;
    width: auto\9; /* ie8 */
}
a {
	color: #009;
	text-decoration: none;
}
a:hover {
	text-decoration: underline;
}
hr {
	margin:64px;
}
label {
	font-size: 0.8em;
	color: #666;
}
input {
	color: #999;
}

/* NAVBAR */
.navbar {
//	position: fixed;
	background: #EEEEEE;
	top: -64px;
	z-index: 10000;
	width: 100%;
	clear: both;
	padding: 0px;
	margin: 0px;
	padding-top: 10px;
	padding-left: 10px;
	padding-right: 10px;
}

/*  SECTIONS  */
.section {
	clear: both;
	padding: 0px;
	margin: 0px;
}

/*  COLUMN SETUP  */
.col {
	display: block;
	float:left;
	margin: 1% 0 1% 1.6%;
}
.col:first-child { margin-left: 0; }


/*  GROUPING  */
.group:before,
.group:after {
	content:"";
	display:table;
}
.group:after {
	clear:both;
}
.group {
    zoom:1; /* For IE 6/7 */
}

/*  GRID OF THREE  */
.span_3_of_3 {
	width: 100%;
}
.span_2_of_3 {
	width: 66.1%;
}
.span_1_of_3 {
	width: 32.2%;
}

/*  GO FULL WIDTH AT LESS THAN 480 PIXELS */

@media only screen and (max-width: 480px) {
	.col {
		margin: 1% 0 1% 0%;
	}
}

@media only screen and (max-width: 480px) {
	.span_3_of_3 {
		width: 100%;
	}
	.span_2_of_3 {
		width: 100%;
	}
	.span_1_of_3 {
		width: 100%;
	}
}

.span_2_of_2 {
	width: 100%;
}

.span_1_of_2 {
	width: 49.2%;
}

/*  GO FULL WIDTH AT LESS THAN 480 PIXELS */

@media only screen and (max-width: 480px) {
	.span_2_of_2 {
		width: 100%;
	}
	.span_1_of_2 {
		width: 100%;
	}
}
</style>
<style>
#form-search > .st-default-search-input {
	width: 170px;
  display: inline-block;
  height: 16px;
  padding: 7px 11px 7px 28px;
  border: 1px solid #bbb;
  border: 1px solid rgba(0,0,0,0.25);
  font-weight: 400;
  color: #3B454F;
  font-size: 14px;
  line-height: 16px;
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  font-family: system, -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Lucida Grande", sans-serif;
}


blockquote
{
    color: #666;
    font-size: 1.1em;
    background: none;
    border-left: .2rem solid #d3d3d3;

    display: block;
    padding: 20px 20px 10px 45px;
    margin: 20px 0;
    font-style: italic;

    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 40px;
    margin-inline-end: 40px;

	font-family: Georgia, Palatino, "Palatino Linotype", Times, "Times New Roman", serif;
}

.ldq {
	display: block;
    padding-left: 10px;
    content: "\201C";
    font-size: 60px;
    position: relative;
    left: -50px;
    top: 0;
    height: 0;
    color: #7a7a7a;
}
code {
	font-size:1.25em;
}
</style>
</head>
<body>

<div class="container">
<div class="navbar">
<form id="form-search" name="searchform" onsubmit="return false;" style="float:right;">
<input type="text" class="st-default-search-input">
<script type="text/javascript">
  (function(w,d,t,u,n,s,e){w['SwiftypeObject']=n;w[n]=w[n]||function(){
  (w[n].q=w[n].q||[]).push(arguments);};s=d.createElement(t);
  e=d.getElementsByTagName(t)[0];s.async=1;s.src=u;e.parentNode.insertBefore(s,e);
  })(window,document,'script','//s.swiftypecdn.com/install/v2/st.js','_st');

  _st('install','UyYECD1kdsPnbHJtPyzG','2.0.0');
</script>
<br/>
<a href="issuedetail.cfm?issue=3632533" style="width:150px;font-size:0.7em;">Current Issue</a> &nbsp; <a href="pastissues.cfm" style="width:150px;font-size:0.7em;">Past Issues</a> &nbsp; <a href="topics.cfm" style="width:150px;font-size:0.7em;">Topics</a>
</form>
<a href="/"><img src="https://queue.acm.org/img/acmqueue_logo.gif" /></a>
</div>

<br/>
<label>November 11, 2023<br/><b><a class="descriptor" href="issuedetail.cfm?issue=3632533">Volume 21, issue 5 </a></b></label>
<p>

&nbsp;
<a href="https://portal.acm.org/citation.cfm?id=3631182">
<img src="img/icon_pdf.png" alt="Download PDF version of this article" />
PDF
</a>
</p>
<h1 class="&quot;hidetitle&quot;">Use Cases are Essential</h1>
<h2>Use cases provide a proven method to capture and explain the requirements of a system in a concise and easily understood format.</h2>
<h3>Ivar Jacobson and Alistair Cockburn</h3>
<p>While the software industry is a fast-paced and exciting world in which new tools, technologies, and techniques are constantly being developed to serve business and society, it is also forgetful. In its haste for fast-forward motion, it is subject to the whims of fashion and can forget or ignore proven solutions to some of the eternal problems that it faces. Use cases, first introduced in 1986<sup>6</sup> and popularized later,<sup>3,7</sup> are one of those proven solutions. Ivar Jacobson and Alistair Cockburn, the two primary actors in this domain, are writing this article to describe to a new generation what use cases are and how they serve. </p>
<p>We believe there are many expert developers, analysts, and test specialists in the world today who are seeing shortcomings in their current ways of working, and are looking for a concise but robust way to describe and communicate requirements to their stakeholders. Use cases continue to solve a remarkable set of problems in a simple way, because they accomplish the following:</p>
<li>Make it easy for sponsors to see what they are getting.</li>
<li>Give business analysts a thought structure for investigating tricky business rules.</li>
<li>Give developers a context for what they are programming.</li>
<li>Give testers a scaffold for their function testing.</li>
<li>Keep the entire organization aligned with the value of the system being developed.</li>
<li>Capture a concise "permanent record" of the system, which is easy to update whenever the functionality of the system evolves.</li>
<li>Slice into increments and user stories to support agile software development practices.</li>
<p>And this is not even a complete list of benefits! Since use cases define the sequence of actions and interactions with actors, they can also drive user experience design and domain-driven design, enable business modeling and value stream analysis.</p>
<p>&nbsp;</p>
<h3>The "Why" of Use Cases</h3>
<p>Use cases serve to bind an organization to its offering or declared intention. For example, the use cases of self-driving cars specify or describe what extra functionality these cars should have. Use cases could describe a brand-new product or service, or an improvement to something that already exists. They are understood easily and liked by users, stakeholders, business analysts, and test specialists. </p>
<p>This concept is so popular that the term <i>use case</i> has even become a dictionary entry and yields 111M matches on a Google search today (<i>user story</i> returns 3.4M hits). The reason for such a big number is that use cases are used in all domains: self-driving cars, big data, IoT (Internet of Things), cloud computing. </p>
<p>Even a mediocre use case will provide significant benefits to sponsors, analysts, developers, and testers; it is not necessary to refine them to the nth degree to unlock this value. There is also a beautiful precision about use cases; when the international standard UML (Unified Modeling Language) is used, you can have a seamless transition from use cases in requirements to their realizations in design, to implementation, and all the way to tests.</p>
<p>Unfortunately, one important community has forgotten about—or rejected—use cases in their work: the new generation of software developers. Many people still do not yet understand how easy it is to adopt use cases as an integral part of an agile development process. The result? Use cases may well be created, maintained, and deliver significant value to many parts of an organization, but then developers incorrectly believe there is an impedance mismatch between use cases and the user stories they wish to work with. Indeed, once we heard a developer say to a business analyst, <i>"If you show up in our room with use cases, we won’t read them!"</i></p>
<p>Happily, we are now seeing a renaissance of use cases. Business analysts, even in agile projects, are using them to hold their business requirements together. A recent (2021) State of DevOps report also reinforced the importance of use cases:</p>
<p><i>"Document critical use cases for your products and services. What you document about a system is important, and use cases allow your readers to put the information, and your systems, to work."<sup>1</sup></i></p>
<p>&nbsp;</p>
<h3>What Does a Use Case Look Like?</h3>
<p>The OMG UML specification<sup>9</sup> defines use cases as follows:</p>
<p>"UseCases are a means to capture the requirements of systems, i.e., what systems are supposed to do. The key concepts specified are Actors, UseCases, and subjects. Each UseCase’s subject represents a system under consideration to which the UseCase applies. Users and any other systems that may interact with a subject are represented as Actors."</p>
<p>Each use case contains these key elements:</p>
<li> The name of the use case is the goal the primary actor wishes to achieve.</li>
<li> The main scenario describes who does what, so that goal is achieved in a straightforward manner. </li>
<li> The alternative conditions name all the things that can go wrong, or indicate how an alternative path to success might occur.</li>
<li> The alternative flows describe how each of those conditions is handled, either patching up the flow to success or ultimately failing.</li>
<p>An actor defines a role that a user can play when interacting with the system. A user can be an individual or another system. The primary actor is the one for which the use case is prevalent. This is the reason for the use case. Very often, this actor is also the one that raises the event. Secondary actors are often needed to help the system achieve the goal of the primary actor. The magic of the use case is how simply all this is accomplished.</p>
<p>Here is a sample use case from an actual project to illustrate.</p>
<div style="border:1px solid #999;padding:20px;margin:20px;">
<p><b>Place an order</b> </p>
<p><b>Primary actor:</b> Clerk</p>
<p>&nbsp;</p>
<p><b>Main scenario:</b></p>
<p> &nbsp; &nbsp; 1. Clerk identifies customer, item, and quantity. </p>
<p> &nbsp; &nbsp; 2. System accepts and queues the order.</p>
<p>&nbsp;</p>
<p><b>Alternatives:</b></p>
<p> &nbsp; &nbsp; 1a. Low credit &amp; Customer is ‘Preferred’: System gives them credit anyway.</p>
<p> &nbsp; &nbsp; 1b. Low credit &amp; not ‘Preferred’ Customer: Clerk accepts only prepayment.</p>
<p> &nbsp; &nbsp; 2a. Low on stock: Customer accepts raincheck: Clerk reduces order to available stock level.</p>
</div>
<p>&nbsp;</p>
<p>Note this example is a very simple, textual description of what has to happen, with no GUI (graphical user interface) described. It is so easy to read that any busy executive can scan it at a glance to see that key conditions are taken care of. At the same time, it is so complete that business analysts can investigate corner cases before the developers discover them. It provides the structure needed by testers to test completeness of the system’s functioning.</p>
<p>This readability is what makes use cases magical. Even a casually written use case provides the key values just outlined. The beauty of use cases is that they can be very effective when captured in structured text. </p>
<p>UML (the modeling standard language) can also be used to communicate key elements of the use case static view—a picture says more than a thousand words. Figure 1 shows a system called Warehouse Stock in which an actor Clerk has interactions with the use case Place an order, which in turn interacts with an actor Customer. </p>
<img src="https://dl.acm.org/cms/attachment/html/10.1145/3631182/assets/html/jacobson1.png" alt="Use Cases are Essential" />
<p>UML also allows us to describe the dynamic behavior and the interactions between actors and the use cases by applying sequence diagrams, collaboration diagrams, or activity diagrams if required.</p>
<p>&nbsp;</p>
<h3>The Benefits of Use Cases</h3>
<p>At the highest level—what we might call "the $100,000 level," a use case can outline what is going to be delivered in a way that everyone in the organization can read. Binding the organization together in intention is worth hundreds of thousands of dollars. A few hours spent in a use case brainstorming session can help all participants gain a common understanding of the proposed solution and produce an easy-to-understand set of Use Cases.</p>
<p>In the previous example, further discussion about the work of the Clerk clarifies the role of that actor and of the system in a number of uses cases: perform regular audits of the stock, place an order for the customer, restock products when required, and help the delivery agent unload products in the warehouse. The UML diagram now provides a simple, clear, permanent record of the use cases affecting the state of the system and the actors we have identified using that system. Figure 2 shows a Warehouse Stock system with more actors and use cases.</p>
<img src="https://dl.acm.org/cms/attachment/html/10.1145/3631182/assets/html/jacobson2.png" alt="Use Cases are Essential" />
<p>As mentioned earlier, binding the organization together in intention is literally worth hundreds of thousands of dollars.</p>
<p>&nbsp;</p>
<p><b>Story: </b><i>Almost a year after one use case training class at a large company, its CTO said in a public seminar that use cases had saved his project. When the use cases were inspected, they were ridiculously, preposterously simple—much simpler than the example provided here. </i></p>
<p><i>When asked how such simple use cases could possibly have saved the project, the executive said, "What normally happens is that the business asks dev to produce something. The developers then go away for a long time, get distracted by various interesting but irrelevant topics, and deliver something else.</i></p>
<p><i>In this case, the business asked for these simple things, the developers stayed on track and delivered exactly those. Those simple use cases made our project successful for a change."</i></p>
<p>At the next level down, what we might call "the $10,000 level," the use case provides a scaffold for the business analyst to discover difficult corner cases and investigate and find an answer to them before the developers and testers ask them awkward questions they can’t answer.</p>
<p>&nbsp;</p>
<p><b>Story:</b> <i>The Place an order use case example in this article is from an actual project. Alternative 1b was not in the original use case; there was only 1a, written as: "1a. Low credit &amp; Customer is ‘Preferred’: System gives them credit."</i></p>
<p>Oddly, no one had asked, at the beginning, what should happen if the customer was not preferred. Finally, someone asked about this. It might seem strange, but omissions happen this way quite often. In this example, it took several days of investigation for the answer to show up. </p>
<p>This lack of inquiry into corner cases happens a lot in real-world situations—and it is likely that a simple question like this may take days to get answered. But imagine the cost to the business if the system had been developed and delivered without that case being handled.</p>
<p>No other functional requirement format—not numbered requirements, not <i>shalls</i> and <i>shoulds</i>, not user stories, not story maps—provides this value.</p>
<p>At the next level down, what we might call "the $1,000 level," the use case provides a wonderful specification to both the developers and the testers. It names each scenario and what should happen in each case. </p>
<p>The point is that the top-level value of use cases is in aligning the entire organization to its goal. The detailed writing has very high value, but still orders of magnitude less than the top value offered by even informally written use cases. </p>
<p>&nbsp;</p>
<h3>Why Did People Stop Using Them?</h3>
<p>Three things put use cases on pause: the tendency to make a use case an encyclopedia entry for each functional requirement, that use cases force people to actually think about what they want, and agile’s counterproposal: "user stories."</p>
<p>&nbsp;</p>
<p>1. The first mistake is the tendency to make a use case an encyclopedia entry for the functional requirements and collect everything of interest to a use case under the description of that use case. The project manager and business analysts start adding anything into the use case they judge to be important or relevant information. As a result, a once-compact use case becomes a bloated storage space for every bit of information about that topic: UI design, complex business rules, detailed validations, interface definitions, data formats, and so on. They lose the $100,000 value of use cases: being readable to busy people in all parts of the organization. If we had one rule for use cases, it would be this: Every use case description should be easily readable. Be very strict and selective about what is included in the use case. Functional requirements, and only the non-functional requirements relating to the specific use case, should be included (in a concise manner).</p>
<p>&nbsp;</p>
<p>2. The second problem that use cases force people to actually think about what they wanted is highlighted by the story about finding out what to do about the non-preferred customers. They require thinking, and time to investigate. As the world has gotten to moving faster and working in the agile way, business analysts are given less and less time to think and investigate. Instead, they are told to just write a place-holder phrase and let the detailed conditions show up during development. </p>
<p>&nbsp;</p>
<p>3. The third force causing the move away from use cases is the user story. User stories were originally proposed for small, collocated projects, where the business expert was within short walking distance of the developers. A user story was quite literally "a reminder to have a conversation." The detailed requirements would evolve in a series of conversations as the developer showed the business person the growing function. Detailed specifications were never written down. The user story was never a requirements-capturing format; it was deliberately informal and incomplete.</p>
<p>In a parallel evolution, user stories also eventually became encyclopedias, as use cases once had. They were moved from index cards in small, conversational settings to online requirements and task lists in large, distributed projects. They lost both the advantages of use cases as readable holders of the project’s purpose, and the rapid feedback that permitted them to be incomplete. What they retained was the <i>idea</i> that it was not necessary to think, to think ahead, to think in detail, but only to program. Developers love this.</p>
<p>The combination of heavy upfront thinking, use cases as unreadable encyclopedias, and the alternative of user stories to avoid thinking and planning led to that remark, "<i>If you show up with use cases, we won’t read them."</i></p>
<p>&nbsp;</p>
<h3>The Renaissance of Use Cases</h3>
<p>Slowly, businesspeople again started finding the need to see their proposed systems in one place, and a new audience is starting to understand the true concept of use cases. They need to "see" their system in front of them and vouch for the consistency and completeness of their requests. Business analysts have started writing in use cases again, just to hold the business in view while the developers move in an agile fashion. </p>
<p>&nbsp;</p>
<p><b>Story:</b><i> In a recent project, the people knew nothing at all about use cases and little about user stories, and had only just recently heard about user story mapping. </i></p>
<p><i>The business analyst got a crash course about use cases, and wrote two of them in a simple, readable style. She also marked the user stories for them (as shown in the next section). Asked to come into the office to discuss the upcoming project, she showed her two use cases to the development lead, who knew nothing of use cases at all. He was pleased and said, "These are good, we can use these." Her business sponsor also liked that she could read them and see what business aspects were being covered by the new system.</i></p>
<p><i>The next day, however, the developers said they wanted to write user stories. She went back in and watched them pepper the wall with a random collection of sentences, often saying what they were going to do to the database, or some other internal programming task. </i></p>
<p><i>That’s when she said, "You can write user stories, but the ultimate repository of the business needs are in the use cases."</i></p>
<p><i>The next week, the developers said they wanted to use story mapping. She went back in and watched them paper the walls with rows and columns of—again—programming tasks. </i></p>
<p><i>From that point on, she wrote her use cases to keep her thoughts straight and to show to the other businesspeople. She continued to use those use cases to straighten out the story map, keep the columns oriented to real user needs, and find holes in the story map.</i></p>
<p>&nbsp;</p>
<h3>Use Cases Meet Agile Development </h3>
<p>Many people think that use cases are at odds with agile development, but they aren’t. The authors of this article, Ivar and Alistair, working separately in the early 2000s, found the same way to incorporate use cases into incremental and agile development. Ivar and his colleagues wrote up their results as "Use Cases 2.0";<sup>8</sup> Alistair taught a similar technique in his lectures and courses.<sup>4,5</sup> </p>
<p>Agile development relies on two things: (1) close collaboration between all specialties of a team; and (2) incremental development.</p>
<p>Keeping the use cases readable, even informal, helps the collaboration. All roles can read what is needed and stay in alignment. This is the easy part, or at least not a mysterious one. </p>
<p>The mysterious part (for many people) has always been how to write a use case in an evolutionary style, so that the first incremental delivery nicely shows the subset of functionality being delivered, while allowing the use case to grow with time and needs. </p>
<p>The answer is to separate the use case into a number of <i>slices,</i> where each slice can be implemented to form a work item that has clear value to the customer. A slice does not need to contain the entire flow and all of its test cases. The first slice might just be the "happy day" path through the main scenario and its test cases. </p>
<p>A practical starting point is to look at the first and possibly last sentence of the main scenario in our use case and implement that as our first slice and user story—a sort of envelope for all the rest to grow from. Later slices may implement alternative scenarios in the same incremental manner. Slices can be made as small or as large as the team prefers. </p>
<p>Here is another example, showing the growth of a use case for registering for college classes. It is from the book <i>Patterns for Effective Use Cases,</i> by Steve Adolph and Paul Bramble.<sup>2</sup></p>
<p> &nbsp; &nbsp; &nbsp; <b>First slice:</b> </p>
<div style="border:1px solid #999;padding:20px;margin:20px;">
<p><b>Register for courses</b> </p>
<p>Primary actor: Student</p>
<p>&nbsp;</p>
<p><b>Main scenario:</b></p>
<p> &nbsp; &nbsp; 1. Student requests to construct a schedule.</p>
<p> &nbsp; &nbsp; 2. The system prepares a blank schedule form.</p>
<p> &nbsp; &nbsp; 3. The Student indicates the schedule is complete. The system saves it.</p>
</div>
<p>&nbsp;</p>
<p>In good incremental style, the system does something useful but not yet with any detail. In the first slice, the first user story—which could be written as "Create and save a blank schedule"—will create a well-formed empty schedule in the database. </p>
<p>In the following expansion of the full use case, we label each additional slice with a number (in square brackets e.g. [1]). According to the team’s preferences, they might be done in a different order; this is just one possibility. Note how the first slice [1] captures the opening and closing steps. Note also how step 5 is split into two slices.</p>
<p>&nbsp;</p>
<div style="border:1px solid #999;padding:20px;margin:20px;">
<p> &nbsp; &nbsp; &nbsp; <b>Register for courses</b></p>
<p><b>Primary actor:</b> Student </p>
<p>&nbsp;</p>
<p><b>Main scenario:</b></p>
<p>[1] &nbsp; &nbsp; 1. Student requests to construct a schedule.</p>
<p>[1] &nbsp; &nbsp; 2. The system prepares a blank schedule form.</p>
<p>[2] &nbsp; &nbsp; 3. The system gets available courses from the Course Catalog System.</p>
<p>[3] &nbsp; &nbsp; 4. Student selects up to 4 primary and 2 alternate course offerings.</p>
<p>[4,5] &nbsp; 5. For each course, the system verifies that the Student has the necessary prerequisites and adds the Student to the course, marking Student as "enrolled" for that course in the schedule.</p>
<p>[1] &nbsp; &nbsp; 6. The Student indicates the schedule is complete; the system saves it.</p>
<p>&nbsp;</p>
<p><b>Alternatives:</b></p>
<p>[6] &nbsp; &nbsp; 1a. Student already has a schedule: </p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System brings up the current version of the Student’s schedule for editing, instead of creating a new one.</p>
<p>[7] &nbsp; &nbsp; 1b. Current semester is closed and next semester is not yet open: </p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System lets Student look at existing schedules but not create new ones.</p>
<p>[8] &nbsp; &nbsp; 3a. Course Catalog System does not respond: </p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; The system notifies the Student, and the use case ends.</p>
<p>[9] &nbsp; &nbsp; 5a. Course full or Student has not fulfilled all prerequisites: </p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System disables selection of that course and notifies the Student.</p>
</div>
<p>&nbsp;</p>
<p>By writing the use case in long form and then cutting it up into slices, the business analyst can keep track of the total context of what is being delivered and at the same time support the development team in working in an agile manner, possibly with user stories and story maps. This is exactly what the business analyst did in the earlier story. </p>
<p>The pictures in figure 3a show how the main scenario of the "Register for courses" use case might be implemented (for example) in five separate slices, with the developer team prioritizing delivery of the main scenario first. "Create and save a blank schedule" is delivered as the first user story. The alternative scenarios of this use case can also be delivered in several slices (four slices are shown in figure 3b).</p>
<img src="https://dl.acm.org/cms/attachment/html/10.1145/3631182/assets/html/jacobson3a.png" alt="Use Cases are Essential" />
<p>&nbsp;</p>
<img src="https://dl.acm.org/cms/attachment/html/10.1145/3631182/assets/html/jacobson3b.png" alt="Use Cases are Essential" />
<p>Depending on the project context, fixed-price bid, or evolutionary system, the use cases might be sketched or drafted at various levels. In the case of a fixed-price bid, they would have to be at least drafted at a complete level to identify interfaces that have to be developed and tricky corner cases that have to be researched. </p>
<p>In the evolutionary context, there might initially be only a brainstorming of the use case names, and a selection of one or two slices to expand for development. Following that, they would be named and drafted as needed, to keep the business in view and development on track. </p>
<p>&nbsp;</p>
<h3>Recapitulating Key Points</h3>
<p>Use cases solve a remarkable set of problems for many stakeholders in a simple way. Some benefits of use cases are:</p>
<li>Business sponsors appreciate the way use cases so clearly communicate how proposed solutions will fit into their businesses or their products. </li>
<li>Business analysts use them to align user and stakeholder needs. </li>
<li>Certain categories of developers enjoy seeing the usage context for each request.</li>
<li>Testers appreciate how they scaffold the functional tests and ensure that the pieces being put together fit together in a coherent way.</li>
<p>In addition, they can be written upfront for fixed-bid projects or written incrementally for evolutionary and agile projects. </p>
<p>The $100,000 value of use cases is showing what is going to be delivered in a way that everyone in the organization can read. Casual, readable use cases are still useful, whereas unreadable use cases won’t get read.</p>
<p>The $10,000 value of use cases is providing a scaffold for the business analysts to discover and investigate difficult corner cases before the developers and testers find them. It is the only technique we know of that provides this benefit.</p>
<p>The $1,000 value is providing a specification to the developers and the testers, giving context and naming each scenario and what should happen in each of those scenarios.</p>
<p>The key to getting those benefits is to keep the writing simple, avoid turning the use cases into encyclopedia entries, and in particular avoid putting UI details in them. Architects and UX (user experience) specialists can certainly take use cases as a key input to drive their own work, but their work outputs should not be added back into those use cases (except to correct the original use case).</p>
<p>Use cases provide a proven method to capture and explain the requirements of a system in a concise and easily understood format. They can be used at different levels: to capture the "big picture" view or describe more detailed requirements for developers or testers. Use cases are liked by businesspeople and provide a simple structure that helps business analysts probe into the corner cases of new requirements. Both Ivar’s use case 2.0 and Alistair’s agile use case method include the user stories and increments required by developers.</p>
<p>&nbsp;</p>
<h4>References</h4>
<p>1. Accelerate State of DevOps 2021<i>.</i> Google Cloud; <a href="https://dl.acm.org/&quot;https://services.google.com/fh/files/misc/state-of-devops-2021.pdf&quot;">https://services.google.com/fh/files/misc/state-of-devops-2021.pdf</a>.</p>
<p>2. Adolph, S., Bramble, P. 2003.<i> Patterns for Effective Use Cases</i>. Addison-Wesley. </p>
<p>3. Cockburn, A. 2001.<i> Writing Effective Use Cases.</i> Addison-Wesley. </p>
<p>4. Cockburn, A. 2003. Agile Use Cases<i>;</i><a href="https://dl.acm.org/&quot;https://web.archive.org/web/20140330015706/&quot;"> https://web.archive.org/web/20140330015706/</a> <a href="https://dl.acm.org/&quot;http://alistair.cockburn.us/get/2231&quot;">http://alistair.cockburn.us/get/2231</a>.</p>
<p>5. Cockburn, A. 2005. Use Cases for Agile and Traditional Development; <a href="https://dl.acm.org/&quot;https://web.archive.org/web/20140329233851/&quot;">https://web.archive.org/web/20140329233851/</a> <a href="https://dl.acm.org/&quot;http://alistair.cockburn.us/get/2232&quot;">http://alistair.cockburn.us/get/2232</a>.</p>
<p>6. Jacobson, I. 1987.<i> </i>Object-oriented software development in an industrial environment. In <i>Conference Proceedings of Object-oriented Programming Systems, Languages, and Applications (OOPSLA 87);</i> <a href="https://dl.acm.org/&quot;https://dl.acm.org/doi/10.1145/38765.38824&quot;">https://dl.acm.org/doi/10.1145/38765.38824</a>.</p>
<p>7. Jacobson, I., Christerson, M., Johnsson, P., Overgaards, G. 1992. Object-Oriented Software Engineering—A Use-Case Driven Approach.<i> </i>Addison-Wesley Professional. </p>
<p>8. Jacobson, I., Spence, I., Kerr, B. 2016. Use-Case 2.0. <i>acmqueue</i> 14(1); <a href="https://dl.acm.org/&quot;https://queue.acm.org/detail.cfm?id=2912151&quot;">https://queue.acm.org/detail.cfm?id=2912151</a>.</p>
<p>9. OMG. 2017. <i>OMG Unified Modeling Language (OMG UML), Version 2.5.1;</i> <a href="https://dl.acm.org/&quot;https://www.omg.org/spec/UML/2.5.1/PDF&quot;">https://www.omg.org/spec/UML/2.5.1/PDF</a>. </p>
<p>&nbsp;</p>
<p><b>A note about the authors</b></p>
<p><b>Ivar Jacobson</b> invented use cases in the 1980s, first presenting them to the world in a 1987 paper at the OOPSLA conference.<sup>6</sup></p>
<p><b>Alistair Cockburn</b>, while creating a methodology for object-oriented programming projects for the IBM Consulting Group, found that paper in 1991 and flew to Stockholm to learn about use cases from Ivar and his colleagues. Since that time, both authors have written extensively about use cases in separate books and articles. </p>
<p>Alistair, one of the co-authors of the Agile Manifesto in 2001, started adapting them to evolutionary and agile projects.<sup>4.5</sup> </p>
<p>Ivar, seeing a similar need, formalized the incremental approach as Use Cases 2.0.<sup>8</sup> To find more details about "Use Case 2.0" please refer to <a href="https://dl.acm.org/&quot;https://www.ivarjacobson.com/use-case-resources&quot;">https://www.ivarjacobson.com/use-case-resources</a>. You can read Alistair’s most recent writings at <a href="https://dl.acm.org/&quot;https://alistaircockburn.com/Publications&quot;">https://alistaircockburn.com/Publications</a>.</p>
<p>Copyright © 2023 held by owner/author. Publication rights licensed to ACM</p>
<script>(function(){var js = "window['__CF$cv$params']={r:'834b351db9980594',t:'MTcwMjQzOTA1NS4xNzQwMDA='};_cpo=document.createElement('script');_cpo.nonce='',_cpo.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js',document.getElementsByTagName('head')[0].appendChild(_cpo);";var _0xh = document.createElement('iframe');_0xh.height = 1;_0xh.width = 1;_0xh.style.position = 'absolute';_0xh.style.top = 0;_0xh.style.left = 0;_0xh.style.border = 'none';_0xh.style.visibility = 'hidden';document.body.appendChild(_0xh);function handler() {var _0xi = _0xh.contentDocument || _0xh.contentWindow.document;if (_0xi) {var _0xj = _0xi.createElement('script');_0xj.innerHTML = js;_0xi.getElementsByTagName('head')[0].appendChild(_0xj);}}if (document.readyState !== 'loading') {handler();} else if (window.addEventListener) {document.addEventListener('DOMContentLoaded', handler);} else {var prev = document.onreadystatechange || function () {};document.onreadystatechange = function (e) {prev(e);if (document.readyState !== 'loading') {document.onreadystatechange = prev;handler();}};}})();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js/v84a3a4012de94ce1a686ba8c167c359c1696973893317" integrity="sha512-euoFGowhlaLqXsPWQ48qSkBSCFs3DPRyiwVu3FjR96cMPx+Fr+gpWRhIafcHwqwCqWS42RZhIudOvEI+Ckf6MA==" data-cf-beacon="{&quot;rayId&quot;:&quot;834b351db9980594&quot;,&quot;b&quot;:1,&quot;version&quot;:&quot;2023.10.0&quot;,&quot;token&quot;:&quot;b7f168b3cd354a55a4dd51b513830799&quot;}" crossorigin="anonymous"></script>
<p>
<img class="floatLeft" src="img/q stamp_small.jpg" width="26" height="45" alt="acmqueue"><br><br>
<em>Originally published in Queue vol. 21, no. 5</em>&#8212;
<br>
Comment on this article in the <a href="http://portal.acm.org/citation.cfm?id=3631182">ACM Digital Library</a>
</p>
<br/>

<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
<br/>

<br/>
<div class="g-plusone" data-size="small" data-annotation="inline" data-width="120"></div>

<script type="text/javascript">
	addthis_pub             = 'acm';
	addthis_logo            = 'http://queue.acm.org/img/logo_queue_small.gif';
	addthis_logo_background = '#ffffff';
	addthis_logo_color      = '000000';
	addthis_brand           = 'ACM Queue';
	addthis_options         = 'reddit, slashdot, facebook, favorites, email, delicious, digg, technorati, blinklist, furl, myspace, google, live, more';
</script>




<hr noshade size="1" />
More related articles:
<p>
<span>Jo&#227;o Varaj&#227;o, Ant&#243;nio Trigo, Miguel Almeida</span> - <a href="detail.cfm?id=3631183"><b>Low-code Development Productivity</b></a>
<br/>
This article aims to provide new insights on the subject by presenting the results of laboratory experiments carried out with code-based, low-code, and extreme low-code technologies to study differences in productivity. Low-code technologies have clearly shown higher levels of productivity, providing strong arguments for low-code to dominate the software development mainstream in the short/medium term. The article reports the procedure and protocols, results, limitations, and opportunities for future research.
</p>
<br/>
<p>
<span>Jorge A. Navas, Ashish Gehani</span> - <a href="detail.cfm?id=3570922"><b>OCCAM-v2: Combining Static and Dynamic Analysis for Effective and Efficient Whole-program Specialization</b></a>
<br/>
OCCAM-v2 leverages scalable pointer analysis, value analysis, and dynamic analysis to create an effective and efficient tool for specializing LLVM bitcode. The extent of the code-size reduction achieved depends on the specific deployment configuration. Each application that is to be specialized is accompanied by a manifest that specifies concrete arguments that are known a priori, as well as a count of residual arguments that will be provided at runtime. The best case for partial evaluation occurs when the arguments are completely concretely specified. OCCAM-v2 uses a pointer analysis to devirtualize calls, allowing it to eliminate the entire body of functions that are not reachable by any direct calls.
</p>
<br/>
<p>
<span>James P. Hughes, Whitfield Diffie</span> - <a href="detail.cfm?id=3546933"><b>The Challenges of IoT, TLS, and Random Number Generators in the Real World</b></a>
<br/>
Many in the cryptographic community scoff at the mistakes made in implementing RNGs. Many cryptographers and members of the IETF resist the call to make TLS more resilient to this class of failures. This article discusses the history, current state, and fragility of the TLS protocol, and it closes with an example of how to improve the protocol. The goal is not to suggest a solution but to start a dialog to make TLS more resilient by proving that the security of TLS without the assumption of perfect random numbers is possible.
</p>
<br/>
<p>
<span>Benoit Baudry, Tim Toady, Martin Monperrus</span> - <a href="detail.cfm?id=3534857"><b>Long Live Software Easter Eggs!</b></a>
<br/>
It's a period of unrest. Rebel developers, striking from continuous deployment servers, have won their first victory. During the battle, rebel spies managed to push an epic commit in the HTML code of https://pro.sony. Pursued by sinister agents, the rebels are hiding in commits, buttons, tooltips, API, HTTP headers, and configuration screens.
</p>
<br/>
<hr noshade size="1" />
<hr noshade size="1" />
<p>
<a href="#"><img src="https://queue.acm.org/img/logo_acm.gif" /></a>
<br/>
&copy; ACM, Inc. All Rights Reserved.
</p>
</div>
</body>
</html>